!function(){"use strict";angular.module("GradeTrack",["ngRoute","ngAnimate","chart.js","ui.bootstrap","toastr"])}(),function(){"use strict";function t(t,e,s){var n=this;n.list=function(){return e.getActiveCourse().students},n.activeCourse=function(){return e.getActiveCourse()},n.overallGrade=function(t){return e.getOverallGrade(t,n.activeCourse())},n.removeStudent=function(e){var s=t.students.indexOf(e);s>-1&&t.students.splice(s,1)},n.openAddStudentModal=function(t){s.open({animation:!0,templateUrl:"app/AddStudent/AddStudentModal.html",controller:"AddStudentModalController",controllerAs:"AddStudentModalController",size:t})}}t.$inject=["StudentService","GradeService","$uibModal"],angular.module("GradeTrack").controller("StudentsController",t)}(),function(){"use strict";function t(t,e,s,n){var a=this;a.type="student",a.email="",a.username="",a.password="",a.firstName="",a.lastName="",a.studentID="",a.errorText={first:"",last:"",email:"",username:"",password:"",id:""},a.isInputError=function(){a.errorText.first=a.errorText.last=a.errorText.email=a.errorText.username=a.errorText.password=a.errorText.id="";var t=!1;return""==a.username&&(a.errorText.username="Enter a username",t=!0),""==a.password&&(a.errorText.password="Enter a password",t=!0),""==a.email?(a.errorText.email="Enter an email",t=!0):/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(a.email)||(a.errorText.email="Invalid email",t=!0),""==a.firstName&&(a.errorText.first="Enter a first name",t=!0),""==a.lastName&&(a.errorText.last="Enter a last name",t=!0),""==a.studentID?(a.errorText.id="Enter an ID",t=!0):isNaN(a.studentID)&&(a.errorText.id="Invalid ID",t=!0),t},a.signup=function(){if(!a.isInputError()){var t={username:a.username,email:a.email,firstName:a.firstName,lastName:a.lastName,password:a.password,type:a.type};e.post("http://http://grade-server.herokuapp.com/api/auth/signup",t),n.dismiss("cancel")}},a.close=function(){n.dismiss("cancel")}}t.$inject=["GradeService","$http","$scope","$uibModalInstance"],angular.module("GradeTrack").controller("signupModalController",t)}(),function(){"use strict";angular.module("GradeTrack").service("StudentService",function(){this.students=[{last:"Smith",first:"James",grade:"80%",email:"SmithJ@unlv.nevada.edu",id:"11223344"},{last:"Williams",first:"Rebecca",grade:"85%",email:"WilliamsR@unlv.nevada.edu",id:"2244553322"},{last:"Aster",first:"Billy",grade:"66%",email:"AsterB@unlv.nevada.edu",id:"43233333"},{last:"Bills",first:"Derek",grade:"90%",email:"BillsD@unlv.nevada.edu",id:"1010101010"},{last:"Dillan",first:"Ben",grade:"45%",email:"DillanB@unlv.nevada.edu",id:"3428237420"}],this.list=function(){return this.students}})}(),function(){"use strict";angular.module("GradeTrack").service("InfoService",function(){var t=!1,e=!1,s=!1;this.toggleDisable1=function(){e=!e},this.toggleDisable2=function(){t=!t},this.toggleShow3=function(){s=!s},this.editInfoStatus=function(){return t},this.editDesStatus=function(){return e},this.showTabStatus=function(){return s}})}(),function(){"use strict";angular.module("GradeTrack").service("GradeService",function(){this.loggedIn=!1,this.lastName="Prof",this.firstName="name",this.phone="(555) 555-5555",this.officeHours={office:"TBE-B 212",time:"Monday 2 - 3PM"},this.email="",this.username="",this.userID="",this.gradeAverageArray=[],this.courseNameArray=[],this.courses=[],this.postLogin=function(){this.loadTimelineData(),this.currentCourseID=0,this.currentAssignmentID=0,this.courses.length>0&&(this.activeCourse=this.courses[0])},this.visArray=[],this.loadTimelineData=function(){this.visArray=[];for(var t=0;t<this.courses.length;++t)this.visArray.push(this.createVisTimelineData(this.courses[t]))},this.createVisTimelineData=function(t){for(var e=[],s=0;s<t.assignments.length;++s){var n=t.assignments[s].dueDate,a=n.getFullYear()+"-"+n.getMonth()+"-"+n.getDate(),i={id:s+1,content:t.assignments[s].name,start:a};e.push(i)}return new vis.DataSet(e)},this.addCourse=function(t){var e={name:t,description:"",serverID:"",expanded:!1,average:Math.round(100*(50*Math.random()+50))/100,id:this.courses.length,assignments:[],students:[],tempDescription:"",weights:[{name:"Test",weight:40},{name:"Quiz",weight:30},{name:"Homework",weight:30}]};return this.courses.push(e),this.gradeAverageArray.push(e.average),this.courseNameArray.push(e.name),e},this.currentCourseID=0,this.getActiveCourse=function(){return this.courses[this.currentCourseID]},this.setActiveCourse=function(t){this.currentCourseID=t,this.currentAssignmentID=0},this.currentAssignmentID=0,this.getActiveAssignment=function(){return this.getActiveCourse().assignments[this.currentAssignmentID]},this.setActiveAssignment=function(t){this.currentAssignmentID=t},this.purgeData=function(){this.lastName="",this.firstName="",this.courses=[],this.gradeAverageArray=[],this.courseNameArray=[]},this.serverIDtoAssignmentID=function(t,e){for(var s=0;s<t.assignments.length;++s)if(t.assignments[s].serverID==e)return s;return-1},this.getOverallGrade=function(t,e){var s,n=0;if(t.assignmentGrades.length<1)return 0;for(s=0;s<t.assignmentGrades.length;++s)n+=t.assignmentGrades[s];var a=0;for(s=0;s<e.assignments.length;++s)a+=e.assignments[s].points;return 0==a?0:n/a*100},this.addStudent=function(t,e,s){for(var n={name:e,firstName:"",lastName:"",email:"",studentID:s,id:t.students.length,assignmentGrades:[],oldAssignmentGrades:[],overallGrade:0},a=0;a<t.assignments.length;++a)n.assignmentGrades.push(0),n.oldAssignmentGrades.push(0);return t.students.push(n),n},this.randomDate=function(){var t=2016,e=1+4*Math.random(),s=1+30*Math.random();return new Date(t,e,s)},this.addAssignment=function(t,e,s,n){var a={name:s,description:e,datepickerOpen:!1,id:t.assignments.length,points:n,serverID:"",type:"Test",dueDate:this.randomDate(),gradeArray:[0,0,0,0,0]};a.gradeArray[4]=t.students.length;for(var i=0;i<t.students.length;++i)t.students[i].assignmentGrades.push(0),t.students[i].oldAssignmentGrades.push(0);return t.assignments.push(a),a},this.activeCourse=this.courses[0]})}(),function(){"use strict";function t(t,e){var s=this;s.isLoggedIn=function(){return t.loggedIn},s.login=function(){t.loggedIn=!0},s.logout=function(){t.loggedIn=!1},s.tabs=[{active:!0,label:"Information",url:"#/information"},{active:!1,label:"Assignments",url:"#/assignments"},{active:!1,label:"Students",url:"#/students"}],s.openLogin=function(t){e.open({animation:!0,templateUrl:"app/login/LoginModal.html",controller:"LoginModalController",controllerAs:"LoginModalController",size:t})},s.openSignup=function(t){e.open({animation:!0,templateUrl:"app/signup/signupModal.html",controller:"signupModalController",controllerAs:"signupModalController",size:t})},s.openAddClass=function(t){e.open({animation:!0,templateUrl:"app/AddClass/AddClassModal.html",controller:"AddClassModalController",controllerAs:"AddClassModalController",size:t})},s.activeTab=s.tabs[0],s.lastName=function(){return t.firstName},s.firstName=function(){return t.lastName},s.courses=function(){return t.courses},s.getActiveCourse=function(){return t.getActiveCourse()},s.setActiveCourse=function(e){t.setActiveCourse(e)},s.clickTab=function(t,e){s.setActiveCourse(t.id),s.activeTab.active=!1,s.activeTab=e,s.activeTab.active=!0},s.isActiveTab=function(t,e){return t==s.getActiveCourse()&&e.active}}t.$inject=["GradeService","$uibModal"],angular.module("GradeTrack").controller("MainController",t)}(),function(){"use strict";function t(t,e,s,n,a){var i=this;i.username="",i.password="",i.errorText={password:"",username:"",login:""},i.checkInputErrors=function(){i.errorText.password=i.errorText.username=i.errorText.login="";var t=!1;return""==i.username&&(i.errorText.username="Enter a username",t=!0),""==i.password&&(i.errorText.password="Enter a password",t=!0),t},i.login=function(){if(!i.checkInputErrors()){var t={username:i.username,password:i.password};e.post("http://http://grade-server.herokuapp.com/api/auth/signin",t).then(function(){i.postLogin(t.username),a.dismiss("cancel")},function(){i.errorText.login="Invalid login"}),i.close()}},i.dataSet=!1,i.postLogin=function(s){var n={username:s};e.post("http://http://grade-server.herokuapp.com/api/info/user",n).then(function(e){if(!i.dataSet){t.firstName=e.data.firstName,t.lastName=e.data.lastName,t.email=e.data.email,t.userID=e.data.id,t.username=e.data.username;for(var s=0;s<e.data.courses.length;++s){var n=e.data.courses[s],a=t.addCourse(n.title);a.description=n.description,a.tempDescription=a.description,a.average=0,0!=n.total&&(a.average=n.earned/n.total),a.serverID=n.courseid;for(var r in n.assignments){var o=n.assignments[r],l=t.addAssignment(a,o.description,o.title,o.total);l.serverID=r,l.dueDate=new Date(o.due.year+"-"+o.due.month+"-"+o.due.day),l.gradeArray[4]=n.students.length}for(var d in n.students){var u=n.students[d],c=t.addStudent(a,u.firstName+" "+u.lastName,d);c.firstName=u.firstName,c.lastName=u.lastName,c.email=u.email,c.average=u.earned/u.total;for(var m in u.grades){var p=t.serverIDtoAssignmentID(a,m);c.assignmentGrades[p]=c.oldAssignmentGrades[p]=parseInt(u.grades[m],10);var g=0;0!=a.assignments[p].points&&(g=parseInt(u.grades[m],10)/a.assignments[p].points);var v=i.getGradeIndex(g);a.assignments[p].gradeArray[4]--,a.assignments[p].gradeArray[v]++}}for(var h=0;h<a.assignments.length;++h)a.assignments[h].gradeArray[4]=a.students.length}t.postLogin(),t.loggedIn=!0,i.dataSet=!0}},function(){i.errorText.login="Invalid login"})},i.getGradeIndex=function(t){return t>=.9?0:t>=.8?1:t>=.7?2:t>=.6?3:4},i.close=function(){a.dismiss("cancel")}}t.$inject=["GradeService","$http","$log","$scope","$uibModalInstance"],angular.module("GradeTrack").controller("LoginModalController",t)}(),function(){"use strict";function t(t,e){var s=this;s.activeCourse=function(){return e.getActiveCourse()},s.instName=e.lastName+" "+e.firstName,s.email=e.email,s.phone=e.phone,s.officeHours=e.officeHours,s.toggleDisable1=function(){if(t.editDesStatus())for(var s=e.courses,n=0;n<s.length;n++)s[n].tempDescription=s[n].description;t.toggleDisable1()},s.toggleDisable2=function(){t.toggleDisable2()},s.toggleShow3=function(){t.toggleShow3()},s.editInfoStatus=function(){return t.editInfoStatus()},s.editDesStatus=function(){return t.editDesStatus()},s.showTabStatus=function(){return t.showTabStatus()},s.submitNewDesc=function(){t.toggleDisable1(),e.getActiveCourse().description=e.getActiveCourse().tempDescription},s.genPDF=function(){}}t.$inject=["InfoService","GradeService"],angular.module("GradeTrack").controller("InformationController",t)}(),function(){"use strict";function t(){}angular.module("GradeTrack").controller("GradesController",t)}(),angular.module("GradeTrack").directive("timeline",function(){return{restrict:"E",replace:!0,template:"<div></div>",scope:{items:"=items",options:"=options"},link:function(t,e){new vis.Timeline(e[0],t.items,t.options)}}}),function(){"use strict";function t(t){var e=this;e.series=["Series A"],e.professorName=function(){return t.firstName+" "+t.lastName},e.studentsEnrolled=function(){for(var e=0,s=0;s<t.courses.length;++s)e+=t.courses[s].students.length;return e},t.loadTimelineData(),e.items=function(){return t.visArray},e.options={height:"150px",start:"2016-01-19",end:"2016-5-14"},e.getCourses=function(){return t.courses},e.getGradeArray=function(t){for(var e=[{grade:"A",amount:0},{grade:"B",amount:0},{grade:"C",amount:0},{grade:"D",amount:0},{grade:"F",amount:0}],s=0;s<t.students.length;++s){var n=0;n=t.students[s].average>=90?0:t.students[s].average>=80?1:t.students[s].average>=70?2:t.students[s].average>=60?3:4,++e[n].amount}return e},e.gradeAverageArray=[t.gradeAverageArray],e.courseNameArray=t.courseNameArray}t.$inject=["GradeService"],angular.module("GradeTrack").controller("DashboardController",t)}(),function(){"use strict";function t(t,e,s,n){var a=this;a.showDetails=!1,a.activeCourse=function(){return t.getActiveCourse()},a.activeAssignment=function(){return t.getActiveAssignment()},a.setActiveAssignment=function(e){t.setActiveAssignment(e)},a.clickAssignment=function(e){t.setActiveAssignment(e),a.showDetails=!0},a.submitAssignmentChanges=function(t,s){for(var a={courseid:s.serverID,assignmentid:t.serverID,students:[]},i=0;i<s.students.length;++i){var r={studentid:s.students[i].studentID,grade:s.students[i].assignmentGrades[t.id]};a.students.push(r)}n.post("http://http://grade-server.herokuapp.com/api/grade/update",a).then(function(){e.log("Grades updated")},function(){e.log("update failed")})},a.openAddAssignment=function(t){s.open({animation:!0,templateUrl:"app/AddAssignment/AddAssignmentModal.html",controller:"AddAssignmentModalController",controllerAs:"AddAssignmentModalController",size:t})},a.getGradeIndex=function(t){return t>=.9?0:t>=.8?1:t>=.7?2:t>=.6?3:4},a.changeGradeArray=function(t,e){var s=t.id,n=e.assignmentGrades[s],i=e.oldAssignmentGrades[s],r=4;null!=i&&(r=a.getGradeIndex(i/t.points));var o=4;null!=n&&(o=a.getGradeIndex(n/t.points)),--t.gradeArray[r],++t.gradeArray[o]},a.labelArray=["A","B","C","D","F"]}t.$inject=["GradeService","$log","$uibModal","$http"],angular.module("GradeTrack").controller("AssignmentsController",t)}(),function(){"use strict";function t(t,e,s,n){var a=this;a.course=t.getActiveCourse(),a.email="",a.firstName="",a.lastName="",a.studentID="",a.errorText={email:"",id:"",first:"",last:""},a.isInputError=function(){a.errorText.first=a.errorText.last=a.errorText.email=a.errorText.id="";var t=!1;return""==a.email?(a.errorText.email="Enter an email",t=!0):/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(a.email)||(a.errorText.email="Invalid email",t=!0),""==a.firstName&&(a.errorText.first="Enter a first name",t=!0),""==a.lastName&&(a.errorText.last="Enter a last name",t=!0),""==a.studentID?(a.errorText.id="Enter an ID",t=!0):isNaN(a.studentID)&&(a.errorText.id="Invalid ID",t=!0),t},a.addStudent=function(){a.isInputError()||(a.postAdd(),a.close())},a.postAdd=function(){var e=t.addStudent(a.course,a.firstName+" "+a.lastName,a.studentID);e.firstName=a.firstName,e.lastName=a.lastName,e.grade=0,e.email=a.email},a.close=function(){n.dismiss("cancel")}}t.$inject=["GradeService","$http","$scope","$uibModalInstance"],angular.module("GradeTrack").controller("AddStudentModalController",t)}(),function(){"use strict";function t(t,e,s,n){var a=this;a.close=function(){a.studentString="",a.courseName="",a.students=[],a.showError=!1,n.dismiss("cancel")},a.courseName="",a.students=[],a.studentString="",a.description="",a.errorText="",a.createSuccess=function(e){var s=t.addCourse(a.courseName);s.description=s.tempDescription=a.description,s.serverID=e;var n;for(n=0;n<a.students.length;++n)t.addStudent(s,a.students[n].name,0);var i={title:a.courseName,students:[],instructor:"",description:a.description};for(n=0;n<a.students.length;++n)i.students.push(a.students[n].name);i.instructor=t.firstName+" "+t.lastName},a.createCourse=function(){return a.errorText="",""==a.courseName?void(a.errorText="Enter a course name"):void e.post("http://http://grade-server.herokuapp.com/api/info/addcourse",{username:t.username,title:a.courseName,description:a.description}).then(function(t){a.createSuccess(t.data),n.dismiss("cancel"),a.close()},function(){})},a.addStudent=function(t){var e={name:t,id:a.students.length};a.students.push(e)},a.removeStudent=function(t){var e=a.students.indexOf(t);e>-1&&a.students.splice(e,1)},a.addMultipleStudents=function(){if(""!=a.studentString){for(var t=a.studentString,e=t.split(","),s=0;s<e.length;++s)a.addStudent(e[s]);a.studentString=""}}}t.$inject=["GradeService","$http","$scope","$uibModalInstance"],angular.module("GradeTrack").controller("AddClassModalController",t)}(),function(){"use strict";function t(t,e,s,n){var a=this;a.course=t.getActiveCourse(),a.assignmentDescription="",a.assignmentName="",a.points=0,a.dueDate=new Date,a.datepickerOpen=!1,a.errorText="",a.createSuccess=function(e){var s=t.addAssignment(a.course,a.assignmentDescription,a.assignmentName,a.points);s.serverID=e},a.addAssignment=function(){if(a.errorText="",""==a.assignmentName)return void(a.errorText="Enter an assignment name");var t={year:a.dueDate.getYear(),month:a.dueDate.getMonth(),day:a.dueDate.getDate(),hour:0,minute:0,second:0};e.post("http://http://grade-server.herokuapp.com/api/info/addassign",{courseid:a.course.serverID,title:a.assignmentName,description:a.assignmentDescription,total:a.points,due:t}).then(function(t){a.createSuccess(t.data),n.dismiss("cancel"),a.close()},function(){}),a.close()},a.close=function(){a.assignmentDescription="",a.assignmentName="",a.points=0,n.dismiss("cancel")}}t.$inject=["GradeService","$http","$scope","$uibModalInstance"],angular.module("GradeTrack").controller("AddAssignmentModalController",t)}(),function(){"use strict";function t(t){t.debug("runBlock end")}t.$inject=["$log"],angular.module("GradeTrack").run(t)}(),function(){"use strict";function t(t){t.when("/",{templateUrl:"app/dashboard/dashboard.html",controller:"DashboardController",controllerAs:"dashboardCtrl"}).when("/information",{templateUrl:"app/information/information.html",controller:"InformationController",controllerAs:"information"}).when("/assignments",{templateUrl:"app/assignments/assignments.html",controller:"AssignmentsController",controllerAs:"assignments"}).when("/students",{templateUrl:"app/students/students.html",controller:"StudentsController",controllerAs:"students"}).otherwise({redirectTo:"/"})}t.$inject=["$routeProvider"],angular.module("GradeTrack").config(t)}(),function(){"use strict";angular.module("GradeTrack").constant("malarkey",malarkey).constant("moment",moment)}(),function(){"use strict";function t(t,e){t.debugEnabled(!0),e.allowHtml=!0,e.timeOut=3e3,e.positionClass="toast-top-right",e.preventDuplicates=!0,e.progressBar=!0}t.$inject=["$logProvider","toastrConfig"],angular.module("GradeTrack").config(t)}(),angular.module("GradeTrack").run(["$templateCache",function(t){t.put("app/AddAssignment/AddAssignmentModal.html",'<div class=modal-header><h1 class=modal-addClassHeader>Add Assignment</h1><a href="" class=modal-closebutton ng-click=AddAssignmentModalController.close()>x</a></div><div class=modal-body><ul style=list-style:none><li class=modal-inputwrapper><div class=row><div class=col-md-6><div class=modal-infoheader>ASSIGNMENT NAME</div><div><input class=modal-username-input ng-model=AddAssignmentModalController.assignmentName type=text placeholder="Assignment Name"> <span class=modal-errortext>{{AddAssignmentModalController.errorText}}</span></div></div><div class=col-md-6><div class=modal-infoheader>POINTS</div><div><input class=modal-username-input ng-model=AddAssignmentModalController.points type=number></div></div></div></li><li><div class=modal-infoheader>DUE DATE</div><div class=row><div class=col-md-6 style=margin-left:-40px><div class=input-group><input type=text class=form-control datepicker-popup=fullDate ng-model=AddAssignmentModalController.dueDate is-open=AddAssignmentModalController.datepickerOpen ng-required=true close-text=Close> <span class=input-group-btn><button class="btn btn-default" ng-click="AddAssignmentModalController.datepickerOpen=true"><i class="glyphicon glyphicon-calendar"></i></button></span></div></div></div></li><li class=modal-inputwrapper><div class=row><div class=col-md-12><div class=modal-infoheader>DESCRIPTION</div><div><textarea ng-model=AddAssignmentModalController.assignmentDescription maxlength=1000 style="margin-left:-40px; margin-top:5px; display:inline;  width:calc(100% + 40px);  resize:none;  height:100px">\n          </textarea></div></div></div></li><li style=height:20px><button class="btn btn-primary" style=float:right ng-click=AddAssignmentModalController.addAssignment()>Add Assignment</button></li></ul></div>'),t.put("app/AddClass/AddClassModal.html",'<div class=modal-header><h1 class=modal-addClassHeader>Add Course</h1><a href="" class=modal-closebutton ng-click=AddClassModalController.close()>x</a></div><div class=modal-body><ul style=list-style:none><li class=modal-inputwrapper><div class=modal-infoheader>COURSE NAME</div><div><input class=modal-username-input ng-model=AddClassModalController.courseName type=text placeholder="Course Name"> <span class=modal-errortext>{{AddClassModalController.errorText}}</span></div></li><li class=modal-inputwrapper><div class=modal-infoheader>DESCRIPTION</div><textarea ng-model=AddClassModalController.description class=modal-coursedescription></textarea></li><li class=modal-inputwrapper><div class=modal-infoheader>STUDENTS</div><div><div class=modal-studentbox><ul><li><input class=modal-addStudentsInput type=text ng-model=AddClassModalController.studentString placeholder="Enter students, separated by commas"> <button class="btn btn-block modal-addStudentsButton" ng-click=AddClassModalController.addMultipleStudents()>Add Student(s)</button></li><li ng-repeat="student in AddClassModalController.students"><input class=modal-studentnameinput placeholder=name@institution.edu ng-model=student.name> <a href="" class=modal-removestudent ng-click=AddClassModalController.removeStudent(student)>x</a></li></ul></div></div></li><li style=height:20px><button class="btn btn-primary" style=float:right ng-click=AddClassModalController.createCourse()>Add Course</button></li></ul></div>'),t.put("app/AddStudent/AddStudentModal.html",'<div class=modal-header><h1 class=modal-addClassHeader>Add Student</h1><a href="" class=modal-closebutton ng-click=AddStudentModalController.close()>x</a></div><div class=modal-body><ul style=list-style:none><li class=modal-inputwrapper><div class=row><div class=col-md-6><div class=modal-infoheader>FIRST NAME</div><div><input class=modal-username-input ng-model=AddStudentModalController.firstName type=text placeholder="First Name"> <span class=modal-errortext>{{AddStudentModalController.errorText.first}}</span></div></div><div class=col-md-6><div class=modal-infoheader>LAST NAME</div><div><input class=modal-username-input ng-model=AddStudentModalController.lastName type=text placeholder="Last Name"> <span class=modal-errortext>{{AddStudentModalController.errorText.last}}</span></div></div></div></li><li class=modal-inputwrapper><div class=modal-infoheader>STUDENT ID</div><div><input class=modal-username-input ng-model=AddStudentModalController.studentID type=text placeholder="Student ID"> <span class=modal-errortext>{{AddStudentModalController.errorText.id}}</span></div></li><li class=modal-inputwrapper><div class=modal-infoheader>STUDENT EMAIL</div><div><input class=modal-username-input ng-model=AddStudentModalController.email type=text placeholder=name@institution.edu> <span class=modal-errortext>{{AddStudentModalController.errorText.email}}</span></div></li><li style=height:20px><button class="btn btn-primary" style=float:right ng-click=AddStudentModalController.addStudent()>Add Student</button></li></ul></div>'),t.put("app/assignments/assignments.html",'<div style="height:100%; width:100%"><div class=assignments-wrapper><div class=assignments-full-left-area><div ng-class="!assignments.showDetails ? \'assignments-leftside\' : \'assignments-leftside-small\'"><div class=assignments-leftbox><div class=assignments-header><div class=assignments-coursename>{{assignments.activeCourse().name}}</div></div><button class="btn btn-positive assignments-addassignmentbutton" ng-click="assignments.openAddAssignment(\'lg\')">Add Assignment</button><div class=assignmentName-background><ul class=assignments-assignmentlist><li ng-repeat="assignment in assignments.activeCourse().assignments"><div class=assignment-assignlistwrapper><div class=assignments-assignmentname><label for=assignmentInput></label><input maxlength=20 id=assignmentInput class=leftside-assignmentname-input type=text ng-model=assignment.name ng-click=assignments.clickAssignment(assignment.id)></div><div class=calendarWrapper><button type=button class="btn btn-default" ng-click="assignment.datepickerOpen=true"><i class="glyphicon glyphicon-calendar"></i></button></div><div class=calendarInput><input type=text datepicker-append-to-body=true class=form-control uib-datepicker-popup=fullDate ng-model=assignment.dueDate is-open=assignment.datepickerOpen datepicker-options="{zIndexOffset: 5000}" datepicker-append-to-body=true ng-required=true close-text=Close alt-input-formats=altInputFormats></div></div></li></ul></div></div></div></div><div class=assignments-full-right-area ng-show=assignments.showDetails><div ng-class="assignments.showDetails ? \'assignments-rightside-on\' : \'assignments-rightside-off\'"><div class=assignments-rightbox><div class=rightbox-Header><input maxlength=20 size=20 id=assignmentInput type=text ng-model=assignments.activeAssignment().name> <a href="" ng-click="assignments.showDetails=false">x</a></div><div class=rightbox-descriptionTitle><h4>Description</h4></div><div class=rightbox-descriptioninput><textarea ng-model=assignments.activeAssignment().description maxlength=1000></textarea></div><div class=rightbox-piechart><canvas height=100% width=100% id=pie class="chart chart-pie" chart-data=assignments.activeAssignment().gradeArray chart-labels=assignments.labelArray></canvas></div><hr class=rightbox-divider><div class=rightbox-pointswrapper><span>Points: <input type=number min=0 ng-model=assignments.activeAssignment().points> </span><span style="margin-top:1px; float:right; margin-right:32px"><button class="btn btn-sm btn-primary" ng-click="assignments.submitAssignmentChanges(assignments.activeAssignment(), assignments.activeCourse());">Submit</button></span></div><hr class=rightbox-divider><h4 class=rightbox-gradesheader>Grades</h4><div class=rightbox-gradesarea><ul><li ng-repeat="student in assignments.activeCourse().students"><span class=rightbox-studentname>{{student.name}}</span><div class=rightbox-studentGradeWrapper><span>{{student.assignmentGrades[assignments.activeAssignment().id] / assignments.activeAssignment().points * 100 | number:2}}%</span> <input type=number min=0 ng-model=student.assignmentGrades[assignments.activeAssignment().id] , ng-focus="student.oldAssignmentGrades[assignments.activeAssignment().id] = student.assignmentGrades[assignments.activeAssignment().id]" ng-blur="assignments.changeGradeArray(assignments.activeAssignment(), student); assignments.SendModifiedGrade(assignments.activeAssignment(), student)"></div></li></ul></div></div></div></div></div></div>'),t.put("app/dashboard/dashboard.html",'<div style="overflow-y:auto; width:100%; height:100%; position:absolute; overflow-x:hidden; background:lightblue; padding-left:10px; padding-right:10px; padding-bottom:10px"><!--card--><div class=row style="margin-top:10px; margin-left:5px; margin-right:5px; margin-bottom:10px"><div class=col-md-12 style="background:white; border-radius:20px"><div class=row><div class=col-md-6><h1>Welcome, {{dashboardCtrl.professorName()}}</h1><ul><li><h3>Classes managed: {{dashboardCtrl.getCourses().length}}</h3></li><li><h3>Total students enrolled: {{dashboardCtrl.studentsEnrolled()}}</h3></li></ul></div><div class=col-md-6><h1 style=text-align:center>Your class averages</h1><canvas id=bar class="chart chart-bar" chart-data=dashboardCtrl.gradeAverageArray chart-labels=dashboardCtrl.courseNameArray chart-series=dashboardCtrl.series></canvas></div></div></div></div><div class=row ng-repeat="course in dashboardCtrl.getCourses()" style="margin-top:10px; margin-left:5px; margin-right:5px; margin-bottom:10px"><div class=col-md-12 style="background:white; border-radius:20px"><div class=row><div class=col-md-10><h1>{{course.name}}</h1><h3>Students: {{ course.students.length }}</h3><div style="padding-bottom:10px; width:110%"><timeline items=dashboardCtrl.items()[$index] options=dashboardCtrl.options></timeline></div></div><div class=col-md-2><div class=row><div class=col-md-12 style=text-align:right><h4>Grade breakdown</h4></div></div><ul style=list-style:none><li ng-repeat="i in [0,1,2,3,4]"><div class=col-md-12><h5 style=float:right>{{dashboardCtrl.getGradeArray(course)[i].grade}}: {{dashboardCtrl.getGradeArray(course)[i].amount}}</h5></div></li></ul></div></div></div></div></div>'),t.put("app/grades/grades.html",'<head><style>table, th, td{\n      border: 1px solid grey;\n      border-collapse: collapse;\n      padding: 5px;\n    }\n\n    table tr:nth-child(odd){\n      background-color: #f2f2f2;\n    }\n\n    table tr:nth-child(even){\n      background-color: #ffffff;\n    }</style></head><body><h2>Grades for Students</h2><div ng-controller=GradesController as vm style="100%; width:100%"><table border=0><tr><td>Last Name</td><td>First Name</td><td>Grade Percentage</td><td>Grade Letter</td></tr><tr ng-repeat="course in courses.student460"><td>{{student46.first}}</td><td>{{student46.last}}</td><td>{{student46.percent}}</td><td>{{student46.letter}}</td></tr></table><div class=grades-wrapper></div></div></body>'),t.put("app/information/information.html",'<div style="width:100%; height:100%; overflow-x: hidden"><div class=information-course-area><div class=information-main><div style="float:right; margin-bottom:5px"><button type=button class="btn btn-primary" ng-click=information.fillSyllabus()>Fill Syllabus</button></div><div style="overflow:hidden; border-radius:10px; padding-left:10px; padding-right:10px; background:#e9eef5; border:thin solid #000000; position:relative; left:0; width:100%; top:0; height:100%"><div style="background:#d4e4fa; border-bottom:thin solid #000000;  height:35px; margin-left:-10px; margin-right:-10px"><div style="padding-top:4px; padding-left:10px;font-size:20px">{{information.activeCourse().name}}</div></div><div style="margin-top:10px; margin-bottom:10px; overflow:auto; background:#FFFFFF"><div class=infoSection><label for=classInfo style="display: block"><div style="margin-bottom: -26px">Description</div><button type=button class="btn btn-default infoButton" ng-click=information.toggleDisable1()><span class="glyphicon glyphicon-edit"></span></button></label><textarea class=form-control id=classInfo rows=8 ng-disabled=!information.editDesStatus() ng-model=information.activeCourse().tempDescription></textarea><!--<input type="submit" ng-disabled="!editInfo" ng-click="toggleDisable1()">--><br><button type=button class="btn btn-primary" ng-disabled=!information.editDesStatus() ng-click=information.submitNewDesc()>Submit</button></div></div></div></div></div><!--instructor area--><div class=information-instructor-area><div class=information-main><div style="overflow:hidden; border-radius:10px; padding-left:10px; padding-right:10px; background:#e9eef5; border:thin solid #000000; position:relative; left:0; width:100%; top:0; height:100%"><div style="background:#d4e4fa; border-bottom:thin solid #000000;  height:35px; margin-left:-10px; margin-right:-10px"><div style="padding-top:4px; padding-left:10px;font-size:20px">Professor Information</div></div><div style="margin-top:10px; margin-bottom:10px; overflow:auto; background:#FFFFFF"><div class=infoSection><table class=table style="margin-bottom: -10px"><tbody><tr><th>Name</th><td>{{information.instName}}</td></tr><tr><th>Email</th><td>{{information.email}}</td></tr><tr><th>Phone</th><td>{{information.phone}}</td></tr><tr><th>Office Hours</th><td>{{information.officeHours.office}}<br>{{information.officeHours.time}}</td></tr></tbody></table><!--form inputs for name, email, phone, and office hours--><!--<table class="table table-bordered" style="margin-bottom:0px;">\n              <tr><td>\n								<form class="form-inline">\n	                <div class="form-group" style="text-align:center; width:100%;">\n	                    <label style="float:left;" for="profName">Name</label>\n	                    <input type="text" class="form-control" id="profName" placeholder="{{information.instName}}">\n	                </div>\n              	</form>\n							</td></tr>\n\n							<tr><td>\n              	<form class="form-inline">\n                	<div class="form-group" style="text-align:center; width:100%;">\n                    <label style="float:left;" for="profEmail">Email</label>\n                    <input type="text" class="form-control" id="profEmail" placeholder="{{information.email}}">\n              		</div>\n            		</form>\n							</td></tr>\n\n							<tr><td>\n              	<form class="form-inline">\n                	<div class="form-group" style="text-align:center; width:100%;">\n                    <label style="float:left;" for="profName">Phone</label>\n                    <input style="margin-left:-7px;" type="text" class="form-control" id="profPhone" placeholder="{{information.phone}}">\n                	</div>\n            		</form>\n							</td></tr>\n\n							<tr><td>\n              	<form class="form-inline">\n                	<div class="form-group" style="text-align:center; width:100%;">\n                    <label style="float:left;" for="profOffice">Office Hours</label>\n                    <input style="margin-left:-49px;" type="text" class="form-control" id="profOffice" placeholder="TBE-B 212">\n                	</div>\n              	</form>\n\n              	<form class="form-inline">\n                	<div class="form-group" style="text-align:center; width:100%;">\n                    <input style="margin-left:37px;" type="text" class="form-control" id="profHours" placeholder="Monday 2:00 - 3:00pm">\n                	</div>\n              	</form>\n							</td></tr>\n						</table>--><!--OLD STUFF--><!-- Section for Instructor --><!--<section class="col-xs-9">\n                <div class="infoHeader">\n                  <h3> Instructor Information\n                  <lable>\n                    <button type="button" class="btn btn-default infoButton" ng-click="toggleDisable2()">\n                    <span class="glyphicon glyphicon-edit"></span>\n                    </button>\n                  </lable>\n                  </h3>\n                </div>\n\n                <div class="infoSection">\n                  <label>\n                    <ul class="list-group">\n                      <br>\n                      <li class="list-group-item">\n                        Name: <input type="text" value="{{profile.firstName}}{{profile.lastName}} " ng-disabled="!editInfo"><br>\n                      </li>\n                      <br>\n                      <li class="list-group-item">\n                        Email: <input type="text" value="{{profile.email}}" ng-disabled="!editInfo"><br>\n                      </li>\n                      <br>\n                      <li class="list-group-item">\n                        Phone: <input type="text" value="{{profile.email}}" ng-disabled="!editInfo"><br>\n                      </li>\n                      <br>\n                      <li class="list-group-item">\n                        Office Houes: <input type="text" value="{{profile.office}}" ng-disabled="!editInfo">\n                                 <input type="text" value="{{profile.hours}}" ng-disabled="!editInfo"><br>\n                      </li>--><!-- <input type="submit" ng-disabled="!editInfo" ng-click="toggleDisable2()"> --><!--</label>\n                </div>\n              </section>--><!-- Section for TA   (the bottom not works yet)--><!--<section class="col-xs-9">\n\n                <div class="infoHeader">\n                  <h3> Teacher\'s Assistant\n                    <lable>\n                      <button type="button" class="btn btn-default infoButton" ng-click="toggleDisable3()">\n                        <span class="glyphicon glyphicon-plus"></span>\n                      </button>\n                    </lable>\n                  </h3>\n                </div>\n\n                <div class="infoSection" ng-show="!ShowTab">\n                  <lable>\n                    <ul class="list-group">\n                      <br>\n                      <li class="list-group-item">\n                        Name: <input type="text" value="{{profile.firstName}}{{profile.lastName}} " ng-disabled="!editInfo"><br>\n                      </li>\n                      <br>\n                      <li class="list-group-item">\n                        Email: <input type="text" value="{{profile.email}}" ng-disabled="!editInfo"><br>\n                      </li>\n                    </lable>\n                  </div>\n                </div>\n              </section>--></div></div></div></div></div></div>'),
t.put("app/information/syllabus.html",'<div ng-controller="InformationController as vm" style="height:100%; width:100%"></div>'),t.put("app/login/LoginModal.html",'<div class=modal-header><h1 style="margin-top:10px; text-align:center">Log In</h1><a href="" class=modal-closebutton ng-click=LoginModalController.close()>x</a></div><div class=modal-body><ul style=list-style:none><li class=modal-inputwrapper><div class=modal-infoheader>EMAIL ADDRESS</div><div><input class=modal-password-input type=text ng-model=LoginModalController.username placeholder=name@company.com> <span class=modal-errortext style=margin-left:-40px>{{LoginModalController.errorText.username}}</span></div></li><li class=modal-inputwrapper><div class=modal-infoheader>PASSWORD</div><div><input class=modal-password-input type=password ng-model=LoginModalController.password placeholder=Password> <span class=modal-errortext style=margin-left:-40px>{{LoginModalController.errorText.password}}</span></div></li><li style=height:20px><span class=modal-errortext style="position:absolute; left:15px; bottom:20px">{{LoginModalController.errorText.login}}</span> <button class="btn btn-primary" style=float:right ng-click=LoginModalController.login()>Log In</button></li></ul></div>'),t.put("app/signup/signupModal.html",'<div class=modal-header><h1 style="margin-top:10px; text-align:center">Sign Up</h1><a href="" class=modal-closebutton ng-click=signupModalController.close()>x</a></div><div class=modal-body><ul style=list-style:none><li class=modal-inputwrapper><div class=row><div class=col-md-6><div class=modal-infoheader>FIRST NAME</div><div><input class=modal-username-input type=text ng-model=signupModalController.firstName placeholder=""> <span class=modal-errortext>{{signupModalController.errorText.first}}</span></div></div><div class=col-md-6><div class=modal-infoheader>LAST NAME</div><div><input class=modal-username-input type=text ng-model=signupModalController.lastName placeholder=""> <span class=modal-errortext>{{signupModalController.errorText.last}}</span></div></div></div></li><li class=modal-inputwrapper><div class=row><div class=col-md-6><div class=modal-infoheader>USERNAME</div><div><input class=modal-username-input type=text ng-model=signupModalController.username placeholder=Username> <span class=modal-errortext>{{signupModalController.errorText.username}}</span></div></div><div class=col-md-6><div class=modal-infoheader>STUDENT ID</div><div><input class=modal-username-input type=text ng-model=signupModalController.studentID placeholder=""> <span class=modal-errortext>{{signupModalController.errorText.id}}</span></div></div></div></li><li class=modal-inputwrapper><div class=row><div class=col-md-6><div class=modal-infoheader>EMAIL ADDRESS</div><div><input class=modal-username-input type=text ng-model=signupModalController.email placeholder=name@company.com> <span class=modal-errortext>{{signupModalController.errorText.email}}</span></div></div><div class=col-md-6><div class=modal-infoheader>ACCOUNT TYPE</div><div style=margin-left:-40px class=btn-group data-toggle=buttons><label ng-class="signupModalController.type==\'student\' ? \'btn btn-primary\' : \'btn btn-primary active\'"><input type=radio name=options ng-model=signupModalController.type value=instructor autocomplete=off checked> Instructor</label><label ng-class="signupModalController.type==\'student\' ? \'btn btn-primary active\' : \'btn btn-primary\'"><input type=radio name=options ng-model=signupModalController.type value=student autocomplete=off> Student</label></div></div></div></li><li class=modal-inputwrapper><div class=modal-infoheader>PASSWORD</div><div><input class=modal-username-input type=password ng-model=signupModalController.password placeholder=Password> <span class=modal-errortext>{{signupModalController.errorText.password}}</span></div></li><li style=height:20px><button class="btn btn-primary" style=float:right ng-click=signupModalController.signup()>Sign Up</button></li></ul></div>'),t.put("app/students/students.html",'<div ng-controller="StudentsController as vm" style="height:100%; width:100%"><div class=students-wrapper><div class=students-full-main-area><div class=students-main><div style="overflow:hidden; border-radius:10px; padding-left:10px; padding-right:10px; background:#e9eef5; border:thin solid #000000; position:relative; left:0; width:100%; top:0; height:100%"><div style="background:#d4e4fa; border-bottom:thin solid #000000;  height:35px; margin-left:-10px; margin-right:-10px"><div style="padding-top:4px; padding-left:10px;font-size:20px">{{vm.activeCourse().name}}</div><div><button ng-click="students.openAddStudentModal(\'lg\')" class="btn btn-primary btn-sm" style="position:absolute; right:5px; top:2px">Add Student</button></div></div><div style="margin-top:10px; margin-bottom:10px; height:calc(100vh - 170px); overflow:auto; background:#d1c4e9; box-shadow: 10px 10px 5px #888888"><!--Switching to BS table--><table class="table table-striped"><thead><tr><th>Last Name</th><th>First Name</th><th>Grade</th><th>E-mail</th><th>ID</th></tr></thead><tbody><tr ng-repeat="student in students.list()"><td>{{student.lastName}}</td><td>{{student.firstName}}</td><td>{{students.overallGrade(student) | number:2 }}%</td><td>{{student.email}}</td><td>{{student.studentID}}</td><td><button class="btn btn-danger btn-sm glyphicon glyphicon-remove students-removebutton" ng-click=students.removeStudent(student)></button></td></tr></tbody></table></div></div></div></div></div></div>')}]);
//# sourceMappingURL=../maps/scripts/app-e98a967239.js.map
