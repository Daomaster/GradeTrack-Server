{"version":3,"sources":["scripts/app.js"],"names":["angular","module","StudentsController","StudentService","GradeService","$uibModal","vm","this","list","activeCourse","getActiveCourse","removeStudent","student","index","students","indexOf","splice","openAddStudentModal","size","open","animation","templateUrl","controller","controllerAs","$inject","signupModalController","$http","$scope","$uibModalInstance","type","email","username","password","firstName","lastName","studentID","errorText","first","last","id","isInputError","error","test","isNaN","signup","userInfo","post","dismiss","close","service","grade","editInfo","editDes","showTab","toggleDisable1","toggleDisable2","toggleShow3","editInfoStatus","loggedIn","gradeAverageArray","courseNameArray","courses","postLogin","currentCourseID","currentAssignmentID","length","addCourse","name_","c","name","expanded","average","Math","round","random","assignments","weights","weight","push","setActiveCourse","getActiveAssignment","setActiveAssignment","purgeData","addStudent","course","id_","t","assignmentGrades","oldAssignmentGrades","overallGrade","i","randomDate","year","month","day","Date","addAssignment","description_","assignmentName","_points","description","datepickerOpen","points","dueDate","gradeArray","toString","j","k","l","MainController","isLoggedIn","login","logout","tabs","active","label","url","openLogin","openSignup","openAddClass","activeTab","clickTab","tab","isActiveTab","LoginModalController","checkInputErrors","loginInfo","then","InformationController","InfoService","GradesController","directive","restrict","replace","template","scope","items","options","link","element","vis","Timeline","DashboardController","series","professorName","studentsEnrolled","answer","createVisTimelineData","data","date","dateString","getFullYear","getMonth","getDate","assign","content","start","DataSet","height","end","getCourses","getGradeArray","result","amount","AddStudentModalController","newStudent","AssignmentsController","$log","showDetails","activeAssignment","clickAssignment","openAddAssignment","SendModifiedDueDate","assignment","log","SendModifiedGrade","SendModifiedPoints","SendModifiedDescription","SendModifiedAssignmentName","getGradeIndex","percent","changeGradeArray","newGrade","oldGrade","oldIndex","newIndex","labelArray","AddAssignmentModalController","assignmentDescription","AddClassModalController","studentString","courseName","showError","createCourse","title","instructor","insName","addMultipleStudents","names","split","runBlock","debug","run","routeConfig","$routeProvider","when","otherwise","redirectTo","config","constant","malarkey","moment","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","$templateCache","put"],"mappings":"CAAA,WACE,YAEAA,SACGC,OAAO,cAAe,UAAW,YAAa,WAAY,eAAgB,cAI/E,WACE,YAOA,SAASC,GAAmBC,EAAgBC,EAAcC,GACxD,GAAIC,GAAKC,IAETD,GAAGE,KAAO,WAAa,MAAOL,GAAeK,QAC7CF,EAAGG,aAAe,WAAa,MAAOL,GAAaM,mBAEnDJ,EAAGK,cAAgB,SAASC,GAG1B,GAAIC,GAAQV,EAAeW,SAASC,QAAQH,EACxCC,GAAQ,IAEVV,EAAeW,SAASE,OAAOH,EAAM,IAIzCP,EAAGW,oBAAsB,SAAUC,GAEjCb,EAAUc,MACRC,WAAW,EACXC,YAAa,sCACbC,WAAY,4BACZC,aAAc,4BACdL,KAAMA,KA5BZhB,EAAmBsB,SAAW,iBAAkB,eAAgB,aAAhExB,QACGC,OAAO,cACPqB,WAAW,qBAAsBpB,MAgCtC,WACE,YAOA,SAASuB,GAAsBrB,EAAcsB,EAAOC,EAAQC,GAC1D,GAAItB,GAAKC,IACTD,GAAGuB,KAAO,UACVvB,EAAGwB,MAAQ,GACXxB,EAAGyB,SAAW,GACdzB,EAAG0B,SAAW,GACd1B,EAAG2B,UAAY,GACf3B,EAAG4B,SAAW,GACd5B,EAAG6B,UAAY,GAGf7B,EAAG8B,WAEDC,MAAO,GACPC,KAAM,GACNR,MAAO,GACPC,SAAS,GACTC,SAAS,GACTO,GAAG,IAMLjC,EAAGkC,aAAe,WAIhBlC,EAAG8B,UAAUC,MAAQ/B,EAAG8B,UAAUE,KAAOhC,EAAG8B,UAAUN,MAAQxB,EAAG8B,UAAUL,SACzEzB,EAAG8B,UAAUJ,SAAW1B,EAAG8B,UAAUG,GAAK,EAI5C,IAAIE,IAAQ,CAsEZ,OAnEmB,IAAfnC,EAAGyB,WAELzB,EAAG8B,UAAUL,SAAW,mBACxBU,GAAM,GAQS,IAAbnC,EAAG0B,WAEL1B,EAAG8B,UAAUJ,SAAW,mBACxBS,GAAM,GASQ,IAAZnC,EAAGwB,OAELxB,EAAG8B,UAAUN,MAAQ,iBACrBW,GAAM,GAKA,gDAAgDC,KAAKpC,EAAGwB,SAE5DxB,EAAG8B,UAAUN,MAAQ,gBACrBW,GAAM,GAKU,IAAhBnC,EAAG2B,YAEL3B,EAAG8B,UAAUC,MAAQ,qBACrBI,GAAM,GAEW,IAAfnC,EAAG4B,WAEL5B,EAAG8B,UAAUE,KAAO,oBACpBG,GAAQ,GAMU,IAAhBnC,EAAG6B,WAEL7B,EAAG8B,UAAUG,GAAK,cAClBE,GAAM,GAIFE,MAAMrC,EAAG6B,aAEX7B,EAAG8B,UAAUG,GAAK,aAClBE,GAAM,GAIHA,GAOTnC,EAAGsC,OAAS,WAIV,IAAItC,EAAGkC,eAAP,CAGA,GAAIK,IACFd,SAAUzB,EAAGyB,SACbD,MAAOxB,EAAGwB,MACVG,UAAW3B,EAAG2B,UACdC,SAAU5B,EAAG4B,SACbF,SAAU1B,EAAG0B,SACbH,KAAMvB,EAAGuB,KAIXH,GAAMoB,KAAK,wCAAyCD,GAEpDjB,EAAkBmB,QAAQ,YAE5BzC,EAAG0C,MAAQ,WAETpB,EAAkBmB,QAAQ,WAzI9BtB,EAAsBD,SAAW,eAAgB,QAAS,SAAU,qBADpExB,QACGC,OAAO,cACPqB,WAAW,wBAAyBG,MA+IzC,WACE,YAEAzB,SACGC,OAAO,cACPgD,QAAQ,iBAAkB,WAE9B1C,KAAKO,WAEHwB,KAAM,QACND,MAAO,QACPa,MAAO,MACPpB,MAAO,yBACPS,GAAI,aAIJD,KAAM,WACND,MAAO,UACPa,MAAO,MACPpB,MAAO,4BACPS,GAAI,eAIJD,KAAM,QACND,MAAO,QACPa,MAAO,MACPpB,MAAO,yBACPS,GAAI,aAIJD,KAAM,QACND,MAAO,QACPa,MAAO,MACPpB,MAAO,yBACPS,GAAI,eAIJD,KAAM,SACND,MAAO,MACPa,MAAO,MACPpB,MAAO,0BACPS,GAAI,eAINhC,KAAKC,KAAO,WACX,MAAOD,MAAKO,eAQd,WACE,YAEAd,SACGC,OAAO,cACPgD,QAAQ,cAAe,WAqBtB,GAAIE,IAAW,EACXC,GAAU,EACVC,GAAU,CAEd9C,MAAK+C,eAAiB,WACpBF,GAAWA,GAGb7C,KAAKgD,eAAiB,WACpBJ,GAAaA,GAGf5C,KAAKiD,YAAc,WACjBH,GAAWA,GAIb9C,KAAKkD,eAAiB,WACpB,MAAON,IAGT5C,KAAKkD,eAAiB,WACpB,MAAON,IAGT5C,KAAKkD,eAAiB,WACpB,MAAON,SAOf,WACE,YAEAnD,SACGC,OAAO,cACPgD,QAAQ,eAAgB,WAGvB1C,KAAKmD,UAAW,EAChBnD,KAAK2B,SAAW,OAChB3B,KAAK0B,UAAY,OAEjB1B,KAAKoD,qBACLpD,KAAKqD,mBAELrD,KAAKsD,WAELtD,KAAKuD,UAAY,WAEfvD,KAAKwD,gBAAkB,EACvBxD,KAAKyD,oBAAsB,EACvBzD,KAAKsD,QAAQI,OAAS,IACxB1D,KAAKE,aAAeF,KAAKsD,QAAQ,KAGrCtD,KAAK2D,UAAY,SAASC,GAExB,GAAIC,IAEFC,KAAOF,EACPG,UAAW,EACXC,QAASC,KAAKC,MAAkC,KAAX,GAAhBD,KAAKE,SAAgB,KAAa,IACvDnC,GAAKhC,KAAKsD,QAAQI,OAClBU,eACA7D,YACA8D,UAEIP,KAAM,OACNQ,OAAQ,KAGRR,KAAM,OACNQ,OAAQ,KAGRR,KAAM,WACNQ,OAAQ,KAQd,OAHAtE,MAAKsD,QAAQiB,KAAKV,GAClB7D,KAAKoD,kBAAkBmB,KAAKV,EAAEG,SAC9BhE,KAAKqD,gBAAgBkB,KAAKV,EAAEC,MACrBD,GAGT7D,KAAKwD,gBAAkB,EACvBxD,KAAKG,gBAAkB,WAAa,MAAOH,MAAKsD,QAAQtD,KAAKwD,kBAC7DxD,KAAKwE,gBAAkB,SAASxC,GAChChC,KAAKwD,gBAAkBxB,EACvBhC,KAAKyD,oBAAsB,GAE3BzD,KAAKyD,oBAAsB,EAC3BzD,KAAKyE,oBAAsB,WAAa,MAAOzE,MAAKG,kBAAkBiE,YAAYpE,KAAKyD,sBACvFzD,KAAK0E,oBAAsB,SAAS1C,GAAMhC,KAAKyD,oBAAsBzB,GAErEhC,KAAK2E,UAAY,WAEf3E,KAAK2B,SAAW,GAChB3B,KAAK0B,UAAY,GACjB1B,KAAKsD,WACLtD,KAAKoD,qBACLpD,KAAKqD,oBAIPrD,KAAK4E,WAAa,SAASC,EAAQjB,EAAOkB,GASxC,IAAK,GARDC,IACFjB,KAAMF,EACNhC,UAAWkD,EACX9C,GAAI6C,EAAOtE,SAASmD,OACpBsB,oBACAC,uBACAC,aAAc,GAEPC,EAAI,EAAGA,EAAIN,EAAOT,YAAYV,SAAUyB,EAC/CJ,EAAEC,iBAAiBT,KAAK,GACxBQ,EAAEE,oBAAoBV,KAAK,EAE7BM,GAAOtE,SAASgE,KAAKQ,IAGvB/E,KAAKoF,WAAa,WAEhB,GAAIC,GAAO,KACPC,EAAQ,EAAoB,EAAhBrB,KAAKE,SACjBoB,EAAM,EAAoB,GAAhBtB,KAAKE,QAClB,OAAO,IAAIqB,MAAKH,EAAKC,EAAMC,IAG9BvF,KAAKyF,cAAgB,SAASZ,EAAQa,EAAcC,EAAgBC,GAElE,GAAIb,IACFjB,KAAM6B,EACNE,YAAaH,EACbI,gBAAgB,EAChB9D,GAAI6C,EAAOT,YAAYV,OACvBqC,OAAQH,EACRtE,KAAM,OACN0E,QAAShG,KAAKoF,aACda,YAAa,EAAE,EAAE,EAAE,EAAE,GAEvBlB,GAAEkB,WAAW,GAAIpB,EAAOtE,SAASmD,MACjC,KAAK,GAAIyB,GAAI,EAAGA,EAAIN,EAAOtE,SAASmD,SAASyB,EAE3CN,EAAOtE,SAAS4E,GAAGH,iBAAiBT,KAAK,GACzCM,EAAOtE,SAAS4E,GAAGF,oBAAoBV,KAAK,EAE9CM,GAAOT,YAAYG,KAAKQ,GAK1B,KAAK,GAAII,GAAI,EAAO,EAAJA,IAASA,EACzB,CAEE,IAAK,GADDtB,GAAI7D,KAAK2D,UAAU,MAAQ,IAAIwB,GAAGe,YAC7BC,EAAI,EAAO,EAAJA,IAASA,EAEvBnG,KAAKyF,cAAc5B,EAAG,oBAAoB,cAAgBsC,EAAED,WAAY,IAG1E,KAAK,GAAIE,GAAI,EAAO,GAAJA,IAAUA,EAExBpG,KAAK4E,WAAWf,EAAG,WAAauC,EAAEF,WAAY,IAASC,EAEzD,KAAK,GAAIE,GAAI,EAAO,EAAJA,IAASA,EAEvBxC,EAAEO,YAAYiC,GAAGJ,WAAW,GAAKpC,EAAEtD,SAASmD,OAMhD1D,KAAKE,aAAeF,KAAKsD,QAAQ,QAMvC,WACE,YAOA,SAASgD,GAAezG,EAAcC,GACpC,GAAIC,GAAKC,IAETD,GAAGwG,WAAa,WAAa,MAAO1G,GAAasD,UACjDpD,EAAGyG,MAAQ,WACT3G,EAAasD,UAAW,GAE1BpD,EAAG0G,OAAS,WAEV5G,EAAasD,UAAW,GAG1BpD,EAAG2G,OAECC,QAAQ,EACRC,MAAO,cACPC,IAAK,kBAILF,QAAQ,EACRC,MAAO,cACPC,IAAK,kBAGLF,QAAQ,EACRC,MAAO,WACPC,IAAK,eAIT9G,EAAG+G,UAAY,SAAUnG,GAEvBb,EAAUc,MACRC,WAAW,EACXC,YAAa,4BACbC,WAAY,uBACZC,aAAc,uBACdL,KAAMA,KAGVZ,EAAGgH,WAAa,SAAUpG,GAExBb,EAAUc,MACRC,WAAW,EACXC,YAAa,8BACbC,WAAY,wBACZC,aAAc,wBACdL,KAAMA,KAIVZ,EAAGiH,aAAe,SAAUrG,GAE1Bb,EAAUc,MACRC,WAAW,EACXC,YAAa,kCACbC,WAAY,0BACZC,aAAc,0BACdL,KAAMA,KAIVZ,EAAGkH,UAAYlH,EAAG2G,KAAK,GACvB3G,EAAG4B,SAAW9B,EAAa6B,UAC3B3B,EAAG2B,UAAY7B,EAAa8B,SAC5B5B,EAAGuD,QAAU,WAAa,MAAOzD,GAAayD,SAC9CvD,EAAGI,gBAAkB,WAAW,MAAON,GAAaM,mBACpDJ,EAAGyE,gBAAkB,SAASxC,GAAKnC,EAAa2E,gBAAgBxC,IAEhEjC,EAAGmH,SAAW,SAASrC,EAAOsC,GAE5BpH,EAAGyE,gBAAgBK,EAAO7C,IAC1BjC,EAAGkH,UAAUN,QAAO,EACpB5G,EAAGkH,UAAYE,EACfpH,EAAGkH,UAAUN,QAAO,GAGtB5G,EAAGqH,YAAc,SAASvC,EAAOsC,GAC/B,MAAQtC,IAAU9E,EAAGI,mBAAqBgH,EAAIR,QAlFlDL,EAAerF,SAAW,eAAgB,aAF1CxB,QACGC,OAAO,cACPqB,WAAW,iBAAkBuF,MAyFlC,WACE,YAOA,SAASe,GAAqBxH,EAAcsB,EAAOC,EAAQC,GACzD,GAAItB,GAAKC,IACTD,GAAGyB,SAAW,GACdzB,EAAG0B,SAAW,GAGd1B,EAAG8B,WAEDJ,SAAU,GACVD,SAAU,GACVgF,MAAO,IAITzG,EAAGuH,iBAAmB,WAEpBvH,EAAG8B,UAAUJ,SAAW1B,EAAG8B,UAAUL,SAAWzB,EAAG8B,UAAU2E,MAAQ,EAErE,IAAItE,IAAQ,CASZ,OARmB,IAAfnC,EAAGyB,WACLzB,EAAG8B,UAAUL,SAAW,mBACxBU,GAAM,GAEW,IAAfnC,EAAG0B,WACL1B,EAAG8B,UAAUJ,SAAW,mBACxBS,GAAM,GAEDA,GAITnC,EAAGyG,MAAQ,WAET,IAAIzG,EAAGuH,mBAAP,CAGA,GAAIC,IACF/F,SAAUzB,EAAGyB,SACbC,SAAU1B,EAAG0B,SAKjBN,GAAMoB,KAAK,wCAAyCgF,GAAWC,KAC7D,WAEI3H,EAAa0D,YACb1D,EAAasD,UAAW,EACxB9B,EAAkBmB,QAAQ,WAI5B,WAEEzC,EAAG8B,UAAU2E,MAAQ,kBAMzBzG,EAAG0C,UAGL1C,EAAG0C,MAAQ,WAETpB,EAAkBmB,QAAQ,WAnE9B6E,EAAqBpG,SAAW,eAAgB,QAAS,SAAU,qBAHnExB,QACGC,OAAO,cACPqB,WAAW,uBAAwBsG,MA0ExC,WACE,YAOA,SAASI,GAAsBC,EAAa7H,GAC1C,GAAIE,GAAKC,IAETD,GAAGG,aAAe,WAAa,MAAOL,GAAaM,mBAJrDsH,EAAsBxG,SAAW,cAAe,gBAJhDxB,QACGC,OAAO,cACPqB,WAAW,wBAAyB0G,MAazC,WACE,YAOA,SAASE,MALTlI,QACGC,OAAO,cACPqB,WAAW,mBAAoB4G,MAQpClI,QACGC,OAAO,cACTkI,UAAU,WAAY,WACrB,OACEC,SAAU,IACVC,SAAS,EACTC,SAAS,cACTC,OACEC,MAAO,SACPC,QAAS,YAEXC,KAAM,SAAUH,EAAOI,GAMtB,GAAIC,KAAIC,SAASF,EAAQ,GAAIJ,EAAMC,MAAOD,EAAME,aAOrD,WACE,YAOA,SAASK,GAAoB1I,GAC3B,GAAIE,GAAKC,IAGTD,GAAGyI,QAAU,YAEbzI,EAAG0I,cAAgB5I,EAAa6B,UAAY,IAAM7B,EAAa8B,SAC/D5B,EAAG2I,iBAAmB,WAGpB,IAAK,GADDC,GAAS,EACJxD,EAAI,EAAGA,EAAItF,EAAayD,QAAQI,SAAUyB,EAEjDwD,GAAU9I,EAAayD,QAAQ6B,GAAG5E,SAASmD,MAE7C,OAAOiF,IAIT5I,EAAG6I,sBAAwB,SAAS/D,GAGlC,IAAK,GADDgE,MACK1D,EAAI,EAAGA,EAAIN,EAAOT,YAAYV,SAAUyB,EACjD,CACE,GAAI2D,GAAOjE,EAAOT,YAAYe,GAAGa,QAC7B+C,EAAaD,EAAKE,cAAgB,IAAMF,EAAKG,WAAa,IAAMH,EAAKI,UACrEC,GACFnH,GAAGmD,EAAE,EACLiE,QAASvE,EAAOT,YAAYe,GAAGrB,KAC/BuF,MAAON,EAETF,GAAKtE,KAAK4E,GAEZ,MAAO,IAAId,KAAIiB,QAAQT,IAGzB9I,EAAGkI,QAEH,KAAK,GAAI9C,GAAI,EAAGA,EAAItF,EAAayD,QAAQI,SAAUyB,EAEjDpF,EAAGkI,MAAM1D,KAAKxE,EAAG6I,sBAAsB/I,EAAayD,QAAQ6B,IAK9DpF,GAAGmI,SACDqB,OAAO,QACPF,MAAM,aACNG,IAAK,aAIPzJ,EAAG0J,WAAa,WAAa,MAAO5J,GAAayD,SAEjDvD,EAAG2J,cAAgB,SAAS7E,GAS1B,IAAK,GAPD8E,KACDhH,MAAO,IAAKiH,OAAQ,IACpBjH,MAAO,IAAKiH,OAAQ,IACpBjH,MAAO,IAAKiH,OAAQ,IACpBjH,MAAO,IAAKiH,OAAQ,IACpBjH,MAAO,IAAKiH,OAAQ,IAEdzE,EAAI,EAAGA,EAAIN,EAAOtE,SAASmD,SAAUyB,EAC9C,CACE,GAAI7E,GAAQ,CAEVA,GADEuE,EAAOtE,SAAS4E,GAAGnB,SAAW,GAC1B,EACCa,EAAOtE,SAAS4E,GAAGnB,SAAW,GAC7B,EACDa,EAAOtE,SAAS4E,GAAGnB,SAAW,GAC/B,EACCa,EAAOtE,SAAS4E,GAAGnB,SAAW,GAC/B,EAEA,IACN2F,EAAOrJ,GAAOsJ,OAElB,MAAOD,IAIT5J,EAAGqD,mBAAqBvD,EAAauD,mBACrCrD,EAAGsD,gBAAkBxD,EAAawD,gBAlFpCkF,EAAoBtH,SAAW,gBAL/BxB,QACGC,OAAO,cACPqB,WAAW,sBAAuBwH,MAyFvC,WACE,YAMA,SAASsB,GAA0BhK,EAAcsB,EAAOC,EAAQC,EAAmBzB,GACjF,GAAIG,GAAKC,IAETD,GAAG8E,OAAShF,EAAaM,kBAEzBJ,EAAGwB,MAAQ,GACXxB,EAAG2B,UAAY,GACf3B,EAAG4B,SAAW,GACd5B,EAAG6B,UAAY,GAGf7B,EAAG8B,WACDN,MAAO,GACPS,GAAI,GACJF,MAAO,GACPC,KAAM,IAIRhC,EAAGkC,aAAe,WAIhBlC,EAAG8B,UAAUC,MAAQ/B,EAAG8B,UAAUE,KAAOhC,EAAG8B,UAAUN,MAAQxB,EAAG8B,UAAUG,GAAK,EAIhF,IAAIE,IAAQ,CA8CZ,OA5CgB,IAAZnC,EAAGwB,OAELxB,EAAG8B,UAAUN,MAAQ,iBACrBW,GAAM,GAKA,gDAAgDC,KAAKpC,EAAGwB,SAE5DxB,EAAG8B,UAAUN,MAAQ,gBACrBW,GAAM,GAKU,IAAhBnC,EAAG2B,YAEL3B,EAAG8B,UAAUC,MAAQ,qBACrBI,GAAM,GAEW,IAAfnC,EAAG4B,WAEL5B,EAAG8B,UAAUE,KAAO,oBACpBG,GAAQ,GAMU,IAAhBnC,EAAG6B,WAEL7B,EAAG8B,UAAUG,GAAK,cAClBE,GAAM,GAIFE,MAAMrC,EAAG6B,aAEX7B,EAAG8B,UAAUG,GAAK,aAClBE,GAAM,GAIHA,GAQTnC,EAAG6E,WAAa,WAGd,IAAI7E,EAAGkC,eAAP,CAGA,GAAI6H,IAGF/H,KAAMhC,EAAG4B,SACTG,MAAO/B,EAAG2B,UACViB,MAAO,GACPpB,MAAOxB,EAAGwB,MACVS,GAAIjC,EAAG6B,UAGThC,GAAeW,SAASgE,KAAKuF,GAE7B/J,EAAG0C,UAIL1C,EAAG0C,MAAQ,WAETpB,EAAkBmB,QAAQ,WAvG9BqH,EAA0B5I,SAAW,eAAgB,QAAS,SAAU,oBAAqB,kBAN7FxB,QACGC,OAAO,cACPqB,WAAW,4BAA6B8I,MAiH7C,WACE,YAOA,SAASE,GAAsBlK,EAAcmK,EAAMlK,GACjD,GAAIC,GAAKC,IACTD,GAAGkK,aAAc,EACjBlK,EAAGG,aAAe,WAAa,MAAOL,GAAaM,mBAEnDJ,EAAGmK,iBAAmB,WAAa,MAAOrK,GAAa4E,uBACvD1E,EAAG2E,oBAAsB,SAAS1C,GAAMnC,EAAa6E,oBAAoB1C,IAEzEjC,EAAGoK,gBAAkB,SAASnI,GAE1BnC,EAAa6E,oBAAoB1C,GACjCjC,EAAGkK,aAAc,GAcvBlK,EAAGqK,kBAAoB,SAAUzJ,GAE/Bb,EAAUc,MACRC,WAAW,EACXC,YAAa,4CACbC,WAAY,+BACZC,aAAc,+BACdL,KAAMA,KAGRZ,EAAGsK,oBAAsB,SAASC,GAGhCN,EAAKO,IAAI,wBAA0BD,EAAWxG,KAAO,MAAQwG,EAAWtE,UAG1EjG,EAAGyK,kBAAoB,SAASF,EAAYjK,GAG1C2J,EAAKO,IAAI,sBAAwBlK,EAAQyD,KAAO,OAASwG,EAAWxG,KAAO,IAAMzD,EAAQ2E,iBAAiBsF,EAAWtI,MAEvHjC,EAAG0K,mBAAqB,SAASH,GAG/BN,EAAKO,IAAI,uBAAyBD,EAAWxG,KAAO,MAAQwG,EAAWvE,SAEzEhG,EAAG2K,wBAA0B,SAASJ,GAGpCN,EAAKO,IAAI,4BAA8BD,EAAWxG,KAAO,MAAQwG,EAAWzE,cAE9E9F,EAAG4K,2BAA6B,SAASL,GAGvCN,EAAKO,IAAI,+BAAiCD,EAAWxG,OAGvD/D,EAAG6K,cAAgB,SAASC,GAE1B,MAAIA,IAAW,GACN,EACAA,GAAW,GACX,EACAA,GAAW,GACX,EACAA,GAAW,GACX,EACF,GAET9K,EAAG+K,iBAAmB,SAASR,EAAYjK,GAEzC,GAAI2B,GAAKsI,EAAWtI,GAChB+I,EAAW1K,EAAQ2E,iBAAiBhD,GACpCgJ,EAAW3K,EAAQ4E,oBAAoBjD,GACvCiJ,EAAW,CACC,OAAZD,IACFC,EAAWlL,EAAG6K,cAAcI,EAAWV,EAAWvE,QACpD,IAAImF,GAAW,CACC,OAAZH,IACFG,EAAWnL,EAAG6K,cAAcG,EAAWT,EAAWvE,WAChDuE,EAAWrE,WAAWgF,KACtBX,EAAWrE,WAAWiF,IAI5BnL,EAAGoL,YAAe,IAAI,IAAI,IAAI,IAAI,KAxFpCpB,EAAsB9I,SAAW,eAAgB,OAAQ,aAPzDxB,QACGC,OAAO,cACPqB,WAAW,wBAAyBgJ,MAkGzC,WACE,YAMA,SAASqB,GAA6BvL,EAAcsB,EAAOC,EAAQC,GACjE,GAAItB,GAAKC,IAETD,GAAG8E,OAAShF,EAAaM,kBACzBJ,EAAGsL,sBAAwB,GAC3BtL,EAAG4F,eAAiB,GACpB5F,EAAGgG,OAAS,EACZhG,EAAG8B,UAAY,GACf9B,EAAG0F,cAAgB,WAGjB,MADA1F,GAAG8B,UAAY,GACU,IAArB9B,EAAG4F,oBAEL5F,EAAG8B,UAAY,6BAajBhC,EAAa4F,cAAc1F,EAAG8E,OAAQ9E,EAAGsL,sBAAuBtL,EAAG4F,eAAgB5F,EAAGgG,YACtFhG,GAAG0C,UAML1C,EAAG0C,MAAQ,WAET1C,EAAGsL,sBAAwB,GAC3BtL,EAAG4F,eAAiB,GACpB5F,EAAGgG,OAAO,EACV1E,EAAkBmB,QAAQ,WAlC9B4I,EAA6BnK,SAAW,eAAgB,QAAS,SAAU,qBAR3ExB,QACGC,OAAO,cACPqB,WAAW,+BAAgCqK,MA8ChD,WACE,YAMA,SAASE,GAAwBzL,EAAcsB,EAAOC,EAAQC,GAC5D,GAAItB,GAAKC,IAETD,GAAG0C,MAAQ,WAET1C,EAAGwL,cAAc,GACjBxL,EAAGyL,WAAa,GAChBzL,EAAGQ,YACHR,EAAG0L,WAAU,EACbpK,EAAkBmB,QAAQ,WAG5BzC,EAAGyL,WAAa,GAChBzL,EAAGQ,YACHR,EAAGwL,cAAgB,GACnBxL,EAAG8F,YAAc,GAEjB9F,EAAG8B,UAAY,GAGf9B,EAAG2L,aAAe,WAEhB3L,EAAG8B,UAAY,EACf,IAAIsD,EACJ,IAAqB,IAAjBpF,EAAGyL,WAEL,YADAzL,EAAG8B,UAAY,sBAKjB,IAAIgD,GAAShF,EAAa8D,UAAU5D,EAAGyL,WACvC,KAAKrG,EAAI,EAAGA,EAAIpF,EAAGQ,SAASmD,SAAUyB,EAEpCtF,EAAa+E,WAAWC,EAAQ9E,EAAGQ,SAAS4E,GAAGrB,KAAM,EAOvD,IAAID,IAEF8H,MAAO5L,EAAGyL,WACVjL,YACAqL,WAAY,GACZ/F,YAAa9F,EAAG8F,YAGlB,KAAKV,EAAG,EAAGA,EAAIpF,EAAGQ,SAASmD,SAAUyB,EAEnCtB,EAAEtD,SAASgE,KAAKxE,EAAGQ,SAAS4E,GAAGrB,KAEjCD,GAAE+H,WAAa/L,EAAa6B,UAAY,IAAM7B,EAAa8B,SAI3DR,EAAMoB,KAAK,8CACToJ,MAAO9H,EAAE8H,MACTpL,SAAUsD,EAAEtD,SACZsL,QAAShI,EAAE+H,aAOb7L,EAAG0C,SAIL1C,EAAG6E,WAAa,SAAShB,GAEvB,GAAIvD,IAEFyD,KAAMF,EACN5B,GAAIjC,EAAGQ,SAASmD,OAElB3D,GAAGQ,SAASgE,KAAKlE,IAEnBN,EAAGK,cAAgB,SAAS0D,GAE1B,GAAIxD,GAAQP,EAAGQ,SAASC,QAAQsD,EAC5BxD,GAAQ,IAEVP,EAAGQ,SAASE,OAAOH,EAAM,IAG7BP,EAAG+L,oBAAsB,WAEvB,GAAwB,IAApB/L,EAAGwL,cAAP,CAGA,IAAK,GAFDQ,GAAQhM,EAAGwL,cACX5B,EAASoC,EAAMC,MAAM,KAChB7G,EAAI,EAAGA,EAAIwE,EAAOjG,SAAUyB,EACnCpF,EAAG6E,WAAW+E,EAAOxE,GACvBpF,GAAGwL,cAAc,KAzFrBD,EAAwBrK,SAAW,eAAgB,QAAS,SAAU,qBATtExB,QACGC,OAAO,cACPqB,WAAW,0BAA2BuK,MAuG3C,WACE,YAOA,SAASW,GAASjC,GAEhBA,EAAKkC,MAAM,gBAGbD,EAAShL,SAAW,QAVpBxB,QACGC,OAAO,cACPyM,IAAIF,MAUT,WACE,YAMA,SAASG,GAAYC,GACnBA,EACGC,KAAK,KACJxL,YAAa,+BACbC,WAAY,sBACZC,aAAc,kBAEfsL,KAAK,gBACJxL,YAAa,mCACbC,WAAY,wBACZC,aAAc,gBAEfsL,KAAK,gBACJxL,YAAa,mCACbC,WAAY,wBACZC,aAAc,gBAEfsL,KAAK,aACJxL,YAAa,6BACbC,WAAY,qBACZC,aAAc,aAEfuL,WACCC,WAAY,MAhBlBJ,EAAYnL,SAAW,kBAXvBxB,QACGC,OAAO,cACP+M,OAAOL,MAgCZ,WACE,YAEA3M,SACGC,OAAO,cACPgN,SAAS,WAAYC,UACrBD,SAAS,SAAUE,WAQxB,WACE,YAOA,SAASH,GAAOI,EAAcC,GAE5BD,EAAaE,cAAa,GAG1BD,EAAaE,WAAY,EACzBF,EAAaG,QAAU,IACvBH,EAAaI,cAAgB,kBAC7BJ,EAAaK,mBAAoB,EACjCL,EAAaM,aAAc,EAF7BX,EAAOxL,SAAW,eAAgB,gBAZlCxB,QACGC,OAAO,cACP+M,OAAOA,MAiBZhN,QAAQC,OAAO,cAAcyM,KAAK,iBAAkB,SAASkB,GAAiBA,EAAeC,IAAI,4CAA4C,wuCAC7ID,EAAeC,IAAI,kCAAkC,88CACrDD,EAAeC,IAAI,sCAAsC,ugDACzDD,EAAeC,IAAI,mCAAmC,shHACtDD,EAAeC,IAAI,+BAA+B,wpDAClDD,EAAeC,IAAI,yBAAyB,wsBAC5CD,EAAeC,IAAI,mCAAmC,+1FACtDD,EAAeC,IAAI,4BAA4B,kkCAC/CD,EAAeC,IAAI,8BAA8B,upFACjDD,EAAeC,IAAI,6BAA6B","file":"scripts/app-8510be7361.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack', ['ngRoute', 'ngAnimate', 'chart.js', 'ui.bootstrap', 'toastr']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('StudentsController', StudentsController);\n\n  /** @ngInject */\n  function StudentsController(StudentService, GradeService, $uibModal) {\n    var vm = this;\n\n    vm.list = function() { return StudentService.list(); };\n    vm.activeCourse = function() { return GradeService.getActiveCourse() };\n\n    vm.removeStudent = function(student)\n    {\n\n      var index = StudentService.students.indexOf(student);\n      if (index > -1)\n      {\n        StudentService.students.splice(index,1);\n      }\n    };\n\n    vm.openAddStudentModal = function (size) {\n\n      $uibModal.open({\n        animation: true,\n        templateUrl: 'app/AddStudent/AddStudentModal.html',\n        controller: 'AddStudentModalController',\n        controllerAs: 'AddStudentModalController',\n        size: size\n      })\n    };\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('signupModalController', signupModalController);\n\n  /** @ngInject */\n  function signupModalController(GradeService, $http, $scope, $uibModalInstance) {\n    var vm = this;\n    vm.type = \"student\";\n    vm.email = \"\";\n    vm.username = \"\";\n    vm.password = \"\";\n    vm.firstName = \"\";\n    vm.lastName = \"\";\n    vm.studentID = \"\";\n\n\n    vm.errorText =\n    {\n      first: \"\",\n      last: \"\",\n      email: \"\",\n      username:\"\",\n      password:\"\",\n      id:\"\"\n    };\n\n\n\n\n    vm.isInputError = function()\n    {\n\n      //reset\n      vm.errorText.first = vm.errorText.last = vm.errorText.email = vm.errorText.username =\n        vm.errorText.password = vm.errorText.id = \"\";\n\n\n      //catch-all\n      var error = false;\n\n      //username err\n      if (vm.username == \"\")\n      {\n        vm.errorText.username = \"Enter a username\";\n        error=true;\n      }\n      else\n      {\n        //other username restrictions\n      }\n\n      //password err\n      if (vm.password==\"\")\n      {\n        vm.errorText.password = \"Enter a password\";\n        error=true;\n      }\n      else\n      {\n        //other password restrictions\n      }\n\n\n      //email err\n      if (vm.email == \"\")\n      {\n        vm.errorText.email = \"Enter an email\";\n        error=true;\n      }\n      else\n      {\n        //other email restrictions\n        if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(vm.email))) // email format check\n        {\n          vm.errorText.email = \"Invalid email\";\n          error=true;\n        }\n      }\n\n      //name err\n      if (vm.firstName == \"\")\n      {\n        vm.errorText.first = \"Enter a first name\";\n        error=true;\n      }\n      if (vm.lastName == \"\")\n      {\n        vm.errorText.last = \"Enter a last name\";\n        error = true;\n      }\n\n\n\n      // id err\n      if (vm.studentID == \"\")\n      {\n        vm.errorText.id = \"Enter an ID\";\n        error=true;\n      }\n      else\n      {\n        if (isNaN(vm.studentID))  // numbers only\n        {\n          vm.errorText.id = \"Invalid ID\";\n          error=true;\n        }\n      }\n\n      return error;\n\n    };\n\n\n\n\n    vm.signup = function()\n    {\n\n\n      if (vm.isInputError()) return; // invalid data\n\n\n      var userInfo = {\n        username: vm.username,\n        email: vm.email,\n        firstName: vm.firstName,\n        lastName: vm.lastName,\n        password: vm.password,\n        type: vm.type\n      };\n\n\n      $http.post(\"http://localhost:3000/api/auth/signup\", userInfo);\n\n      $uibModalInstance.dismiss('cancel');\n    };\n    vm.close = function()\n    {\n      $uibModalInstance.dismiss('cancel');\n    };\n\n  }\n})();\n\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .service('StudentService', function(){\n\n\tthis.students = [\n\t\t{\n\t\t\tlast: \"Smith\",\n\t\t\tfirst: \"James\",\n\t\t\tgrade: \"80%\", // Switch to float?\n\t\t\temail: \"SmithJ@unlv.nevada.edu\",\n\t\t\tid: \"11223344\"\n\t\t},\n\n\t\t{\n\t\t\tlast: \"Williams\",\n\t\t\tfirst: \"Rebecca\",\n\t\t\tgrade: \"85%\", // Switch to float?\n\t\t\temail: \"WilliamsR@unlv.nevada.edu\",\n\t\t\tid: \"2244553322\"\n\t\t},\n\n\t\t{\n\t\t\tlast: \"Aster\",\n\t\t\tfirst: \"Billy\",\n\t\t\tgrade: \"66%\", // Switch to float?\n\t\t\temail: \"AsterB@unlv.nevada.edu\",\n\t\t\tid: \"43233333\"\n\t\t},\n\n\t\t{\n\t\t\tlast: \"Bills\",\n\t\t\tfirst: \"Derek\",\n\t\t\tgrade: \"90%\", // Switch to float?\n\t\t\temail: \"BillsD@unlv.nevada.edu\",\n\t\t\tid: \"1010101010\"\n\t\t},\n\n\t\t{\n\t\t\tlast: \"Dillan\",\n\t\t\tfirst: \"Ben\",\n\t\t\tgrade: \"45%\", // Switch to float?\n\t\t\temail: \"DillanB@unlv.nevada.edu\",\n\t\t\tid: \"3428237420\"\n\t\t}\n\t];\n\n\tthis.list = function() {\n\t\treturn this.students;\n\t};\n\n\t});\n\n})();\n\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .service('InfoService', function(){\n\n      // Main data.\n      // Use 'this' to make public.\n      // Var for private.\n      /*var classInfo = {\n        id: 'CS 456',\n        name: 'Automata and Formal Languages',\n        info: 'Regular expressions. Regular, context-free, and unrestricted grammars. Finite and pushdown autoamata. Turing machines and the halting problem; introduction to decidability.'\n        // pre: 'CS 302 and MATH 351'\n      };\n\n      var profile = {\n        firstName:' Lawrence ',\n        lastName:' Larmore ',\n        phone: '702-895-1096',\n        email:' larmore@egr.unlv.edu',\n        office: ' TBEB 378B ',\n        hours: 'Mon & Wed:  2:00~2:30 '\n      }*/\n\n      var editInfo = false;\n      var editDes = false;\n      var showTab = false;\n\n      this.toggleDisable1 = function() {\n        editDes = !editDes;\n      }\n\n      this.toggleDisable2 = function() {\n        editInfo =  !editInfo;\n      }\n\n      this.toggleShow3 = function() {\n        showTab = !showTab;\n      }\n\n      // TODO: Getters/setters for data above ^\n      this.editInfoStatus = function () {\n        return editInfo;\n      }\n\n      this.editInfoStatus = function () {\n        return editInfo;\n      }\n\n      this.editInfoStatus = function () {\n        return editInfo;\n      }\n\t});\n\n})();\n\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .service('GradeService', function(){\n\n\n      this.loggedIn = true;\n      this.lastName = \"Prof\";\n      this.firstName = \"name\";\n\n      this.gradeAverageArray = []; // needed for dashboard graphing\n      this.courseNameArray = [];\n\n      this.courses=[];\n\n      this.postLogin = function()\n      {\n        this.currentCourseID = 0;\n        this.currentAssignmentID = 0;\n        if (this.courses.length > 0)\n          this.activeCourse = this.courses[0];\n      };\n\n      this.addCourse = function(name_)             // add data as it becomes needed\n      {\n        var c =\n        {\n          name : name_,\n          expanded : false,\n          average: Math.round((Math.random() * 50 + 50) * 100) / 100, //random 50-100, 2 decimals\n          id : this.courses.length,\n          assignments: [],\n          students: [],\n          weights: [\n            {\n              name: \"Test\",\n              weight: 40\n            },\n            {\n              name: \"Quiz\",\n              weight: 30\n            },\n            {\n              name: \"Homework\",\n              weight: 30\n            }\n          ]\n        };\n\n        this.courses.push(c);\n        this.gradeAverageArray.push(c.average);\n        this.courseNameArray.push(c.name);\n        return c;\n      };\n\n      this.currentCourseID = 0;\n      this.getActiveCourse = function() { return this.courses[this.currentCourseID]};\n      this.setActiveCourse = function(id) {\n      this.currentCourseID = id;\n      this.currentAssignmentID = 0; // reset for safety\n      };\n      this.currentAssignmentID = 0;\n      this.getActiveAssignment = function() { return this.getActiveCourse().assignments[this.currentAssignmentID]; };\n      this.setActiveAssignment = function(id) { this.currentAssignmentID = id; };\n\n      this.purgeData = function() // for use on logout\n      {\n        this.lastName = \"\";\n        this.firstName = \"\";\n        this.courses = [];\n        this.gradeAverageArray = [];\n        this.courseNameArray = [];\n      };\n\n\n      this.addStudent = function(course, name_, id_) {\n        var t = {\n          name: name_,\n          studentID: id_,\n          id: course.students.length,\n          assignmentGrades: [],\n          oldAssignmentGrades: [],  //graph purposes\n          overallGrade: 0\n        };\n        for (var i = 0; i < course.assignments.length; ++i) {\n          t.assignmentGrades.push(0);\n          t.oldAssignmentGrades.push(0);\n        }\n        course.students.push(t);\n      };\n\n      this.randomDate = function()\n      {\n        var year = 2016;\n        var month = 1 + Math.random() * 4; //jan-may\n        var day = 1 + Math.random() * 30;\n         return new Date(year,month,day);\n      };\n\n      this.addAssignment = function(course, description_, assignmentName, _points)\n      {\n        var t = {\n          name: assignmentName,\n          description: description_,\n          datepickerOpen: false,    // assignment menu usage\n          id: course.assignments.length,\n          points: _points,\n          type: \"Test\",\n          dueDate: this.randomDate(),\n          gradeArray: [0,0,0,0,0] //for graph display\n        };\n        t.gradeArray[4]= course.students.length;  //initialize to all F (for graph)\n        for (var i = 0; i < course.students.length;++i)\n        {\n          course.students[i].assignmentGrades.push(0);\n          course.students[i].oldAssignmentGrades.push(0);\n        }\n        course.assignments.push(t);\n      };\n\n\n      //random data\n      for (var i = 0; i < 5; ++i)\n      {\n        var c = this.addCourse(\"CS\" + (460+i).toString());\n        for (var j = 0; j < 5; ++j)\n        {\n          this.addAssignment(c, \"Enter Description\",\"Assignment \" + j.toString(), 500);\n        }\n\n        for (var k = 0; k < 30; ++k)\n        {\n          this.addStudent(c, \"Student \" + k.toString(), 1000000+ j);\n        }\n        for (var l = 0; l < 5; ++l)\n        {\n          c.assignments[l].gradeArray[4] = c.students.length; //initial all to F\n        }\n      }\n\n\n\n      this.activeCourse = this.courses[0];\n\n    });\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController(GradeService, $uibModal) {\n    var vm = this;\n\n    vm.isLoggedIn = function() { return GradeService.loggedIn;  };\n    vm.login = function() {\n      GradeService.loggedIn = true;};\n\n    vm.logout = function()\n    {\n      GradeService.loggedIn = false;\n    };\n\n    vm.tabs = [\n      {\n        active: true,\n        label: \"Information\",\n        url: \"#/information\"\n\n      },\n      {\n        active: false,\n        label: \"Assignments\",\n        url: \"#/assignments\"\n      },\n      {\n        active: false,\n        label: \"Students\",\n        url: \"#/students\"\n      }\n    ];\n\n    vm.openLogin = function (size) {\n\n      $uibModal.open({\n        animation: true,\n        templateUrl: 'app/login/LoginModal.html',\n        controller: 'LoginModalController',\n        controllerAs: 'LoginModalController',\n        size: size\n      });\n    };\n    vm.openSignup = function (size) {\n\n      $uibModal.open({\n        animation: true,\n        templateUrl: 'app/signup/signupModal.html',\n        controller: 'signupModalController',\n        controllerAs: 'signupModalController',\n        size: size\n      });\n    };\n\n    vm.openAddClass = function (size) {\n\n      $uibModal.open({\n        animation: true,\n        templateUrl: 'app/AddClass/AddClassModal.html',\n        controller: 'AddClassModalController',\n        controllerAs: 'AddClassModalController',\n        size: size\n      });\n    };\n\n    vm.activeTab = vm.tabs[0];\n    vm.lastName = GradeService.firstName;\n    vm.firstName = GradeService.lastName;\n    vm.courses = function() { return GradeService.courses; };\n    vm.getActiveCourse = function(){return GradeService.getActiveCourse(); };\n    vm.setActiveCourse = function(id) {GradeService.setActiveCourse(id); };\n\n    vm.clickTab = function(course,tab)\n    {\n      vm.setActiveCourse(course.id);\n      vm.activeTab.active=false;\n      vm.activeTab = tab;\n      vm.activeTab.active=true;\n    };\n\n    vm.isActiveTab = function(course,tab) {\n      return (course == vm.getActiveCourse() && tab.active);\n    };\n\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('LoginModalController', LoginModalController);\n\n  /** @ngInject */\n  function LoginModalController(GradeService, $http, $scope, $uibModalInstance) {\n    var vm = this;\n    vm.username = \"\";\n    vm.password = \"\";\n\n\n    vm.errorText =\n    {\n      password: \"\",\n      username: \"\",\n      login: \"\"\n    };\n\n\n    vm.checkInputErrors = function()\n    {\n      vm.errorText.password = vm.errorText.username = vm.errorText.login = \"\";\n\n      var error = false;\n      if (vm.username == \"\") {    // blank username field\n        vm.errorText.username = \"Enter a username\";\n        error=true;\n      }\n      if (vm.password == \"\") {    // blank password field\n        vm.errorText.password = \"Enter a password\";\n        error=true;\n      }\n      return error;          // don't attempt login\n    };\n\n\n    vm.login = function()\n    {\n      if (vm.checkInputErrors()) return; // input error\n\n\n      var loginInfo = {\n        username: vm.username,\n        password: vm.password\n      };\n\n\n\n    $http.post(\"http://localhost:3000/api/auth/signin\", loginInfo).then(\n      function successCallback() {\n\n          GradeService.postLogin(); //set default values\n          GradeService.loggedIn = true;\n          $uibModalInstance.dismiss('cancel');\n\n        },\n\n        function errorCallback() {\n          //on Error\n          vm.errorText.login = \"Invalid login\"\n\n        }\n      );\n\n\n      vm.close();\n\n    };\n    vm.close = function()\n    {\n      $uibModalInstance.dismiss('cancel');\n    };\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('InformationController', InformationController);\n\n  /** @ngInject */\n  function InformationController(InfoService, GradeService) {\n    var vm = this;\n\n    vm.activeCourse = function() { return GradeService.getActiveCourse() };\n\n    // TODO: Connections to service\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('GradesController', GradesController);\n\n  /** @ngInject */\n  function GradesController() {\n\n  }\n})();\n\nangular\n  .module('GradeTrack')\n.directive(\"timeline\", function () {\n  return {\n    restrict: \"E\",\n    replace: true,\n    template:'<div></div>',\n    scope:{\n      items: '=items',\n      options: '=options'\n    },\n    link: function (scope, element) {\n\n\n\n\n      // Create a Timeline\n     new vis.Timeline(element[0], scope.items, scope.options);\n\n\n    }\n  };\n});\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('DashboardController', DashboardController);\n\n  /** @ngInject */\n  function DashboardController(GradeService) {\n    var vm = this;\n\n\n    vm.series = ['Series A'];\n\n    vm.professorName = GradeService.firstName + \" \" + GradeService.lastName;\n    vm.studentsEnrolled = function()\n    {\n      var answer = 0;\n      for (var i = 0; i < GradeService.courses.length; ++i)\n      {\n        answer += GradeService.courses[i].students.length;\n      }\n      return answer;\n    };\n\n\n    vm.createVisTimelineData = function(course)\n    {\n      var data = [];\n      for (var i = 0; i < course.assignments.length; ++i)\n      {\n        var date = course.assignments[i].dueDate;\n        var dateString = date.getFullYear() + \"-\" + date.getMonth() + \"-\" + date.getDate();\n        var assign = {\n          id:i+1,\n          content: course.assignments[i].name,\n          start: dateString\n        };\n        data.push(assign);\n      }\n      return new vis.DataSet(data);\n    };\n\n    vm.items = [];\n\n    for (var i = 0; i < GradeService.courses.length; ++i)\n    {\n      vm.items.push(vm.createVisTimelineData(GradeService.courses[i]));\n    }\n\n\n    // Configuration for the Timeline\n    vm.options = {\n      height:'150px',\n      start:'2016-01-19',\n      end: '2016-5-14'\n    };\n\n\n    vm.getCourses = function() { return GradeService.courses; };\n\n    vm.getGradeArray = function(course)\n    {\n      var result = [\n        {grade: \"A\", amount: 0 },\n        {grade: \"B\", amount: 0 },\n        {grade: \"C\", amount: 0 },\n        {grade: \"D\", amount: 0 },\n        {grade: \"F\", amount: 0 }\n      ]; //a,b,c,d,e,f\n      for (var i = 0; i < course.students.length; ++i)\n      {\n        var index = 0;\n        if (course.students[i].average >= 90)\n          index=0;\n        else if (course.students[i].average >= 80)\n          index = 1;\n        else if (course.students[i].average >= 70)\n          index=2;\n        else if (course.students[i].average >= 60)\n          index=3;\n        else\n          index=4;\n        ++result[index].amount;\n      }\n      return result;\n    };\n\n\n    vm.gradeAverageArray = [GradeService.gradeAverageArray ];\n    vm.courseNameArray = GradeService.courseNameArray;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('AddStudentModalController', AddStudentModalController);\n  /** @ngInject */\n  function AddStudentModalController(GradeService, $http, $scope, $uibModalInstance, StudentService) {\n    var vm = this;\n\n    vm.course = GradeService.getActiveCourse();\n\n    vm.email = \"\";\n    vm.firstName = \"\";\n    vm.lastName = \"\";\n    vm.studentID = \"\";\n\n\n    vm.errorText = {\n      email: \"\",\n      id: \"\",\n      first: \"\",\n      last: \"\"\n    };\n\n\n    vm.isInputError = function()\n    {\n\n      //reset\n      vm.errorText.first = vm.errorText.last = vm.errorText.email = vm.errorText.id = \"\";\n\n\n      //catch-all\n      var error = false;\n      //email err\n      if (vm.email == \"\")\n      {\n        vm.errorText.email = \"Enter an email\";\n        error=true;\n      }\n      else\n      {\n        //other email restrictions\n        if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(vm.email))) // email format check\n        {\n          vm.errorText.email = \"Invalid email\";\n          error=true;\n        }\n      }\n\n      //name err\n      if (vm.firstName == \"\")\n      {\n        vm.errorText.first = \"Enter a first name\";\n        error=true;\n      }\n      if (vm.lastName == \"\")\n      {\n        vm.errorText.last = \"Enter a last name\";\n        error = true;\n      }\n\n\n\n      // id err\n      if (vm.studentID == \"\")\n      {\n        vm.errorText.id = \"Enter an ID\";\n        error=true;\n      }\n      else\n      {\n        if (isNaN(vm.studentID))  // numbers only\n        {\n          vm.errorText.id = \"Invalid ID\";\n          error=true;\n        }\n      }\n\n      return error;\n\n    };\n\n\n\n\n\n    vm.addStudent = function()\n    {\n\n      if (vm.isInputError()) return; // invalid input\n\n\n      var newStudent =\n      {\n\n        last: vm.lastName,\n        first: vm.firstName,\n        grade: \"\", // Switch to float?\n        email: vm.email,\n        id: vm.studentID\n      };\n\n      StudentService.students.push(newStudent);\n\n      vm.close();\n    };\n\n\n    vm.close = function()\n    {\n      $uibModalInstance.dismiss('cancel');\n    };\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('AssignmentsController', AssignmentsController);\n\n  /** @ngInject */\n  function AssignmentsController(GradeService, $log, $uibModal) {\n    var vm = this;\n    vm.showDetails = false;\n    vm.activeCourse = function() { return GradeService.getActiveCourse()};\n\n    vm.activeAssignment = function() { return GradeService.getActiveAssignment(); };\n    vm.setActiveAssignment = function(id) { GradeService.setActiveAssignment(id); };\n\n    vm.clickAssignment = function(id)\n    {\n        GradeService.setActiveAssignment(id);\n        vm.showDetails = true;\n    };\n\n    /*\n    vm.submitAssignmentChange = function(assignment)\n    {\n\n    };\n    vm.submitNewAssignment = function(assignment)\n    {\n\n    };\n*/\n\n  vm.openAddAssignment = function (size) {\n\n    $uibModal.open({\n      animation: true,\n      templateUrl: 'app/AddAssignment/AddAssignmentModal.html',\n      controller: 'AddAssignmentModalController',\n      controllerAs: 'AddAssignmentModalController',\n      size: size\n    })\n  };\n    vm.SendModifiedDueDate = function(assignment)\n    {\n      //$$placeholder - due date for assignment has been changed\n      $log.log(\"SendModifiedDueDate: \" + assignment.name + \" - \" + assignment.dueDate);\n    };\n\n    vm.SendModifiedGrade = function(assignment, student)\n    {\n      //$$placeholder - grade for student on assignment has been changed\n      $log.log(\"SendModifiedGrade: \" + student.name + \" on \" + assignment.name + \" \" + student.assignmentGrades[assignment.id]);\n    };\n    vm.SendModifiedPoints = function(assignment)\n    {\n      //$$placeholder - points for assignment have been modified\n      $log.log(\"SendModifiedPoints: \" + assignment.name + \" - \" + assignment.points);\n    };\n    vm.SendModifiedDescription = function(assignment)\n    {\n      //$$placeholder - descriptions of assignment has been modified\n      $log.log(\"SendModifiedDescription: \" + assignment.name + \" - \" + assignment.description);\n    };\n    vm.SendModifiedAssignmentName = function(assignment)\n    {\n      //$$placeholder - name of assignment has been modified\n      $log.log(\"SendModifiedAssignmentName: \" + assignment.name);\n    };\n\n    vm.getGradeIndex = function(percent)\n    {\n      if (percent >= 0.9)\n        return 0;\n      else if (percent >= 0.8)\n        return 1;\n      else if (percent >= 0.7)\n        return 2;\n      else if (percent >= 0.6)\n        return 3;\n      return 4;\n    };\n    vm.changeGradeArray = function(assignment, student)\n    {\n      var id = assignment.id;\n      var newGrade = student.assignmentGrades[id];\n      var oldGrade = student.oldAssignmentGrades[id];\n      var oldIndex = 4;\n      if (oldGrade != null)\n        oldIndex = vm.getGradeIndex(oldGrade / assignment.points);\n      var newIndex = 4;\n      if (newGrade != null)\n        newIndex = vm.getGradeIndex(newGrade / assignment.points);\n        --assignment.gradeArray[oldIndex];\n        ++assignment.gradeArray[newIndex];\n\n    };\n\n    vm.labelArray = [ \"A\",\"B\",\"C\",\"D\",\"F\" ];\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('AddAssignmentModalController', AddAssignmentModalController);\n  /** @ngInject */\n  function AddAssignmentModalController(GradeService, $http, $scope, $uibModalInstance) {\n    var vm = this;\n\n    vm.course = GradeService.getActiveCourse();\n    vm.assignmentDescription = \"\";\n    vm.assignmentName = \"\";\n    vm.points = 0;\n    vm.errorText = \"\";\n    vm.addAssignment = function()\n    {\n      vm.errorText = \"\";\n      if (vm.assignmentName == \"\")\n      {\n        vm.errorText = \"Enter an assignment name\";\n        return;\n      }\n\n\n\n      //$$placeholder             -- add assignment post\n      //vm.course                 -- course to add assignment to\n      //vm.assignmentName         -- name\n      //vm.assignmentDescription  -- description\n      //vm.points                 -- points the assignment is worth\n\n\n      GradeService.addAssignment(vm.course, vm.assignmentDescription, vm.assignmentName, vm.points);\n      vm.close();\n\n\n    };\n\n\n    vm.close = function()\n    {\n      vm.assignmentDescription = \"\";\n      vm.assignmentName = \"\";\n      vm.points=0;\n      $uibModalInstance.dismiss('cancel');\n    };\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('AddClassModalController', AddClassModalController);\n  /** @ngInject */\n  function AddClassModalController(GradeService, $http, $scope, $uibModalInstance) {\n    var vm = this;\n\n    vm.close = function()\n    {\n      vm.studentString=\"\";\n      vm.courseName = \"\";  // reset\n      vm.students = [];\n      vm.showError=false;\n      $uibModalInstance.dismiss('cancel');\n    };\n\n    vm.courseName = \"\";\n    vm.students = [];\n    vm.studentString = \"\";\n    vm.description = \"\";\n\n    vm.errorText = \"\";\n\n\n    vm.createCourse = function()\n    {\n      vm.errorText = \"\";\n      var i;\n      if (vm.courseName == \"\") {\n        vm.errorText = \"Enter a course name\";  //class empty error\n        return; // empty class error\n      }\n\n\n      var course = GradeService.addCourse(vm.courseName);\n      for (i = 0; i < vm.students.length; ++i)\n      {\n        GradeService.addStudent(course, vm.students[i].name, 0);\n      }\n\n\n\n\n      //format for post\n      var c =\n      {\n        title: vm.courseName,\n        students: [],\n        instructor: \"\",\n        description: vm.description\n      };\n\n      for (i =0; i < vm.students.length; ++i)\n      {\n        c.students.push(vm.students[i].name);\n      }\n      c.instructor = GradeService.firstName + \" \" + GradeService.lastName;\n\n\n      //send\n      $http.post(\"http://localhost:3000/api/info/addstudents\", {\n        title: c.title,\n        students: c.students,\n        insName: c.instructor\n      });\n\n\n\n\n\n      vm.close();\n    };\n\n\n    vm.addStudent = function(name_)\n    {\n      var student =\n      {\n        name: name_,\n        id: vm.students.length\n      };\n      vm.students.push(student);\n    };\n    vm.removeStudent = function(name)\n    {\n      var index = vm.students.indexOf(name);\n      if (index > -1)\n      {\n        vm.students.splice(index,1);\n      }\n    };\n    vm.addMultipleStudents = function()\n    {\n      if (vm.studentString == \"\") return; // null check\n      var names = vm.studentString;\n      var result = names.split(\",\");\n      for (var i = 0; i < result.length; ++i)\n        vm.addStudent(result[i]);\n      vm.studentString=\"\";\n    };\n\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .config(routeConfig);\n\n  function routeConfig($routeProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'app/dashboard/dashboard.html',\n        controller: 'DashboardController',\n        controllerAs: 'dashboardCtrl'\n      })\n      .when('/information', {\n        templateUrl: 'app/information/information.html',\n        controller: 'InformationController',\n        controllerAs: 'information'\n      })\n      .when('/assignments', {\n        templateUrl: 'app/assignments/assignments.html',\n        controller: 'AssignmentsController',\n        controllerAs: 'assignments'\n      })\n      .when('/students', {\n        templateUrl: 'app/students/students.html',\n        controller: 'StudentsController',\n        controllerAs: 'students'\n      })\n      .otherwise({\n        redirectTo: '/'\n      });\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment)\n\n\n\n\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n  }\n\n})();\n\nangular.module(\"GradeTrack\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/AddAssignment/AddAssignmentModal.html\",\"<div class=modal-header><h1 class=modal-addClassHeader>Add Assignment</h1><a href=\\\"\\\" class=modal-closebutton ng-click=AddAssignmentModalController.close()>x</a></div><div class=modal-body><ul style=list-style:none><li class=modal-inputwrapper><div class=row><div class=col-md-6><div class=modal-infoheader>ASSIGNMENT NAME</div><div><input class=modal-username-input ng-model=AddAssignmentModalController.assignmentName type=text placeholder=\\\"Assignment Name\\\"> <span class=modal-errortext>{{AddAssignmentModalController.errorText}}</span></div></div><div class=col-md-6><div class=modal-infoheader>POINTS</div><div><input class=modal-username-input ng-model=AddAssignmentModalController.points type=number></div></div></div></li><li class=modal-inputwrapper><div class=row><div class=col-md-12><div class=modal-infoheader>DESCRIPTION</div><div><textarea ng-model=AddAssignmentModalController.assignmentDescription maxlength=1000 style=\\\"margin-left:-40px; margin-top:5px; display:inline;  width:calc(100% + 40px);  resize:none;  height:100px\\\">\\n          </textarea></div></div></div></li><li style=height:20px><button class=\\\"btn btn-primary\\\" style=float:right ng-click=AddAssignmentModalController.addAssignment()>Add Assignment</button></li></ul></div>\");\n$templateCache.put(\"app/AddClass/AddClassModal.html\",\"<div class=modal-header><h1 class=modal-addClassHeader>Add Course</h1><a href=\\\"\\\" class=modal-closebutton ng-click=AddClassModalController.close()>x</a></div><div class=modal-body><ul style=list-style:none><li class=modal-inputwrapper><div class=modal-infoheader>COURSE NAME</div><div><input class=modal-username-input ng-model=AddClassModalController.courseName type=text placeholder=\\\"Course Name\\\"> <span class=modal-errortext>{{AddClassModalController.errorText}}</span></div></li><li class=modal-inputwrapper><div class=modal-infoheader>DESCRIPTION</div><textarea ng-model=AddClassModalController.description class=modal-coursedescription></textarea></li><li class=modal-inputwrapper><div class=modal-infoheader>STUDENTS</div><div><div class=modal-studentbox><ul><li><input class=modal-addStudentsInput type=text ng-model=AddClassModalController.studentString placeholder=\\\"Enter students, separated by commas\\\"> <button class=\\\"btn btn-block modal-addStudentsButton\\\" ng-click=AddClassModalController.addMultipleStudents()>Add Student(s)</button></li><li ng-repeat=\\\"student in AddClassModalController.students\\\"><input class=modal-studentnameinput placeholder=name@institution.edu ng-model=student.name> <a href=\\\"\\\" class=modal-removestudent ng-click=AddClassModalController.removeStudent(student)>x</a></li></ul></div></div></li><li style=height:20px><button class=\\\"btn btn-primary\\\" style=float:right ng-click=AddClassModalController.createCourse()>Add Course</button></li></ul></div>\");\n$templateCache.put(\"app/AddStudent/AddStudentModal.html\",\"<div class=modal-header><h1 class=modal-addClassHeader>Add Student</h1><a href=\\\"\\\" class=modal-closebutton ng-click=AddStudentModalController.close()>x</a></div><div class=modal-body><ul style=list-style:none><li class=modal-inputwrapper><div class=row><div class=col-md-6><div class=modal-infoheader>FIRST NAME</div><div><input class=modal-username-input ng-model=AddStudentModalController.firstName type=text placeholder=\\\"First Name\\\"> <span class=modal-errortext>{{AddStudentModalController.errorText.first}}</span></div></div><div class=col-md-6><div class=modal-infoheader>LAST NAME</div><div><input class=modal-username-input ng-model=AddStudentModalController.lastName type=text placeholder=\\\"Last Name\\\"> <span class=modal-errortext>{{AddStudentModalController.errorText.last}}</span></div></div></div></li><li class=modal-inputwrapper><div class=modal-infoheader>STUDENT ID</div><div><input class=modal-username-input ng-model=AddStudentModalController.studentID type=text placeholder=\\\"Student ID\\\"> <span class=modal-errortext>{{AddStudentModalController.errorText.id}}</span></div></li><li class=modal-inputwrapper><div class=modal-infoheader>STUDENT EMAIL</div><div><input class=modal-username-input ng-model=AddStudentModalController.email type=text placeholder=name@institution.edu> <span class=modal-errortext>{{AddStudentModalController.errorText.email}}</span></div></li><li style=height:20px><button class=\\\"btn btn-primary\\\" style=float:right ng-click=AddStudentModalController.addStudent()>Add Student</button></li></ul></div>\");\n$templateCache.put(\"app/assignments/assignments.html\",\"<div style=\\\"height:100%; width:100%\\\"><div class=assignments-wrapper><div class=assignments-full-left-area><div ng-class=\\\"!assignments.showDetails ? \\'assignments-leftside\\' : \\'assignments-leftside-small\\'\\\"><div class=assignments-leftbox><div class=assignments-header><div class=assignments-coursename>{{assignments.activeCourse().name}}</div></div><button class=\\\"btn btn-positive assignments-addassignmentbutton\\\" ng-click=\\\"assignments.openAddAssignment(\\'lg\\')\\\">Add Assignment</button><div class=assignmentName-background><ul class=assignments-assignmentlist><li ng-repeat=\\\"assignment in assignments.activeCourse().assignments\\\"><div class=assignment-assignlistwrapper><div class=assignments-assignmentname><label for=assignmentInput></label><input maxlength=20 id=assignmentInput class=leftside-assignmentname-input type=text ng-model=assignment.name ng-click=assignments.clickAssignment(assignment.id) ng-blur=assignments.SendModifiedAssignmentName(assignment)></div><div class=calendarWrapper><button type=button class=\\\"btn btn-default\\\" ng-click=\\\"assignment.datepickerOpen=true\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></button></div><div class=calendarInput><input type=text class=form-control uib-datepicker-popup=fullDate ng-model=assignment.dueDate is-open=assignment.datepickerOpen datepicker-options=dateOptions datepicker-append-to-body=true ng-required=true close-text=Close alt-input-formats=altInputFormats></div></div></li></ul></div></div></div></div><div class=assignments-full-right-area ng-show=assignments.showDetails><div ng-class=\\\"assignments.showDetails ? \\'assignments-rightside-on\\' : \\'assignments-rightside-off\\'\\\"><div class=assignments-rightbox><div class=rightbox-Header><input maxlength=20 size=20 id=assignmentInput type=text ng-model=assignments.activeAssignment().name ng-blur=assignments.SendModifiedAssignmentName(assignments.activeAssignment())> <a href=\\\"\\\" ng-click=\\\"assignments.showDetails=false\\\">x</a></div><div class=rightbox-descriptionTitle><h4>Description</h4></div><div class=rightbox-descriptioninput><textarea ng-model=assignments.activeAssignment().description ng-blur=assignments.SendModifiedDescription(assignments.activeAssignment()) maxlength=1000></textarea></div><div class=rightbox-piechart><canvas height=100% width=100% id=pie class=\\\"chart chart-pie\\\" chart-data=assignments.activeAssignment().gradeArray chart-labels=assignments.labelArray></canvas></div><hr class=rightbox-divider><div class=rightbox-pointswrapper><span>Points: <input type=number min=0 ng-model=assignments.activeAssignment().points ng-blur=assignments.SendModifiedPoints(assignments.activeAssignment())> </span><span style=\\\"margin-top:1px; float:right; margin-right:32px\\\"><button class=\\\"btn btn-sm btn-primary\\\">Submit</button></span></div><hr class=rightbox-divider><h4 class=rightbox-gradesheader>Grades</h4><div class=rightbox-gradesarea><ul><li ng-repeat=\\\"student in assignments.activeCourse().students\\\"><span class=rightbox-studentname>{{student.name}}</span><div class=rightbox-studentGradeWrapper><span>{{student.assignmentGrades[assignments.activeAssignment().id] / assignments.activeAssignment().points * 100 | number:2}}%</span> <input type=number min=0 ng-model=student.assignmentGrades[assignments.activeAssignment().id] , ng-focus=\\\"student.oldAssignmentGrades[assignments.activeAssignment().id] = student.assignmentGrades[assignments.activeAssignment().id]\\\" ng-blur=\\\"assignments.changeGradeArray(assignments.activeAssignment(), student); assignments.SendModifiedGrade(assignments.activeAssignment(), student)\\\"></div></li></ul></div></div></div></div></div></div>\");\n$templateCache.put(\"app/dashboard/dashboard.html\",\"<div style=\\\"overflow-y:auto; width:100%; height:100%; position:absolute; overflow-x:hidden; background:lightblue; padding-left:10px; padding-right:10px; padding-bottom:10px\\\"><!--card--><div class=row style=\\\"margin-top:10px; margin-left:5px; margin-right:5px; margin-bottom:10px\\\"><div class=col-md-12 style=\\\"background:white; border-radius:20px\\\"><div class=row><div class=col-md-6><h1>Welcome, {{dashboardCtrl.professorName}}</h1><ul><li><h3>Classes managed: {{dashboardCtrl.getCourses().length}}</h3></li><li><h3>Total students enrolled: {{dashboardCtrl.studentsEnrolled()}}</h3></li></ul></div><div class=col-md-6><h1 style=text-align:center>Your class averages</h1><canvas id=bar class=\\\"chart chart-bar\\\" chart-data=dashboardCtrl.gradeAverageArray chart-labels=dashboardCtrl.courseNameArray chart-series=dashboardCtrl.series></canvas></div></div></div></div><div class=row ng-repeat=\\\"course in dashboardCtrl.getCourses()\\\" style=\\\"margin-top:10px; margin-left:5px; margin-right:5px; margin-bottom:10px\\\"><div class=col-md-12 style=\\\"background:white; border-radius:20px\\\"><div class=row><div class=col-md-10><h1>{{course.name}}</h1><h3>Students: {{ course.students.length }}</h3><div style=\\\"padding-bottom:10px; width:110%\\\"><timeline items=dashboardCtrl.items[$index] options=dashboardCtrl.options></timeline></div></div><div class=col-md-2><div class=row><div class=col-md-12 style=text-align:right><h4>Grade breakdown</h4></div></div><ul style=list-style:none><li ng-repeat=\\\"i in [0,1,2,3,4]\\\"><div class=col-md-12><h5 style=float:right>{{dashboardCtrl.getGradeArray(course)[i].grade}}: {{dashboardCtrl.getGradeArray(course)[i].amount}}</h5></div></li></ul></div></div></div></div></div>\");\n$templateCache.put(\"app/grades/grades.html\",\"<head><style>table, th, td{\\n      border: 1px solid grey;\\n      border-collapse: collapse;\\n      padding: 5px;\\n    }\\n\\n    table tr:nth-child(odd){\\n      background-color: #f2f2f2;\\n    }\\n\\n    table tr:nth-child(even){\\n      background-color: #ffffff;\\n    }</style></head><body><h2>Grades for Students</h2><div ng-controller=GradesController as vm style=\\\"100%; width:100%\\\"><table border=0><tr><td>Last Name</td><td>First Name</td><td>Grade Percentage</td><td>Grade Letter</td></tr><tr ng-repeat=\\\"course in courses.student460\\\"><td>{{student46.first}}</td><td>{{student46.last}}</td><td>{{student46.percent}}</td><td>{{student46.letter}}</td></tr></table><div class=grades-wrapper></div></div></body>\");\n$templateCache.put(\"app/information/information.html\",\"<div ng-controller=\\\"InformationController as vm\\\" style=\\\"height:100%; width:100%\\\"><div class=information-wrapper><div class=information-full-main-area><div class=information-main><div style=\\\"overflow:hidden; border-radius:10px; padding-left:10px; padding-right:10px; background:#e9eef5; border:thin solid #000000; position:relative; left:0; width:100%; top:0; height:100%\\\"><div style=\\\"background:#d4e4fa; border-bottom:thin solid #000000;  height:35px; margin-left:-10px; margin-right:-10px\\\"><div style=\\\"padding-top:4px; padding-left:10px;font-size:20px\\\">{{vm.activeCourse().name}}</div></div><div style=\\\"margin-top:10px; margin-bottom:10px; height:calc(100vh - 170px); overflow:auto; background:#FFFFFF\\\"><!-- Main content --><!-- Information Area --><!-- Section of class information  --><section><div class=col-xs-9><div class=infoHeader><h3>Class {{classInfo.id}} - {{classInfo.name}} <button type=button class=\\\"btn btn-default infoButton\\\" ng-click=toggleDisable1()><span class=\\\"glyphicon glyphicon-edit\\\"></span></button></h3></div><div class=infoSection><label>Desption:</label><br><textarea id=classInfo rows=8 cols=100 ng-disabled=!editDes>{{classInfo.info}}</textarea><br><br><!-- <input type=\\\"submit\\\" ng-disabled=\\\"!editInfo\\\" ng-click=\\\"toggleDisable1()\\\"> --></div></div></section><!-- Section for Instructor --><section class=col-xs-9><div class=infoHeader><h3>Instructor Information<lable><button type=button class=\\\"btn btn-default infoButton\\\" ng-click=toggleDisable2()><span class=\\\"glyphicon glyphicon-edit\\\"></span></button></lable></h3></div><div class=infoSection><label><ul class=list-group><br><li class=list-group-item>Name: <input type=text value=\\\"{{profile.firstName}}{{profile.lastName}} \\\" ng-disabled=!editInfo><br></li><br><li class=list-group-item>Email: <input type=text value={{profile.email}} ng-disabled=!editInfo><br></li><br><li class=list-group-item>Phone: <input type=text value={{profile.email}} ng-disabled=!editInfo><br></li><br><li class=list-group-item>Office Houes: <input type=text value={{profile.office}} ng-disabled=!editInfo> <input type=text value={{profile.hours}} ng-disabled=!editInfo><br></li><!-- <input type=\\\"submit\\\" ng-disabled=\\\"!editInfo\\\" ng-click=\\\"toggleDisable2()\\\"> --></ul></label></div></section><!-- Section for TA   (the bottom not works yet)--><section class=col-xs-9><div class=infoHeader><h3>Teacher\\'s Assistant<lable><button type=button class=\\\"btn btn-default infoButton\\\" ng-click=toggleDisable3()><span class=\\\"glyphicon glyphicon-plus\\\"></span></button></lable></h3></div><div class=infoSection ng-show=!ShowTab><lable><ul class=list-group><br><li class=list-group-item>Name: <input type=text value=\\\"{{profile.firstName}}{{profile.lastName}} \\\" ng-disabled=!editInfo><br></li><br><li class=list-group-item>Email: <input type=text value={{profile.email}} ng-disabled=!editInfo><br></li></ul></lable></div></section></div></div></div></div></div></div>\");\n$templateCache.put(\"app/login/LoginModal.html\",\"<div class=modal-header><h1 style=\\\"margin-top:10px; text-align:center\\\">Log In</h1><a href=\\\"\\\" class=modal-closebutton ng-click=LoginModalController.close()>x</a></div><div class=modal-body><ul style=list-style:none><li class=modal-inputwrapper><div class=modal-infoheader>EMAIL ADDRESS</div><div><input class=modal-password-input type=text ng-model=LoginModalController.username placeholder=name@company.com> <span class=modal-errortext style=margin-left:-40px>{{LoginModalController.errorText.username}}</span></div></li><li class=modal-inputwrapper><div class=modal-infoheader>PASSWORD</div><div><input class=modal-password-input type=password ng-model=LoginModalController.password placeholder=Password> <span class=modal-errortext style=margin-left:-40px>{{LoginModalController.errorText.password}}</span></div></li><li style=height:20px><span class=modal-errortext style=\\\"position:absolute; left:15px; bottom:20px\\\">{{LoginModalController.errorText.login}}</span> <button class=\\\"btn btn-primary\\\" style=float:right ng-click=LoginModalController.login()>Log In</button></li></ul></div>\");\n$templateCache.put(\"app/signup/signupModal.html\",\"<div class=modal-header><h1 style=\\\"margin-top:10px; text-align:center\\\">Sign Up</h1><a href=\\\"\\\" class=modal-closebutton ng-click=signupModalController.close()>x</a></div><div class=modal-body><ul style=list-style:none><li class=modal-inputwrapper><div class=row><div class=col-md-6><div class=modal-infoheader>FIRST NAME</div><div><input class=modal-username-input type=text ng-model=signupModalController.firstName placeholder=\\\"\\\"> <span class=modal-errortext>{{signupModalController.errorText.first}}</span></div></div><div class=col-md-6><div class=modal-infoheader>LAST NAME</div><div><input class=modal-username-input type=text ng-model=signupModalController.lastName placeholder=\\\"\\\"> <span class=modal-errortext>{{signupModalController.errorText.last}}</span></div></div></div></li><li class=modal-inputwrapper><div class=row><div class=col-md-6><div class=modal-infoheader>USERNAME</div><div><input class=modal-username-input type=text ng-model=signupModalController.username placeholder=Username> <span class=modal-errortext>{{signupModalController.errorText.username}}</span></div></div><div class=col-md-6><div class=modal-infoheader>STUDENT ID</div><div><input class=modal-username-input type=text ng-model=signupModalController.studentID placeholder=\\\"\\\"> <span class=modal-errortext>{{signupModalController.errorText.id}}</span></div></div></div></li><li class=modal-inputwrapper><div class=row><div class=col-md-6><div class=modal-infoheader>EMAIL ADDRESS</div><div><input class=modal-username-input type=text ng-model=signupModalController.email placeholder=name@company.com> <span class=modal-errortext>{{signupModalController.errorText.email}}</span></div></div><div class=col-md-6><div class=modal-infoheader>ACCOUNT TYPE</div><div style=margin-left:-40px class=btn-group data-toggle=buttons><label ng-class=\\\"signupModalController.type==\\'student\\' ? \\'btn btn-primary\\' : \\'btn btn-primary active\\'\\\"><input type=radio name=options ng-model=signupModalController.type value=instructor autocomplete=off checked> Instructor</label><label ng-class=\\\"signupModalController.type==\\'student\\' ? \\'btn btn-primary active\\' : \\'btn btn-primary\\'\\\"><input type=radio name=options ng-model=signupModalController.type value=student autocomplete=off> Student</label></div></div></div></li><li class=modal-inputwrapper><div class=modal-infoheader>PASSWORD</div><div><input class=modal-username-input type=password ng-model=signupModalController.password placeholder=Password> <span class=modal-errortext>{{signupModalController.errorText.password}}</span></div></li><li style=height:20px><button class=\\\"btn btn-primary\\\" style=float:right ng-click=signupModalController.signup()>Sign Up</button></li></ul></div>\");\n$templateCache.put(\"app/students/students.html\",\"<div ng-controller=\\\"StudentsController as vm\\\" style=\\\"height:100%; width:100%\\\"><div class=students-wrapper><div class=students-full-main-area><div class=students-main><div style=\\\"overflow:hidden; border-radius:10px; padding-left:10px; padding-right:10px; background:#e9eef5; border:thin solid #000000; position:relative; left:0; width:100%; top:0; height:100%\\\"><div style=\\\"background:#d4e4fa; border-bottom:thin solid #000000;  height:35px; margin-left:-10px; margin-right:-10px\\\"><div style=\\\"padding-top:4px; padding-left:10px;font-size:20px\\\">{{vm.activeCourse().name}}</div><div><button ng-click=\\\"students.openAddStudentModal(\\'lg\\')\\\" class=\\\"btn btn-primary btn-sm\\\" style=\\\"position:absolute; right:5px; top:2px\\\">Add Student</button></div></div><div style=\\\"margin-top:10px; margin-bottom:10px; height:calc(100vh - 170px); overflow:auto; background:#d1c4e9; box-shadow: 10px 10px 5px #888888\\\"><!--Switching to BS table--><table class=\\\"table table-striped\\\"><thead><tr><th>Last Name</th><th>First Name</th><th>Grade</th><th>E-mail</th><th>ID</th></tr></thead><tbody><tr ng-repeat=\\\"student in students.list()\\\"><td>{{student.last}}</td><td>{{student.first}}</td><td>{{student.grade}}</td><td>{{student.email}}</td><td>{{student.id}}</td><td><button class=\\\"btn btn-danger btn-sm glyphicon glyphicon-remove students-removebutton\\\" ng-click=students.removeStudent(student)></button></td></tr></tbody></table></div></div></div></div></div></div>\");}]);"],"sourceRoot":"/source/"}