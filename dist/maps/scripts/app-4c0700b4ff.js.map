{"version":3,"sources":["scripts/app.js"],"names":["angular","module","StudentsController","GradeService","$inject","controller","MainController","$uibModal","vm","this","isLoggedIn","loggedIn","login","logout","tabs","active","label","url","openLogin","size","open","animation","templateUrl","controllerAs","openAddClass","activeTab","lastName","firstName","courses","getActiveCourse","setActiveCourse","id","clickTab","course","tab","isActiveTab","LoginModalController","$scope","$uibModalInstance","dismiss","close","InformationController","GradesController","DashboardController","labels","series","data","getCourses","gradeAverageArray","courseNameArray","AssignmentsController","showDetails","activeCourse","addAssignment","assignmentName","activeAssignment","getActiveAssignment","setActiveAssignment","clickAssignment","getGradeIndex","percent","changeGradeArray","assignment","student","newGrade","assignmentGrades","oldGrade","oldAssignmentGrades","oldIndex","points","newIndex","gradeArray","labelArray","AddClassModalController","$http","studentString","courseName","students","addCourseServerPackage","c","title","instructor","i","length","push","name","post","insName","createCourse","addCourse","addStudent","name_","removeStudent","index","indexOf","splice","addMultipleStudents","names","result","split","service","expanded","average","Math","round","random","assignments","weights","weight","currentCourseID","currentAssignmentID","id_","t","studentID","overallGrade","description_","description","datepickerOpen","type","dueDate","Date","toString","j","k","l","runBlock","$log","debug","run","routeConfig","$routeProvider","when","otherwise","redirectTo","config","constant","malarkey","moment","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","$templateCache","put"],"mappings":"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","file":"scripts/app-4c0700b4ff.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack', ['ngRoute', 'ngAnimate', 'chart.js', 'ui.bootstrap', 'toastr']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('StudentsController', StudentsController);\n\n  /** @ngInject */\n  function StudentsController(GradeService) {\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController(GradeService, $uibModal) {\n    var vm = this;\n\n    vm.isLoggedIn = function() { return GradeService.loggedIn;  };\n    vm.login = function() {\n      GradeService.loggedIn = true;};\n\n    vm.logout = function()\n    {\n      GradeService.loggedIn = false;\n    };\n\n    vm.tabs = [\n      {\n        active: true,\n        label: \"Information\",\n        url: \"#/information\"\n\n      },\n      {\n        active: false,\n        label: \"Assignments\",\n        url: \"#/assignments\"\n      },\n      {\n        active: false,\n        label: \"Students\",\n        url: \"#/students\"\n      }\n    ];\n\n    vm.openLogin = function (size) {\n\n      $uibModal.open({\n        animation: true,\n        templateUrl: 'app/login/LoginModal.html',\n        controller: 'LoginModalController',\n        controllerAs: 'LoginModalController',\n        size: size\n      });\n    };\n    vm.openAddClass = function (size) {\n\n      $uibModal.open({\n        animation: true,\n        templateUrl: 'app/AddClass/AddClassModal.html',\n        controller: 'AddClassModalController',\n        controllerAs: 'AddClassModalController',\n        size: size\n      });\n    };\n\n    vm.activeTab = vm.tabs[0];\n    vm.lastName = GradeService.firstName;\n    vm.firstName = GradeService.lastName;\n    vm.courses = function() { return GradeService.courses; };\n    vm.getActiveCourse = function(){return GradeService.getActiveCourse(); };\n    vm.setActiveCourse = function(id) {GradeService.setActiveCourse(id); };\n\n    vm.clickTab = function(course,tab)\n    {\n      vm.setActiveCourse(course.id);\n      vm.activeTab.active=false;\n      vm.activeTab = tab;\n      vm.activeTab.active=true;\n    };\n\n    vm.isActiveTab = function(course,tab) {\n      return (course == vm.getActiveCourse() && tab.active);\n    };\n\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('LoginModalController', LoginModalController);\n\n  /** @ngInject */\n  function LoginModalController(GradeService, $scope, $uibModalInstance) {\n    var vm = this;\n    vm.login = function()\n    {\n      GradeService.loggedIn = true;\n      $uibModalInstance.dismiss('cancel');\n    };\n    vm.close = function()\n    {\n      $uibModalInstance.dismiss('cancel');\n    };\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('InformationController', InformationController);\n\n  /** @ngInject */\n  function InformationController() {\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('GradesController', GradesController);\n\n  /** @ngInject */\n  function GradesController() {\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('DashboardController', DashboardController);\n\n  /** @ngInject */\n  function DashboardController(GradeService) {\n    var vm = this;\n\n\n    vm.labels = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\n    vm.series = ['Series A'];\n\n    vm.data = [\n      [65, 59, 80, 81, 56, 55, 40]\n    ];\n\n    vm.getCourses = function() { return GradeService.courses; };\n\n    vm.gradeAverageArray = [GradeService.gradeAverageArray ];\n    vm.courseNameArray = GradeService.courseNameArray;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('AssignmentsController', AssignmentsController);\n\n  /** @ngInject */\n  function AssignmentsController(GradeService) {\n    var vm = this;\n    vm.showDetails = false;\n    vm.activeCourse = function() { return GradeService.getActiveCourse()};\n    vm.addAssignment = function(assignmentName) { GradeService.addAssignment(vm.activeCourse(), \"Enter Description\", assignmentName)};\n\n\n    vm.activeAssignment = function() { return GradeService.getActiveAssignment(); };\n    vm.setActiveAssignment = function(id) { GradeService.setActiveAssignment(id); };\n\n    vm.clickAssignment = function(id)\n    {\n        GradeService.setActiveAssignment(id);\n        vm.showDetails = true;\n    };\n\n    vm.getGradeIndex = function(percent)\n    {\n      if (percent >= 0.9)\n        return 0;\n      else if (percent >= 0.8)\n        return 1;\n      else if (percent >= 0.7)\n        return 2;\n      else if (percent >= 0.6)\n        return 3;\n      return 4;\n    };\n    vm.changeGradeArray = function(assignment, student)\n    {\n      var id = assignment.id;\n      var newGrade = student.assignmentGrades[id];\n      var oldGrade = student.oldAssignmentGrades[id];\n      var oldIndex = 4;\n      if (oldGrade != null)\n        oldIndex = vm.getGradeIndex(oldGrade / assignment.points);\n      var newIndex = 4;\n      if (newGrade != null)\n        newIndex = vm.getGradeIndex(newGrade / assignment.points);\n        --assignment.gradeArray[oldIndex];\n        ++assignment.gradeArray[newIndex];\n\n    };\n\n    vm.labelArray = [ \"A\",\"B\",\"C\",\"D\",\"F\" ];\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('AddClassModalController', AddClassModalController);\n  /** @ngInject */\n  function AddClassModalController(GradeService, $http, $scope, $uibModalInstance) {\n    var vm = this;\n\n    vm.close = function()\n    {\n      vm.studentString=\"\";\n      vm.courseName = \"\";  // reset\n      vm.students = [];\n      $uibModalInstance.dismiss('cancel');\n    };\n\n    vm.courseName = \"\";\n    vm.students = [];\n    vm.studentString = \"\";\n\n\n\n    vm.addCourseServerPackage = function()\n    {\n      var c =\n      {\n        title: vm.courseName,\n        students: [],\n        instructor: \"\"\n      };\n\n      for (var i =0; i < vm.students.length; ++i)\n      {\n        c.students.push(vm.students[i].name);\n      }\n      c.instructor = GradeService.firstName + \" \" + GradeService.lastName;\n\n      // do stuff\n      $http.post(\"http://localhost:3000/api/info/addstudents\", {\n        title: c.title,\n        students: c.students,\n        insName: c.instructor\n      });\n\n    };\n\n    vm.createCourse = function()\n    {\n      if (vm.courseName == \"\") return; // empty class error\n      var course = GradeService.addCourse(vm.courseName);\n      for (var i = 0; i < vm.students.length; ++i)\n      {\n        GradeService.addStudent(course, vm.students[i].name, 0);\n      }\n      vm.addCourseServerPackage();\n      vm.close();\n    };\n    vm.addStudent = function(name_)\n    {\n      var student =\n      {\n        name: name_,\n        id: vm.students.length\n      };\n      vm.students.push(student);\n    };\n    vm.removeStudent = function(name)\n    {\n      var index = vm.students.indexOf(name);\n      if (index > -1)\n      {\n        vm.students.splice(index,1);\n      }\n    };\n    vm.addMultipleStudents = function()\n    {\n      if (vm.studentString == \"\") return; // null check\n      var names = vm.studentString;\n      var result = names.split(\",\");\n      for (var i = 0; i < result.length; ++i)\n        vm.addStudent(result[i]);\n      vm.studentString=\"\";\n    };\n\n\n  }\n})();\n\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .service('GradeService', function(){\n\n      this.loggedIn = true;\n      this.lastName = \"Prof\";\n      this.firstName = \"name\";\n\n      this.gradeAverageArray = []; // needed for dashboard graphing\n      this.courseNameArray = [];\n\n      this.courses=[];\n\n      this.addCourse = function(name_)             // add data as it becomes needed\n      {\n        var c =\n        {\n          name : name_,\n          expanded : false,\n          average: Math.round((Math.random() * 50 + 50) * 100) / 100, //random 50-100, 2 decimals\n          id : this.courses.length,\n          assignments: [],\n          students: [],\n          weights: [\n            {\n              name: \"Test\",\n              weight: 40\n            },\n            {\n              name: \"Quiz\",\n              weight: 30\n            },\n            {\n              name: \"Homework\",\n              weight: 30\n            }\n          ]\n        };\n\n        this.courses.push(c);\n        this.gradeAverageArray.push(c.average);\n        this.courseNameArray.push(c.name);\n        return c;\n      };\n\n      this.currentCourseID = 0;\n      this.getActiveCourse = function() { return this.courses[this.currentCourseID]};\n      this.setActiveCourse = function(id) {\n        this.currentCourseID = id;\n        this.currentAssignmentID = 0; // reset for safety\n      };\n      this.currentAssignmentID = 0;\n      this.getActiveAssignment = function() { return this.getActiveCourse().assignments[this.currentAssignmentID]; };\n      this.setActiveAssignment = function(id) { this.currentAssignmentID = id; };\n\n\n\n      this.addStudent = function(course, name_, id_) {\n        var t = {\n          name: name_,\n          studentID: id_,\n          id: course.students.length,\n          assignmentGrades: [],\n          oldAssignmentGrades: [],  //graph purposes\n          overallGrade: 0\n        };\n        for (var i = 0; i < course.assignments.length; ++i) {\n          t.assignmentGrades.push(0);\n          t.oldAssignmentGrades.push(0);\n        }\n        course.students.push(t);\n      };\n      this.addAssignment = function(course, description_, assignmentName)\n      {\n        var t = {\n          name: assignmentName,\n          description: description_,\n          datepickerOpen: false,    // assignment menu usage\n          id: course.assignments.length,\n          points: 500,\n          type: \"Test\",\n          dueDate: new Date(),\n          gradeArray: [0,0,0,0,0] //for graph display\n        };\n        course.assignments.push(t);\n      };\n\n\n      //random data\n      for (var i = 0; i < 5; ++i)\n      {\n        var c = this.addCourse(\"CS\" + (460+i).toString());\n        for (var j = 0; j < 5; ++j)\n        {\n          this.addAssignment(c, \"Enter Description\",\"Assignment \" + j.toString());\n        }\n\n        for (var k = 0; k < 30; ++k)\n        {\n          this.addStudent(c, \"Student \" + k.toString(), 1000000+ j);\n        }\n        for (var l = 0; l < 5; ++l)\n        {\n          c.assignments[l].gradeArray[4] = c.students.length; //initial all to F\n        }\n      }\n\n\n\n      this.activeCourse = this.courses[0];\n\n    });\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .config(routeConfig);\n\n  function routeConfig($routeProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'app/dashboard/dashboard.html',\n        controller: 'DashboardController',\n        controllerAs: 'dashboard'\n      })\n      .when('/information', {\n        templateUrl: 'app/information/information.html',\n        controller: 'InformationController',\n        controllerAs: 'information'\n      })\n      .when('/assignments', {\n        templateUrl: 'app/assignments/assignments.html',\n        controller: 'AssignmentsController',\n        controllerAs: 'assignments'\n      })\n      .when('/students', {\n        templateUrl: 'app/students/students.html',\n        controller: 'StudentsController',\n        controllerAs: 'students'\n      })\n      .otherwise({\n        redirectTo: '/'\n      });\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment)\n\n\n\n\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n  }\n\n})();\n\nangular.module(\"GradeTrack\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/AddClass/AddClassModal.html\",\"<div class=modal-header><h1 style=\\\"margin-top:10px; text-align:center\\\">Add Class</h1><a href=\\\"\\\" class=modal-closebutton ng-click=AddClassModalController.close()>x</a></div><div class=modal-body><ul style=list-style:none><li class=modal-inputwrapper><div class=modal-infoheader>CLASS NAME</div><div><input class=modal-username-input ng-model=AddClassModalController.courseName type=text placeholder=\\\"Class Name\\\"></div></li><li style=height:20px><input style=\\\"right:0; margin-right:95px; position:absolute; width:400px\\\" type=text ng-model=AddClassModalController.studentString placeholder=\\\"Enter students, separated by commas\\\"> <button class=\\\"btn btn-primary\\\" style=margin-bottom:10px;float:right ng-click=AddClassModalController.addMultipleStudents()>Import</button></li><li class=modal-inputwrapper><div class=modal-infoheader>STUDENTS</div><div><div class=modal-username-input style=\\\"border: thin solid darkgray; width:100%; height:200px; overflow-y:auto\\\"><ul style=\\\"list-style:none; padding-left:0; margin-left:0\\\"><li><button class=\\\"btn btn-block\\\" href=\\\"\\\" ng-click=\\\"AddClassModalController.addStudent(\\'\\')\\\">Add Student</button></li><li ng-repeat=\\\"student in AddClassModalController.students\\\"><input style=\\\"width:calc(100% - 20px)\\\" placeholder=name@institution.edu ng-model=student.name> <a href=\\\"\\\" class=modal-removestudent ng-click=AddClassModalController.removeStudent(student)>x</a></li></ul></div></div></li><li style=height:20px><button class=\\\"btn btn-primary\\\" style=float:right ng-click=AddClassModalController.createCourse()>Add Course</button></li></ul></div>\");\n$templateCache.put(\"app/assignments/assignments.html\",\"<div style=\\\"height:100%; width:100%\\\"><div class=assignments-wrapper><div class=assignments-full-left-area><div ng-class=\\\"!assignments.showDetails ? \\'assignments-leftside\\' : \\'assignments-leftside-small\\'\\\"><div style=\\\"overflow:hidden; border-radius:10px; padding-left:10px; padding-right:10px; background:#e9eef5; border:thin solid #000000; position:relative; left:0; width:100%; top:0; height:100%\\\"><div style=\\\"background:#d4e4fa; border-bottom:thin solid #000000;  height:35px; margin-left:-10px; margin-right:-10px\\\"><div style=\\\"padding-top:4px; padding-left:10px;font-size:20px\\\">{{assignments.activeCourse().name}}</div></div><button style=margin-top:10px class=\\\"btn btn-positive\\\" ng-click=\\\"assignments.addAssignment(\\'Enter Name\\')\\\">Add Assignment</button><div style=\\\"margin-top:10px; margin-bottom:10px; height:calc(100vh - 170px); overflow:auto; background:#FFFFFF\\\"><ul class=assignments-assignmentlist><li ng-repeat=\\\"assignment in assignments.activeCourse().assignments\\\"><div style=\\\"margin: 0; height:40px\\\"><div style=\\\"float:left; display:inline-block; text-align:center\\\"><label for=assignmentInput></label><input maxlength=20 id=assignmentInput type=text style=\\\"position:absolute; width:calc(100% - 260px); vertical-align:middle; height:40px; margin-top:0px;  background:none; border:none\\\" ng-model=assignment.name ng-click=assignments.clickAssignment(assignment.id)></div><div style=\\\"float:right; margin-top:3px\\\"><button style=height:34px type=button class=\\\"btn btn-default\\\" ng-click=\\\"assignment.datepickerOpen=true\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></button></div><div style=\\\"float:right; margin-top:3px\\\"><input style=width:auto type=text class=form-control uib-datepicker-popup=fullDate ng-model=assignment.dueDate is-open=assignment.datepickerOpen datepicker-options=dateOptions datepicker-append-to-body=true ng-required=true close-text=Close alt-input-formats=altInputFormats></div></div></li></ul></div></div></div></div><div class=assignments-full-right-area ng-show=assignments.showDetails><div ng-class=\\\"assignments.showDetails ? \\'assignments-rightside-on\\' : \\'assignments-rightside-off\\'\\\"><div style=\\\"overflow-x:hidden; border-radius:10px; border:thin solid #000000; background:#e9eef5; position:relative; left:0; width:100%; top:0; height:100%; padding-left:10px; overflow-y:hidden\\\"><div style=\\\"background:#d4e4fa; border-bottom:thin solid #000000; height:35px; margin-left:-10px; margin-right:-10px\\\"><input maxlength=20 size=20 id=assignmentInput type=text style=\\\"margin-left:10px; margin-top:2px; font-size:20px; background:none; border:none\\\" ng-model=assignments.activeAssignment().name> <a href=\\\"\\\" ng-click=\\\"assignments.showDetails=false\\\" style=\\\"position:absolute; right:10px; top:4px; font-size:16px; font-weight: bold; text-decoration: none; color:#000000\\\">x</a></div><div style=padding-top:10px><h4 style=display:inline>Description</h4></div><div style=margin-right:160px><textarea ng-model=assignments.activeAssignment().description maxlength=1000 style=\\\"margin-top:5px; display:inline; width:100%; resize:none; height:100px\\\"></textarea></div><div style=\\\"position:absolute; top:45px; right:10px; width:140px\\\"><canvas height=100% width=100% id=pie class=\\\"chart chart-pie\\\" chart-data=assignments.activeAssignment().gradeArray chart-labels=assignments.labelArray></canvas></div><hr style=\\\"width:100%; left:0; margin-left:-5px; margin-top:2px\\\"><div style=\\\"height:35px; margin-left:-15px; margin-right:-15px; border:thin solid #000000\\\"><span style=\\\"height:30px; float:left; margin-top:4px; margin-left:18px\\\">Points: <input type=number min=0 ng-model=assignments.activeAssignment().points> </span><span style=\\\"margin-top:6px; float:right; margin-right:32px\\\">Type:<select ng-model=assignments.activeAssignment().type><option ng-repeat=\\\"weight in assignments.activeCourse().weights\\\">{{weight.name}}</option></select></span></div><hr style=\\\"width:100%; left:0; margin-left:-5px; margin-top:2px\\\"><h4 style=margin-bottom:10px>Grades</h4><div style=\\\"width:99%; margin-bottom:10px; background:#FFFFFF; height:calc(100vh - 380px); overflow:auto\\\"><ul style=\\\"list-style:none; margin:0; padding:0\\\"><li style=\\\"border-bottom:thin solid #000000; height:30px\\\" ng-repeat=\\\"student in assignments.activeCourse().students\\\"><span style=\\\"float:left; margin-top:6px\\\">{{student.name}}</span><div style=\\\"float:right; margin-right:10px\\\"><span style=\\\"display:inline-block; margin-top:6px; right:85px\\\">{{student.assignmentGrades[assignments.activeAssignment().id] / assignments.activeAssignment().points * 100 | number:2}}%</span> <input style=\\\"display:inline-block; margin-top:2px; width:60px;right:0\\\" type=number min=0 ng-model=student.assignmentGrades[assignments.activeAssignment().id] , ng-focus=\\\"student.oldAssignmentGrades[assignments.activeAssignment().id] = student.assignmentGrades[assignments.activeAssignment().id]\\\" ng-blur=\\\"assignments.changeGradeArray(assignments.activeAssignment(), student)\\\"></div></li></ul></div></div></div></div></div></div>\");\n$templateCache.put(\"app/dashboard/dashboard.html\",\"<div style=\\\"width:100%; height:100%; position:absolute; overflow:hidden; background:lightblue; padding-left:10px; padding-right:10px; padding-bottom:10px\\\"><!--card--><ul><li ng-repeat=\\\"course in dashboard.getCourses()\\\">{{course.name}}</li></ul></div>\");\n$templateCache.put(\"app/grades/grades.html\",\"<head><style>table, th, td{\\n      border: 1px solid grey;\\n      border-collapse: collapse;\\n      padding: 5px;\\n    }\\n\\n    table tr:nth-child(odd){\\n      background-color: #f2f2f2;\\n    }\\n\\n    table tr:nth-child(even){\\n      background-color: #ffffff;\\n    }</style></head><body><h2>Grades for Students</h2><div ng-controller=GradesController as vm style=\\\"100%; width:100%\\\"><table border=0><tr><td>Last Name</td><td>First Name</td><td>Grade Percentage</td><td>Grade Letter</td></tr><tr ng-repeat=\\\"course in courses.student460\\\"><td>{{student46.first}}</td><td>{{student46.last}}</td><td>{{student46.percent}}</td><td>{{student46.letter}}</td></tr></table><div class=grades-wrapper></div></div></body>\");\n$templateCache.put(\"app/information/information.html\",\"Information Area\");\n$templateCache.put(\"app/login/LoginModal.html\",\"<div class=modal-header><h1 style=\\\"margin-top:10px; text-align:center\\\">Log In</h1><a href=\\\"\\\" class=modal-closebutton ng-click=LoginModalController.close()>x</a></div><div class=modal-body><ul style=list-style:none><li><button class=\\\"btn btn-danger btn modal-googlebutton\\\">Log In Using Google</button></li><li><hr class=modal-breaker><span class=modal-overlay-text>OR</span></li><li class=modal-inputwrapper><div class=modal-infoheader>EMAIL ADDRESS</div><div><input class=modal-username-input type=text placeholder=name@company.com></div></li><li class=modal-inputwrapper><div class=modal-infoheader>PASSWORD</div><div><input class=modal-password-input type=password placeholder=Password></div></li><li style=height:20px><button class=\\\"btn btn-primary\\\" style=float:right ng-click=LoginModalController.login()>Log In</button></li></ul></div>\");\n$templateCache.put(\"app/students/students.html\",\"<head><style>table, th , td {\\n       border: 2px solid black;\\n       border-collapse: collapse;\\n       padding: 5px;\\n    }\\n\\n    table tr:nth-child(odd) {\\n       background-color: #f2f2f2;\\n    }\\n\\n    table tr:nth-child(even) {\\n       background-color: #ffffff;\\n    }</style></head><body><div ng-controller=\\\"StudentsController as vm\\\" style=\\\"height:100%; width:100%\\\"><table border=0 ; style=width:80%><tr><td width=5%><b>Last Name</b></td><td width=5%><b>First Name</b></td><td width=3%><b>Grade</b></td><td width=5%><b>E-mail</b></td><td width=3%><b>ID</b></td></tr><tr><td>Smith</td><td>John</td><td>80%</td><td>SmithJ@unlv.nevada.edu</td><td>11223344</td></tr><tr><td>Williams</td><td>Rebecca</td><td>85%</td><td>WilliamsR@unlv.nevada.edu</td><td>2244553322</td></tr><tr><td>Aster</td><td>Billy</td><td>66%</td><td>AsterB@unlv.nevada.edu</td><td>43233333</td></tr><tr><td>Bills</td><td>Derek</td><td>90%</td><td>BillsD@unlv.nevada.edu</td><td>1010101010</td></tr><tr><td>Dillan</td><td>Ben</td><td>45%</td><td>DillanB@unlv.nevada.edu</td><td>3428237420</td></tr></table></div></body>\");}]);"],"sourceRoot":"/source/"}