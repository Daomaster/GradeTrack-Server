{"version":3,"sources":["scripts/app.js"],"names":["angular","module","StudentsController","StudentService","GradeService","$uibModal","vm","this","list","getActiveCourse","students","activeCourse","overallGrade","student","getOverallGrade","removeStudent","index","indexOf","splice","openAddStudentModal","size","open","animation","templateUrl","controller","controllerAs","$inject","signupModalController","$http","$scope","$uibModalInstance","type","email","username","password","firstName","lastName","studentID","errorText","first","last","id","isInputError","error","test","isNaN","signup","userInfo","post","dismiss","close","service","grade","editInfo","editDes","showTab","toggleDisable1","toggleDisable2","toggleShow3","editInfoStatus","editDesStatus","showTabStatus","loggedIn","phone","officeHours","office","time","userID","gradeAverageArray","courseNameArray","courses","postLogin","loadTimelineData","currentCourseID","currentAssignmentID","length","visArray","i","push","createVisTimelineData","course","data","assignments","date","dueDate","dateString","getFullYear","getMonth","getDate","assign","content","name","start","vis","DataSet","addCourse","name_","c","description","serverID","expanded","average","Math","round","random","tempDescription","weights","weight","setActiveCourse","getActiveAssignment","setActiveAssignment","purgeData","serverIDtoAssignmentID","key","total","assignmentGrades","possible","points","addStudent","id_","t","oldAssignmentGrades","randomDate","year","month","day","Date","addAssignment","description_","assignmentName","_points","datepickerOpen","gradeArray","MainController","isLoggedIn","login","logout","tabs","active","label","url","openLogin","openSignup","openAddClass","activeTab","clickTab","tab","isActiveTab","LoginModalController","$log","checkInputErrors","loginInfo","then","dataSet","usr","user","res","title","earned","courseid","a","due","s","k","grades","ind","parseInt","thisPercent","gradeIndex","getGradeIndex","l","percent","InformationController","InfoService","instName","submitNewDesc","genPDF","GradesController","directive","restrict","replace","template","scope","items","options","link","element","Timeline","DashboardController","series","professorName","studentsEnrolled","answer","height","end","getCourses","getGradeArray","result","amount","AssignmentsController","showDetails","activeAssignment","clickAssignment","submitAssignmentChanges","assignment","assignInfo","assignmentid","studentid","log","openAddAssignment","changeGradeArray","newGrade","oldGrade","oldIndex","newIndex","labelArray","AddStudentModalController","postAdd","AddClassModalController","studentString","courseName","showError","createSuccess","instructor","createCourse","addMultipleStudents","names","split","AddAssignmentModalController","assignmentDescription","getYear","hour","minute","second","runBlock","debug","run","routeConfig","$routeProvider","when","otherwise","redirectTo","config","constant","malarkey","moment","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","$templateCache","put"],"mappings":"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","file":"scripts/app-e98a967239.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack', ['ngRoute', 'ngAnimate', 'chart.js', 'ui.bootstrap', 'toastr']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('StudentsController', StudentsController);\n\n  /** @ngInject */\n  function StudentsController(StudentService, GradeService, $uibModal) {\n    var vm = this;\n\n    vm.list = function() { return  GradeService.getActiveCourse().students; };\n    vm.activeCourse = function() { return GradeService.getActiveCourse() };\n\n    vm.overallGrade = function(student) { return GradeService.getOverallGrade(student, vm.activeCourse());};\n\n\n    vm.removeStudent = function(student)\n    {\n\n      var index = StudentService.students.indexOf(student);\n      if (index > -1)\n      {\n        StudentService.students.splice(index,1);\n      }\n    };\n\n    vm.openAddStudentModal = function (size) {\n\n      $uibModal.open({\n        animation: true,\n        templateUrl: 'app/AddStudent/AddStudentModal.html',\n        controller: 'AddStudentModalController',\n        controllerAs: 'AddStudentModalController',\n        size: size\n      })\n    };\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('signupModalController', signupModalController);\n\n  /** @ngInject */\n  function signupModalController(GradeService, $http, $scope, $uibModalInstance) {\n    var vm = this;\n    vm.type = \"student\";\n    vm.email = \"\";\n    vm.username = \"\";\n    vm.password = \"\";\n    vm.firstName = \"\";\n    vm.lastName = \"\";\n    vm.studentID = \"\";\n\n\n    vm.errorText =\n    {\n      first: \"\",\n      last: \"\",\n      email: \"\",\n      username:\"\",\n      password:\"\",\n      id:\"\"\n    };\n\n\n\n\n    vm.isInputError = function()\n    {\n\n      //reset\n      vm.errorText.first = vm.errorText.last = vm.errorText.email = vm.errorText.username =\n        vm.errorText.password = vm.errorText.id = \"\";\n\n\n      //catch-all\n      var error = false;\n\n      //username err\n      if (vm.username == \"\")\n      {\n        vm.errorText.username = \"Enter a username\";\n        error=true;\n      }\n      else\n      {\n        //other username restrictions\n      }\n\n      //password err\n      if (vm.password==\"\")\n      {\n        vm.errorText.password = \"Enter a password\";\n        error=true;\n      }\n      else\n      {\n        //other password restrictions\n      }\n\n\n      //email err\n      if (vm.email == \"\")\n      {\n        vm.errorText.email = \"Enter an email\";\n        error=true;\n      }\n      else\n      {\n        //other email restrictions\n        if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(vm.email))) // email format check\n        {\n          vm.errorText.email = \"Invalid email\";\n          error=true;\n        }\n      }\n\n      //name err\n      if (vm.firstName == \"\")\n      {\n        vm.errorText.first = \"Enter a first name\";\n        error=true;\n      }\n      if (vm.lastName == \"\")\n      {\n        vm.errorText.last = \"Enter a last name\";\n        error = true;\n      }\n\n\n\n      // id err\n      if (vm.studentID == \"\")\n      {\n        vm.errorText.id = \"Enter an ID\";\n        error=true;\n      }\n      else\n      {\n        if (isNaN(vm.studentID))  // numbers only\n        {\n          vm.errorText.id = \"Invalid ID\";\n          error=true;\n        }\n      }\n\n      return error;\n\n    };\n\n\n\n\n    vm.signup = function()\n    {\n\n\n      if (vm.isInputError()) return; // invalid data\n\n\n      var userInfo = {\n        username: vm.username,\n        email: vm.email,\n        firstName: vm.firstName,\n        lastName: vm.lastName,\n        password: vm.password,\n        type: vm.type\n      };\n\n\n      $http.post(\"http://http://grade-server.herokuapp.com/api/auth/signup\", userInfo);\n\n      $uibModalInstance.dismiss('cancel');\n    };\n    vm.close = function()\n    {\n      $uibModalInstance.dismiss('cancel');\n    };\n\n  }\n})();\n\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .service('StudentService', function(){\n\n\tthis.students = [\n\t\t{\n\t\t\tlast: \"Smith\",\n\t\t\tfirst: \"James\",\n\t\t\tgrade: \"80%\", // Switch to float?\n\t\t\temail: \"SmithJ@unlv.nevada.edu\",\n\t\t\tid: \"11223344\"\n\t\t},\n\n\t\t{\n\t\t\tlast: \"Williams\",\n\t\t\tfirst: \"Rebecca\",\n\t\t\tgrade: \"85%\", // Switch to float?\n\t\t\temail: \"WilliamsR@unlv.nevada.edu\",\n\t\t\tid: \"2244553322\"\n\t\t},\n\n\t\t{\n\t\t\tlast: \"Aster\",\n\t\t\tfirst: \"Billy\",\n\t\t\tgrade: \"66%\", // Switch to float?\n\t\t\temail: \"AsterB@unlv.nevada.edu\",\n\t\t\tid: \"43233333\"\n\t\t},\n\n\t\t{\n\t\t\tlast: \"Bills\",\n\t\t\tfirst: \"Derek\",\n\t\t\tgrade: \"90%\", // Switch to float?\n\t\t\temail: \"BillsD@unlv.nevada.edu\",\n\t\t\tid: \"1010101010\"\n\t\t},\n\n\t\t{\n\t\t\tlast: \"Dillan\",\n\t\t\tfirst: \"Ben\",\n\t\t\tgrade: \"45%\", // Switch to float?\n\t\t\temail: \"DillanB@unlv.nevada.edu\",\n\t\t\tid: \"3428237420\"\n\t\t}\n\t];\n\n\tthis.list = function() {\n\t\treturn this.students;\n\t};\n\n\t});\n\n})();\n\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .service('InfoService', function() {\n      // ==========\n      // firebase data\n      // ==========\n\n\n      // ==========\n      // UI data\n      // ==========\n      var editInfo = false;\n      var editDes = false;\n      var showTab = false;\n\n      this.toggleDisable1 = function() {\n        editDes = !editDes;\n      }\n\n      this.toggleDisable2 = function() {\n        editInfo =  !editInfo;\n      }\n\n      this.toggleShow3 = function() {\n        showTab = !showTab;\n      }\n\n      // TODO: Getters/setters for data above ^\n      this.editInfoStatus = function () {\n        return editInfo;\n      }\n\n      this.editDesStatus = function () {\n        return editDes;\n      }\n\n      this.showTabStatus = function () {\n        return showTab;\n      }\n\t});\n\n})();\n\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .service('GradeService', function(){\n\n\n      this.loggedIn = false;\n      this.lastName = \"Prof\";\n      this.firstName = \"name\";\n      this.phone = \"(555) 555-5555\";\n      this.officeHours = {\n        office: \"TBE-B 212\",\n        time: \"Monday 2 - 3PM\" // Change to Date object later\n      };\n      this.email = \"\";\n      this.username = \"\";\n      this.userID = \"\";\n\n      this.gradeAverageArray = []; // needed for dashboard graphing\n      this.courseNameArray = [];\n\n      this.courses=[];\n\n      this.postLogin = function()\n      {\n        this.loadTimelineData();\n        this.currentCourseID = 0;\n        this.currentAssignmentID = 0;\n        if (this.courses.length > 0)\n          this.activeCourse = this.courses[0];\n      };\n\n\n      this.visArray = [];\n\n      this.loadTimelineData = function()\n      {\n        this.visArray = [];\n        for (var i = 0; i < this.courses.length; ++i)\n        {\n          this.visArray.push(this.createVisTimelineData(this.courses[i]));\n        }\n      };\n\n\n      this.createVisTimelineData = function(course)\n      {\n        var data = [];\n        for (var i = 0; i < course.assignments.length; ++i)\n        {\n          var date = course.assignments[i].dueDate;\n          var dateString = date.getFullYear() + \"-\" + date.getMonth() + \"-\" + date.getDate();\n          var assign = {\n            id:i+1,\n            content: course.assignments[i].name,\n            start: dateString\n          };\n          data.push(assign);\n        }\n        return new vis.DataSet(data);\n      };\n\n\n\n\n\n      this.addCourse = function(name_)             // add data as it becomes needed\n      {\n        var c =\n        {\n          name : name_,\n          description: \"\",\n          serverID: \"\",       //for db\n          expanded : false,   // internal use\n          average: Math.round((Math.random() * 50 + 50) * 100) / 100, //random 50-100, 2 decimals\n          id : this.courses.length, //internal use\n          assignments: [],\n          students: [],\n          tempDescription: \"\",\n          weights: [\n            {\n              name: \"Test\",\n              weight: 40\n            },\n            {\n              name: \"Quiz\",\n              weight: 30\n            },\n            {\n              name: \"Homework\",\n              weight: 30\n            }\n          ]\n        };\n\n        this.courses.push(c);\n        this.gradeAverageArray.push(c.average);\n        this.courseNameArray.push(c.name);\n        return c;\n      };\n\n      this.currentCourseID = 0;\n      this.getActiveCourse = function() { return this.courses[this.currentCourseID]};\n      this.setActiveCourse = function(id) {\n      this.currentCourseID = id;\n      this.currentAssignmentID = 0; // reset for safety\n      };\n      this.currentAssignmentID = 0;\n      this.getActiveAssignment = function() { return this.getActiveCourse().assignments[this.currentAssignmentID]; };\n      this.setActiveAssignment = function(id) { this.currentAssignmentID = id; };\n\n      this.purgeData = function() // for use on logout\n      {\n        this.lastName = \"\";\n        this.firstName = \"\";\n        this.courses = [];\n        this.gradeAverageArray = [];\n        this.courseNameArray = [];\n      };\n\n      this.serverIDtoAssignmentID = function(course, key)\n      {\n        for (var i = 0; i < course.assignments.length; ++i)\n        {\n          if (course.assignments[i].serverID == key)\n            return i;\n        }\n        return -1;\n      };\n\n      this.getOverallGrade = function(student, course)    // for now\n      {\n        var total = 0;\n        var i;\n        if (student.assignmentGrades.length < 1) return 0;\n        for (i = 0; i < student.assignmentGrades.length; ++i)\n          total += student.assignmentGrades[i];\n\n        var possible = 0;\n          for (i = 0; i < course.assignments.length;++i)\n          {\n            possible += course.assignments[i].points;\n          }\n        if (possible == 0)\n          return 0;\n        return total / possible * 100;\n      };\n\n      this.addStudent = function(course, name_, id_) {\n        var t = {\n          name: name_,\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          studentID: id_,\n          id: course.students.length,\n          assignmentGrades: [],\n          oldAssignmentGrades: [],  //graph purposes\n          overallGrade: 0\n        };\n        for (var i = 0; i < course.assignments.length; ++i) {\n          t.assignmentGrades.push(0);\n          t.oldAssignmentGrades.push(0);\n        }\n        course.students.push(t);\n        return t;\n      };\n\n      this.randomDate = function()\n      {\n        var year = 2016;\n        var month = 1 + Math.random() * 4; //jan-may\n        var day = 1 + Math.random() * 30;\n         return new Date(year,month,day);\n      };\n\n      this.addAssignment = function(course, description_, assignmentName, _points)\n      {\n        var t = {\n          name: assignmentName,\n          description: description_,\n          datepickerOpen: false,    // assignment menu usage\n          id: course.assignments.length,\n          points: _points,\n          serverID: \"\",\n          type: \"Test\",\n          dueDate: this.randomDate(),\n          gradeArray: [0,0,0,0,0] //for graph display\n        };\n        t.gradeArray[4]= course.students.length;  //initialize to all F (for graph)\n        for (var i = 0; i < course.students.length;++i)\n        {\n          course.students[i].assignmentGrades.push(0);\n          course.students[i].oldAssignmentGrades.push(0);\n        }\n        course.assignments.push(t);\n        return t;\n      };\n\n\n\n\n      this.activeCourse = this.courses[0];\n    });\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController(GradeService, $uibModal) {\n    var vm = this;\n\n    vm.isLoggedIn = function() { return GradeService.loggedIn;  };\n    vm.login = function() {\n      GradeService.loggedIn = true;};\n\n    vm.logout = function()\n    {\n      GradeService.loggedIn = false;\n    };\n\n    vm.tabs = [\n      {\n        active: true,\n        label: \"Information\",\n        url: \"#/information\"\n\n      },\n      {\n        active: false,\n        label: \"Assignments\",\n        url: \"#/assignments\"\n      },\n      {\n        active: false,\n        label: \"Students\",\n        url: \"#/students\"\n      }\n    ];\n\n    vm.openLogin = function (size) {\n\n      $uibModal.open({\n        animation: true,\n        templateUrl: 'app/login/LoginModal.html',\n        controller: 'LoginModalController',\n        controllerAs: 'LoginModalController',\n        size: size\n      });\n    };\n    vm.openSignup = function (size) {\n\n      $uibModal.open({\n        animation: true,\n        templateUrl: 'app/signup/signupModal.html',\n        controller: 'signupModalController',\n        controllerAs: 'signupModalController',\n        size: size\n      });\n    };\n\n    vm.openAddClass = function (size) {\n\n      $uibModal.open({\n        animation: true,\n        templateUrl: 'app/AddClass/AddClassModal.html',\n        controller: 'AddClassModalController',\n        controllerAs: 'AddClassModalController',\n        size: size\n      });\n    };\n\n    vm.activeTab = vm.tabs[0];\n    vm.lastName = function() { return GradeService.firstName; };\n    vm.firstName = function() { return GradeService.lastName; };\n    vm.courses = function() { return GradeService.courses; };\n    vm.getActiveCourse = function(){return GradeService.getActiveCourse(); };\n    vm.setActiveCourse = function(id) {GradeService.setActiveCourse(id); };\n\n    vm.clickTab = function(course,tab)\n    {\n      vm.setActiveCourse(course.id);\n      vm.activeTab.active=false;\n      vm.activeTab = tab;\n      vm.activeTab.active=true;\n    };\n\n    vm.isActiveTab = function(course,tab) {\n      return (course == vm.getActiveCourse() && tab.active);\n    };\n\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('LoginModalController', LoginModalController);\n\n  /** @ngInject */\n  function LoginModalController(GradeService, $http, $log, $scope, $uibModalInstance) {\n    var vm = this;\n    vm.username = \"\";\n    vm.password = \"\";\n\n\n    vm.errorText =\n    {\n      password: \"\",\n      username: \"\",\n      login: \"\"\n    };\n\n\n    vm.checkInputErrors = function()\n    {\n      vm.errorText.password = vm.errorText.username = vm.errorText.login = \"\";\n\n      var error = false;\n      if (vm.username == \"\") {    // blank username field\n        vm.errorText.username = \"Enter a username\";\n        error=true;\n      }\n      if (vm.password == \"\") {    // blank password field\n        vm.errorText.password = \"Enter a password\";\n        error=true;\n      }\n      return error;          // don't attempt login\n    };\n\n\n    vm.login = function()\n    {\n      if (vm.checkInputErrors()) return; // input error\n\n\n      var loginInfo = {\n        username: vm.username,\n        password: vm.password\n      };\n\n\n\n    $http.post(\"http://http://grade-server.herokuapp.com/api/auth/signin\", loginInfo).then(\n      function successCallback() {\n\n        vm.postLogin(loginInfo.username);\n          $uibModalInstance.dismiss('cancel');\n\n        },\n\n        function errorCallback() {\n          //on Error\n          vm.errorText.login = \"Invalid login\"\n\n        }\n      );\n\n\n      vm.close();\n\n    };\n\n    vm.dataSet = false;\n\n    vm.postLogin = function(usr)\n    {\n      var user = {\n        username: usr\n      };\n      $http.post(\"http://http://grade-server.herokuapp.com/api/info/user\", user).then(\n        function successCallback(res) {\n\n          if (!vm.dataSet) // debounce\n          {\n\n\n            GradeService.firstName = res.data.firstName;\n            GradeService.lastName = res.data.lastName;\n            GradeService.email = res.data.email;\n            GradeService.userID = res.data.id;\n            GradeService.username = res.data.username;\n\n\n            for (var i = 0; i < res.data.courses.length; ++i)\n            {\n              var course = res.data.courses[i];\n\n              var c = GradeService.addCourse(course.title);\n              c.description = course.description;\n              c.tempDescription = c.description;\n              c.average = 0;\n              if (course.total != 0)\n                c.average = course.earned / course.total;\n              c.serverID = course.courseid;\n\n\n              // add assignments\n              for (var key in course.assignments)\n              {\n                var assign = course.assignments[key];\n                var a = GradeService.addAssignment(c, assign.description, assign.title, assign.total);\n                a.serverID = key;\n                a.dueDate = new Date(assign.due.year + \"-\" + assign.due.month + \"-\" + assign.due.day);\n                a.gradeArray[4] = course.students.length;  //start f\n              }\n\n              //add students\n              for (var id in course.students)\n              {\n                var student = course.students[id];\n                var s = GradeService.addStudent(c, student.firstName + \" \" + student.lastName, id);\n                s.firstName = student.firstName;\n                s.lastName = student.lastName;\n                s.email=student.email;\n                s.average = student.earned / student.total;\n\n                for (var k in student.grades)\n                {\n                  var ind = GradeService.serverIDtoAssignmentID(c, k);\n                  s.assignmentGrades[ind]=s.oldAssignmentGrades[ind] = parseInt(student.grades[k],10);\n\n                  var thisPercent = 0;\n                  if (c.assignments[ind].points != 0)\n                    thisPercent = parseInt(student.grades[k],10) / c.assignments[ind].points;\n                  var gradeIndex = vm.getGradeIndex(thisPercent);\n                  c.assignments[ind].gradeArray[4]--;\n                  c.assignments[ind].gradeArray[gradeIndex]++;\n                }\n\n\n              }\n              for (var l = 0; l < c.assignments.length;++l)\n              {\n                c.assignments[l].gradeArray[4] = c.students.length;\n              }\n\n\n\n            }\n\n\n\n            GradeService.postLogin(); //set default values\n            GradeService.loggedIn = true;\n            vm.dataSet = true;\n          }\n        },\n        function errorCallback() {\n          //on Error\n          vm.errorText.login = \"Invalid login\";\n\n        });\n\n\n    };\n\n\n    vm.getGradeIndex = function(percent)\n    {\n      if (percent >= 0.9)\n        return 0;\n      else if (percent >= 0.8)\n        return 1;\n      else if (percent >= 0.7)\n        return 2;\n      else if (percent >= 0.6)\n        return 3;\n      return 4;\n    };\n    vm.close = function()\n    {\n      $uibModalInstance.dismiss('cancel');\n    };\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('InformationController', InformationController);\n\n  /** @ngInject */\n  function InformationController(InfoService, GradeService) {\n    var vm = this;\n\n    vm.activeCourse = function() { return GradeService.getActiveCourse() };\n\n    vm.instName = GradeService.lastName + \" \" + GradeService.firstName;\n    vm.email = GradeService.email;\n    vm.phone = GradeService.phone;\n    vm.officeHours = GradeService.officeHours;\n\n    vm.toggleDisable1 = function() {\n      if (InfoService.editDesStatus()) {\n        // They're getting rid of their changes\n        // So reset tempDescription\n        var courses = GradeService.courses;\n        for (var i = 0; i < courses.length; i++) {\n          courses[i].tempDescription = courses[i].description;\n        }\n\n        //GradeService.getActiveCourse().tempDescription = GradeService.getActiveCourse().description;\n      }\n\n      InfoService.toggleDisable1();\n    }\n\n    vm.toggleDisable2 = function() {\n      InfoService.toggleDisable2();\n    }\n\n    vm.toggleShow3 = function() {\n      InfoService.toggleShow3();\n    }\n\n    vm.editInfoStatus = function () {\n      return InfoService.editInfoStatus();\n    }\n\n    vm.editDesStatus = function () {\n      return InfoService.editDesStatus();\n    }\n\n    vm.showTabStatus = function () {\n      return InfoService.showTabStatus();\n    }\n\n    vm.submitNewDesc = function() {\n      InfoService.toggleDisable1();\n      GradeService.getActiveCourse().description = GradeService.getActiveCourse().tempDescription;\n    }\n\n    vm.genPDF = function () {\n\n    };\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('GradesController', GradesController);\n\n  /** @ngInject */\n  function GradesController() {\n\n  }\n})();\n\nangular\n  .module('GradeTrack')\n.directive(\"timeline\", function () {\n  return {\n    restrict: \"E\",\n    replace: true,\n    template:'<div></div>',\n    scope:{\n      items: '=items',\n      options: '=options'\n    },\n    link: function (scope, element) {\n\n\n\n\n      // Create a Timeline\n     new vis.Timeline(element[0], scope.items, scope.options);\n\n\n    }\n  };\n});\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('DashboardController', DashboardController);\n\n  /** @ngInject */\n  function DashboardController(GradeService) {\n    var vm = this;\n\n\n    vm.series = ['Series A'];\n\n    vm.professorName = function() { return GradeService.firstName + \" \" + GradeService.lastName; };\n    vm.studentsEnrolled = function()\n    {\n      var answer = 0;\n      for (var i = 0; i < GradeService.courses.length; ++i)\n      {\n        answer += GradeService.courses[i].students.length;\n      }\n      return answer;\n    };\n\n\n    GradeService.loadTimelineData(); // for successive loads\n    vm.items = function() { return GradeService.visArray; };\n\n\n    // Configuration for the Timeline\n    vm.options = {\n      height:'150px',\n      start:'2016-01-19',\n      end: '2016-5-14'\n    };\n\n\n    vm.getCourses = function() { return GradeService.courses; };\n\n    vm.getGradeArray = function(course)\n    {\n      var result = [\n        {grade: \"A\", amount: 0 },\n        {grade: \"B\", amount: 0 },\n        {grade: \"C\", amount: 0 },\n        {grade: \"D\", amount: 0 },\n        {grade: \"F\", amount: 0 }\n      ]; //a,b,c,d,e,f\n      for (var i = 0; i < course.students.length; ++i)\n      {\n        var index = 0;\n        if (course.students[i].average >= 90)\n          index=0;\n        else if (course.students[i].average >= 80)\n          index = 1;\n        else if (course.students[i].average >= 70)\n          index=2;\n        else if (course.students[i].average >= 60)\n          index=3;\n        else\n          index=4;\n        ++result[index].amount;\n      }\n      return result;\n    };\n\n\n    vm.gradeAverageArray = [GradeService.gradeAverageArray ];\n    vm.courseNameArray = GradeService.courseNameArray;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('AssignmentsController', AssignmentsController);\n\n  /** @ngInject */\n  function AssignmentsController(GradeService, $log, $uibModal, $http) {\n    var vm = this;\n    vm.showDetails = false;\n    vm.activeCourse = function() { return GradeService.getActiveCourse()};\n\n    vm.activeAssignment = function() { return GradeService.getActiveAssignment(); };\n    vm.setActiveAssignment = function(id) { GradeService.setActiveAssignment(id); };\n\n    vm.clickAssignment = function(id)\n    {\n        GradeService.setActiveAssignment(id);\n        vm.showDetails = true;\n    };\n\n\n    vm.submitAssignmentChanges = function(assignment, course)\n    {\n\n      var assignInfo = {\n        courseid: course.serverID,\n        assignmentid: assignment.serverID,\n        students: []\n      };\n\n      for (var i = 0; i < course.students.length; ++i)\n      {\n        var s = {\n          studentid: course.students[i].studentID,\n          grade: course.students[i].assignmentGrades[assignment.id]\n        };\n        assignInfo.students.push(s);\n      }\n\n      $http.post(\"http://http://grade-server.herokuapp.com/api/grade/update\", assignInfo).then(\n        function successCallback() {\n\n          $log.log(\"Grades updated\");\n\n        },\n\n        function errorCallback() {\n          //on Error\n          $log.log(\"update failed\");\n\n\n\n        }\n      );\n\n\n    };\n\n  vm.openAddAssignment = function (size) {\n\n    $uibModal.open({\n      animation: true,\n      templateUrl: 'app/AddAssignment/AddAssignmentModal.html',\n      controller: 'AddAssignmentModalController',\n      controllerAs: 'AddAssignmentModalController',\n      size: size\n    })\n  };\n\n    vm.getGradeIndex = function(percent)\n    {\n      if (percent >= 0.9)\n        return 0;\n      else if (percent >= 0.8)\n        return 1;\n      else if (percent >= 0.7)\n        return 2;\n      else if (percent >= 0.6)\n        return 3;\n      return 4;\n    };\n    vm.changeGradeArray = function(assignment, student)\n    {\n      var id = assignment.id;\n      var newGrade = student.assignmentGrades[id];\n      var oldGrade = student.oldAssignmentGrades[id];\n      var oldIndex = 4;\n      if (oldGrade != null)\n        oldIndex = vm.getGradeIndex(oldGrade / assignment.points);\n      var newIndex = 4;\n      if (newGrade != null)\n        newIndex = vm.getGradeIndex(newGrade / assignment.points);\n        --assignment.gradeArray[oldIndex];\n        ++assignment.gradeArray[newIndex];\n\n    };\n\n    vm.labelArray = [ \"A\",\"B\",\"C\",\"D\",\"F\" ];\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('AddStudentModalController', AddStudentModalController);\n  /** @ngInject */\n  function AddStudentModalController(GradeService, $http, $scope, $uibModalInstance) {\n    var vm = this;\n\n    vm.course = GradeService.getActiveCourse();\n\n    vm.email = \"\";\n    vm.firstName = \"\";\n    vm.lastName = \"\";\n    vm.studentID = \"\";\n\n\n    vm.errorText = {\n      email: \"\",\n      id: \"\",\n      first: \"\",\n      last: \"\"\n    };\n\n\n    vm.isInputError = function()\n    {\n\n      //reset\n      vm.errorText.first = vm.errorText.last = vm.errorText.email = vm.errorText.id = \"\";\n\n\n      //catch-all\n      var error = false;\n      //email err\n      if (vm.email == \"\")\n      {\n        vm.errorText.email = \"Enter an email\";\n        error=true;\n      }\n      else\n      {\n        //other email restrictions\n        if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(vm.email))) // email format check\n        {\n          vm.errorText.email = \"Invalid email\";\n          error=true;\n        }\n      }\n\n      //name err\n      if (vm.firstName == \"\")\n      {\n        vm.errorText.first = \"Enter a first name\";\n        error=true;\n      }\n      if (vm.lastName == \"\")\n      {\n        vm.errorText.last = \"Enter a last name\";\n        error = true;\n      }\n\n\n\n      // id err\n      if (vm.studentID == \"\")\n      {\n        vm.errorText.id = \"Enter an ID\";\n        error=true;\n      }\n      else\n      {\n        if (isNaN(vm.studentID))  // numbers only\n        {\n          vm.errorText.id = \"Invalid ID\";\n          error=true;\n        }\n      }\n\n      return error;\n\n    };\n\n\n\n\n\n    vm.addStudent = function()\n    {\n\n      if (vm.isInputError()) return; // invalid input\n\n\n      /*\n      var newStudent =\n      {\n        last: vm.lastName,\n        first: vm.firstName,\n        course: vm.course\n        email: vm.email,\n        id: vm.studentID\n      }; */\n\n\n\n\n      vm.postAdd(); // on successful student add\n      vm.close();\n    };\n\n    vm.postAdd = function()\n    {\n      var student = GradeService.addStudent(vm.course, vm.firstName + \" \" + vm.lastName, vm.studentID);\n      student.firstName = vm.firstName;\n      student.lastName = vm.lastName;\n      student.grade = 0;\n      student.email = vm.email;\n    };\n\n    vm.close = function()\n    {\n      $uibModalInstance.dismiss('cancel');\n    };\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('AddClassModalController', AddClassModalController);\n  /** @ngInject */\n  function AddClassModalController(GradeService, $http, $scope, $uibModalInstance) {\n    var vm = this;\n\n    vm.close = function()\n    {\n      vm.studentString=\"\";\n      vm.courseName = \"\";  // reset\n      vm.students = [];\n      vm.showError=false;\n      $uibModalInstance.dismiss('cancel');\n    };\n\n    vm.courseName = \"\";\n    vm.students = [];\n    vm.studentString = \"\";\n    vm.description = \"\";\n\n    vm.errorText = \"\";\n\n\n    vm.createSuccess = function(key)\n    {\n\n      var course = GradeService.addCourse(vm.courseName);\n      course.description = course.tempDescription = vm.description;\n      course.serverID = key;\n      var i;\n      for (i = 0; i < vm.students.length; ++i)\n      {\n        GradeService.addStudent(course, vm.students[i].name, 0);\n      }\n      var c =\n      {\n        title: vm.courseName,\n        students: [],\n        instructor: \"\",\n        description: vm.description\n      };\n      for (i =0; i < vm.students.length; ++i)\n      {\n        c.students.push(vm.students[i].name);\n      }\n      c.instructor = GradeService.firstName + \" \" + GradeService.lastName;\n      //send\n      /*\n      $http.post(\"http://http://grade-server.herokuapp.com/api/info/addstudents\", {\n        title: c.title,\n        students: c.students,\n        insName: c.instructor\n      })*/\n    };\n\n    vm.createCourse = function()\n    {\n      vm.errorText = \"\";\n      if (vm.courseName == \"\") {\n        vm.errorText = \"Enter a course name\";  //class empty error\n        return; // empty class error\n      }\n\n\n\n      $http.post(\"http://http://grade-server.herokuapp.com/api/info/addcourse\",\n        {\n          username: GradeService.username,\n          title: vm.courseName,\n          description: vm.description\n        }\n      ).then(\n        function successCallback(res) {\n\n          vm.createSuccess(res.data);\n          $uibModalInstance.dismiss('cancel');\n\n          vm.close();\n        },\n\n        function errorCallback() {\n          //on Error\n         // console.log(\"error\");\n\n        }\n      );\n\n    };\n\n\n    vm.addStudent = function(name_)\n    {\n      var student =\n      {\n        name: name_,\n        id: vm.students.length\n      };\n      vm.students.push(student);\n    };\n    vm.removeStudent = function(name)\n    {\n      var index = vm.students.indexOf(name);\n      if (index > -1)\n      {\n        vm.students.splice(index,1);\n      }\n    };\n    vm.addMultipleStudents = function()\n    {\n      if (vm.studentString == \"\") return; // null check\n      var names = vm.studentString;\n      var result = names.split(\",\");\n      for (var i = 0; i < result.length; ++i)\n        vm.addStudent(result[i]);\n      vm.studentString=\"\";\n    };\n\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .controller('AddAssignmentModalController', AddAssignmentModalController);\n  /** @ngInject */\n  function AddAssignmentModalController(GradeService, $http, $scope, $uibModalInstance) {\n    var vm = this;\n\n    vm.course = GradeService.getActiveCourse();\n    vm.assignmentDescription = \"\";\n    vm.assignmentName = \"\";\n    vm.points = 0;\n    vm.dueDate = new Date();\n    vm.datepickerOpen = false;\n    vm.errorText = \"\";\n\n    vm.createSuccess = function(key)\n    {\n      var assign = GradeService.addAssignment(vm.course, vm.assignmentDescription, vm.assignmentName, vm.points);\n      assign.serverID = key;\n    };\n\n\n\n    vm.addAssignment = function()\n    {\n      vm.errorText = \"\";\n      if (vm.assignmentName == \"\")\n      {\n        vm.errorText = \"Enter an assignment name\";\n        return;\n      }\n\n\n\n      var due = {\n        year: vm.dueDate.getYear(),\n        month: vm.dueDate.getMonth(),\n        day: vm.dueDate.getDate(),\n        hour: 0,\n        minute: 0,\n        second: 0\n\n      };\n\n      $http.post(\"http://http://grade-server.herokuapp.com/api/info/addassign\",\n        {\n          courseid : vm.course.serverID,\n          title: vm.assignmentName,\n          description: vm.assignmentDescription,\n          total: vm.points,\n          due: due\n        }\n      ).then(\n        function successCallback(res) {\n          vm.createSuccess(res.data);\n          $uibModalInstance.dismiss('cancel');\n\n          vm.close();\n        },\n\n        function errorCallback() {\n          //on Error\n          //console.log(\"error\");\n\n        }\n      );\n\n\n\n      //$$placeholder             -- add assignment post\n      //vm.course                 -- course to add assignment to\n      //vm.assignmentName         -- name\n      //vm.assignmentDescription  -- description\n      //vm.points                 -- points the assignment is worth\n\n\n      vm.close();\n\n\n    };\n\n\n    vm.close = function()\n    {\n      vm.assignmentDescription = \"\";\n      vm.assignmentName = \"\";\n      vm.points=0;\n      $uibModalInstance.dismiss('cancel');\n    };\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .config(routeConfig);\n\n  function routeConfig($routeProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'app/dashboard/dashboard.html',\n        controller: 'DashboardController',\n        controllerAs: 'dashboardCtrl'\n      })\n      .when('/information', {\n        templateUrl: 'app/information/information.html',\n        controller: 'InformationController',\n        controllerAs: 'information'\n      })\n      .when('/assignments', {\n        templateUrl: 'app/assignments/assignments.html',\n        controller: 'AssignmentsController',\n        controllerAs: 'assignments'\n      })\n      .when('/students', {\n        templateUrl: 'app/students/students.html',\n        controller: 'StudentsController',\n        controllerAs: 'students'\n      })\n      .otherwise({\n        redirectTo: '/'\n      });\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment)\n\n\n\n\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GradeTrack')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n  }\n\n})();\n\nangular.module(\"GradeTrack\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/AddAssignment/AddAssignmentModal.html\",\"<div class=modal-header><h1 class=modal-addClassHeader>Add Assignment</h1><a href=\\\"\\\" class=modal-closebutton ng-click=AddAssignmentModalController.close()>x</a></div><div class=modal-body><ul style=list-style:none><li class=modal-inputwrapper><div class=row><div class=col-md-6><div class=modal-infoheader>ASSIGNMENT NAME</div><div><input class=modal-username-input ng-model=AddAssignmentModalController.assignmentName type=text placeholder=\\\"Assignment Name\\\"> <span class=modal-errortext>{{AddAssignmentModalController.errorText}}</span></div></div><div class=col-md-6><div class=modal-infoheader>POINTS</div><div><input class=modal-username-input ng-model=AddAssignmentModalController.points type=number></div></div></div></li><li><div class=modal-infoheader>DUE DATE</div><div class=row><div class=col-md-6 style=margin-left:-40px><div class=input-group><input type=text class=form-control datepicker-popup=fullDate ng-model=AddAssignmentModalController.dueDate is-open=AddAssignmentModalController.datepickerOpen ng-required=true close-text=Close> <span class=input-group-btn><button class=\\\"btn btn-default\\\" ng-click=\\\"AddAssignmentModalController.datepickerOpen=true\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></button></span></div></div></div></li><li class=modal-inputwrapper><div class=row><div class=col-md-12><div class=modal-infoheader>DESCRIPTION</div><div><textarea ng-model=AddAssignmentModalController.assignmentDescription maxlength=1000 style=\\\"margin-left:-40px; margin-top:5px; display:inline;  width:calc(100% + 40px);  resize:none;  height:100px\\\">\\n          </textarea></div></div></div></li><li style=height:20px><button class=\\\"btn btn-primary\\\" style=float:right ng-click=AddAssignmentModalController.addAssignment()>Add Assignment</button></li></ul></div>\");\n$templateCache.put(\"app/AddClass/AddClassModal.html\",\"<div class=modal-header><h1 class=modal-addClassHeader>Add Course</h1><a href=\\\"\\\" class=modal-closebutton ng-click=AddClassModalController.close()>x</a></div><div class=modal-body><ul style=list-style:none><li class=modal-inputwrapper><div class=modal-infoheader>COURSE NAME</div><div><input class=modal-username-input ng-model=AddClassModalController.courseName type=text placeholder=\\\"Course Name\\\"> <span class=modal-errortext>{{AddClassModalController.errorText}}</span></div></li><li class=modal-inputwrapper><div class=modal-infoheader>DESCRIPTION</div><textarea ng-model=AddClassModalController.description class=modal-coursedescription></textarea></li><li class=modal-inputwrapper><div class=modal-infoheader>STUDENTS</div><div><div class=modal-studentbox><ul><li><input class=modal-addStudentsInput type=text ng-model=AddClassModalController.studentString placeholder=\\\"Enter students, separated by commas\\\"> <button class=\\\"btn btn-block modal-addStudentsButton\\\" ng-click=AddClassModalController.addMultipleStudents()>Add Student(s)</button></li><li ng-repeat=\\\"student in AddClassModalController.students\\\"><input class=modal-studentnameinput placeholder=name@institution.edu ng-model=student.name> <a href=\\\"\\\" class=modal-removestudent ng-click=AddClassModalController.removeStudent(student)>x</a></li></ul></div></div></li><li style=height:20px><button class=\\\"btn btn-primary\\\" style=float:right ng-click=AddClassModalController.createCourse()>Add Course</button></li></ul></div>\");\n$templateCache.put(\"app/AddStudent/AddStudentModal.html\",\"<div class=modal-header><h1 class=modal-addClassHeader>Add Student</h1><a href=\\\"\\\" class=modal-closebutton ng-click=AddStudentModalController.close()>x</a></div><div class=modal-body><ul style=list-style:none><li class=modal-inputwrapper><div class=row><div class=col-md-6><div class=modal-infoheader>FIRST NAME</div><div><input class=modal-username-input ng-model=AddStudentModalController.firstName type=text placeholder=\\\"First Name\\\"> <span class=modal-errortext>{{AddStudentModalController.errorText.first}}</span></div></div><div class=col-md-6><div class=modal-infoheader>LAST NAME</div><div><input class=modal-username-input ng-model=AddStudentModalController.lastName type=text placeholder=\\\"Last Name\\\"> <span class=modal-errortext>{{AddStudentModalController.errorText.last}}</span></div></div></div></li><li class=modal-inputwrapper><div class=modal-infoheader>STUDENT ID</div><div><input class=modal-username-input ng-model=AddStudentModalController.studentID type=text placeholder=\\\"Student ID\\\"> <span class=modal-errortext>{{AddStudentModalController.errorText.id}}</span></div></li><li class=modal-inputwrapper><div class=modal-infoheader>STUDENT EMAIL</div><div><input class=modal-username-input ng-model=AddStudentModalController.email type=text placeholder=name@institution.edu> <span class=modal-errortext>{{AddStudentModalController.errorText.email}}</span></div></li><li style=height:20px><button class=\\\"btn btn-primary\\\" style=float:right ng-click=AddStudentModalController.addStudent()>Add Student</button></li></ul></div>\");\n$templateCache.put(\"app/assignments/assignments.html\",\"<div style=\\\"height:100%; width:100%\\\"><div class=assignments-wrapper><div class=assignments-full-left-area><div ng-class=\\\"!assignments.showDetails ? \\'assignments-leftside\\' : \\'assignments-leftside-small\\'\\\"><div class=assignments-leftbox><div class=assignments-header><div class=assignments-coursename>{{assignments.activeCourse().name}}</div></div><button class=\\\"btn btn-positive assignments-addassignmentbutton\\\" ng-click=\\\"assignments.openAddAssignment(\\'lg\\')\\\">Add Assignment</button><div class=assignmentName-background><ul class=assignments-assignmentlist><li ng-repeat=\\\"assignment in assignments.activeCourse().assignments\\\"><div class=assignment-assignlistwrapper><div class=assignments-assignmentname><label for=assignmentInput></label><input maxlength=20 id=assignmentInput class=leftside-assignmentname-input type=text ng-model=assignment.name ng-click=assignments.clickAssignment(assignment.id)></div><div class=calendarWrapper><button type=button class=\\\"btn btn-default\\\" ng-click=\\\"assignment.datepickerOpen=true\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></button></div><div class=calendarInput><input type=text datepicker-append-to-body=true class=form-control uib-datepicker-popup=fullDate ng-model=assignment.dueDate is-open=assignment.datepickerOpen datepicker-options=\\\"{zIndexOffset: 5000}\\\" datepicker-append-to-body=true ng-required=true close-text=Close alt-input-formats=altInputFormats></div></div></li></ul></div></div></div></div><div class=assignments-full-right-area ng-show=assignments.showDetails><div ng-class=\\\"assignments.showDetails ? \\'assignments-rightside-on\\' : \\'assignments-rightside-off\\'\\\"><div class=assignments-rightbox><div class=rightbox-Header><input maxlength=20 size=20 id=assignmentInput type=text ng-model=assignments.activeAssignment().name> <a href=\\\"\\\" ng-click=\\\"assignments.showDetails=false\\\">x</a></div><div class=rightbox-descriptionTitle><h4>Description</h4></div><div class=rightbox-descriptioninput><textarea ng-model=assignments.activeAssignment().description maxlength=1000></textarea></div><div class=rightbox-piechart><canvas height=100% width=100% id=pie class=\\\"chart chart-pie\\\" chart-data=assignments.activeAssignment().gradeArray chart-labels=assignments.labelArray></canvas></div><hr class=rightbox-divider><div class=rightbox-pointswrapper><span>Points: <input type=number min=0 ng-model=assignments.activeAssignment().points> </span><span style=\\\"margin-top:1px; float:right; margin-right:32px\\\"><button class=\\\"btn btn-sm btn-primary\\\" ng-click=\\\"assignments.submitAssignmentChanges(assignments.activeAssignment(), assignments.activeCourse());\\\">Submit</button></span></div><hr class=rightbox-divider><h4 class=rightbox-gradesheader>Grades</h4><div class=rightbox-gradesarea><ul><li ng-repeat=\\\"student in assignments.activeCourse().students\\\"><span class=rightbox-studentname>{{student.name}}</span><div class=rightbox-studentGradeWrapper><span>{{student.assignmentGrades[assignments.activeAssignment().id] / assignments.activeAssignment().points * 100 | number:2}}%</span> <input type=number min=0 ng-model=student.assignmentGrades[assignments.activeAssignment().id] , ng-focus=\\\"student.oldAssignmentGrades[assignments.activeAssignment().id] = student.assignmentGrades[assignments.activeAssignment().id]\\\" ng-blur=\\\"assignments.changeGradeArray(assignments.activeAssignment(), student); assignments.SendModifiedGrade(assignments.activeAssignment(), student)\\\"></div></li></ul></div></div></div></div></div></div>\");\n$templateCache.put(\"app/dashboard/dashboard.html\",\"<div style=\\\"overflow-y:auto; width:100%; height:100%; position:absolute; overflow-x:hidden; background:lightblue; padding-left:10px; padding-right:10px; padding-bottom:10px\\\"><!--card--><div class=row style=\\\"margin-top:10px; margin-left:5px; margin-right:5px; margin-bottom:10px\\\"><div class=col-md-12 style=\\\"background:white; border-radius:20px\\\"><div class=row><div class=col-md-6><h1>Welcome, {{dashboardCtrl.professorName()}}</h1><ul><li><h3>Classes managed: {{dashboardCtrl.getCourses().length}}</h3></li><li><h3>Total students enrolled: {{dashboardCtrl.studentsEnrolled()}}</h3></li></ul></div><div class=col-md-6><h1 style=text-align:center>Your class averages</h1><canvas id=bar class=\\\"chart chart-bar\\\" chart-data=dashboardCtrl.gradeAverageArray chart-labels=dashboardCtrl.courseNameArray chart-series=dashboardCtrl.series></canvas></div></div></div></div><div class=row ng-repeat=\\\"course in dashboardCtrl.getCourses()\\\" style=\\\"margin-top:10px; margin-left:5px; margin-right:5px; margin-bottom:10px\\\"><div class=col-md-12 style=\\\"background:white; border-radius:20px\\\"><div class=row><div class=col-md-10><h1>{{course.name}}</h1><h3>Students: {{ course.students.length }}</h3><div style=\\\"padding-bottom:10px; width:110%\\\"><timeline items=dashboardCtrl.items()[$index] options=dashboardCtrl.options></timeline></div></div><div class=col-md-2><div class=row><div class=col-md-12 style=text-align:right><h4>Grade breakdown</h4></div></div><ul style=list-style:none><li ng-repeat=\\\"i in [0,1,2,3,4]\\\"><div class=col-md-12><h5 style=float:right>{{dashboardCtrl.getGradeArray(course)[i].grade}}: {{dashboardCtrl.getGradeArray(course)[i].amount}}</h5></div></li></ul></div></div></div></div></div>\");\n$templateCache.put(\"app/grades/grades.html\",\"<head><style>table, th, td{\\n      border: 1px solid grey;\\n      border-collapse: collapse;\\n      padding: 5px;\\n    }\\n\\n    table tr:nth-child(odd){\\n      background-color: #f2f2f2;\\n    }\\n\\n    table tr:nth-child(even){\\n      background-color: #ffffff;\\n    }</style></head><body><h2>Grades for Students</h2><div ng-controller=GradesController as vm style=\\\"100%; width:100%\\\"><table border=0><tr><td>Last Name</td><td>First Name</td><td>Grade Percentage</td><td>Grade Letter</td></tr><tr ng-repeat=\\\"course in courses.student460\\\"><td>{{student46.first}}</td><td>{{student46.last}}</td><td>{{student46.percent}}</td><td>{{student46.letter}}</td></tr></table><div class=grades-wrapper></div></div></body>\");\n$templateCache.put(\"app/information/information.html\",\"<div style=\\\"width:100%; height:100%; overflow-x: hidden\\\"><div class=information-course-area><div class=information-main><div style=\\\"float:right; margin-bottom:5px\\\"><button type=button class=\\\"btn btn-primary\\\" ng-click=information.fillSyllabus()>Fill Syllabus</button></div><div style=\\\"overflow:hidden; border-radius:10px; padding-left:10px; padding-right:10px; background:#e9eef5; border:thin solid #000000; position:relative; left:0; width:100%; top:0; height:100%\\\"><div style=\\\"background:#d4e4fa; border-bottom:thin solid #000000;  height:35px; margin-left:-10px; margin-right:-10px\\\"><div style=\\\"padding-top:4px; padding-left:10px;font-size:20px\\\">{{information.activeCourse().name}}</div></div><div style=\\\"margin-top:10px; margin-bottom:10px; overflow:auto; background:#FFFFFF\\\"><div class=infoSection><label for=classInfo style=\\\"display: block\\\"><div style=\\\"margin-bottom: -26px\\\">Description</div><button type=button class=\\\"btn btn-default infoButton\\\" ng-click=information.toggleDisable1()><span class=\\\"glyphicon glyphicon-edit\\\"></span></button></label><textarea class=form-control id=classInfo rows=8 ng-disabled=!information.editDesStatus() ng-model=information.activeCourse().tempDescription></textarea><!--<input type=\\\"submit\\\" ng-disabled=\\\"!editInfo\\\" ng-click=\\\"toggleDisable1()\\\">--><br><button type=button class=\\\"btn btn-primary\\\" ng-disabled=!information.editDesStatus() ng-click=information.submitNewDesc()>Submit</button></div></div></div></div></div><!--instructor area--><div class=information-instructor-area><div class=information-main><div style=\\\"overflow:hidden; border-radius:10px; padding-left:10px; padding-right:10px; background:#e9eef5; border:thin solid #000000; position:relative; left:0; width:100%; top:0; height:100%\\\"><div style=\\\"background:#d4e4fa; border-bottom:thin solid #000000;  height:35px; margin-left:-10px; margin-right:-10px\\\"><div style=\\\"padding-top:4px; padding-left:10px;font-size:20px\\\">Professor Information</div></div><div style=\\\"margin-top:10px; margin-bottom:10px; overflow:auto; background:#FFFFFF\\\"><div class=infoSection><table class=table style=\\\"margin-bottom: -10px\\\"><tbody><tr><th>Name</th><td>{{information.instName}}</td></tr><tr><th>Email</th><td>{{information.email}}</td></tr><tr><th>Phone</th><td>{{information.phone}}</td></tr><tr><th>Office Hours</th><td>{{information.officeHours.office}}<br>{{information.officeHours.time}}</td></tr></tbody></table><!--form inputs for name, email, phone, and office hours--><!--<table class=\\\"table table-bordered\\\" style=\\\"margin-bottom:0px;\\\">\\n              <tr><td>\\n\t\t\t\t\t\t\t\t<form class=\\\"form-inline\\\">\\n\t                <div class=\\\"form-group\\\" style=\\\"text-align:center; width:100%;\\\">\\n\t                    <label style=\\\"float:left;\\\" for=\\\"profName\\\">Name</label>\\n\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"profName\\\" placeholder=\\\"{{information.instName}}\\\">\\n\t                </div>\\n              \t</form>\\n\t\t\t\t\t\t\t</td></tr>\\n\\n\t\t\t\t\t\t\t<tr><td>\\n              \t<form class=\\\"form-inline\\\">\\n                \t<div class=\\\"form-group\\\" style=\\\"text-align:center; width:100%;\\\">\\n                    <label style=\\\"float:left;\\\" for=\\\"profEmail\\\">Email</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"profEmail\\\" placeholder=\\\"{{information.email}}\\\">\\n              \t\t</div>\\n            \t\t</form>\\n\t\t\t\t\t\t\t</td></tr>\\n\\n\t\t\t\t\t\t\t<tr><td>\\n              \t<form class=\\\"form-inline\\\">\\n                \t<div class=\\\"form-group\\\" style=\\\"text-align:center; width:100%;\\\">\\n                    <label style=\\\"float:left;\\\" for=\\\"profName\\\">Phone</label>\\n                    <input style=\\\"margin-left:-7px;\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"profPhone\\\" placeholder=\\\"{{information.phone}}\\\">\\n                \t</div>\\n            \t\t</form>\\n\t\t\t\t\t\t\t</td></tr>\\n\\n\t\t\t\t\t\t\t<tr><td>\\n              \t<form class=\\\"form-inline\\\">\\n                \t<div class=\\\"form-group\\\" style=\\\"text-align:center; width:100%;\\\">\\n                    <label style=\\\"float:left;\\\" for=\\\"profOffice\\\">Office Hours</label>\\n                    <input style=\\\"margin-left:-49px;\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"profOffice\\\" placeholder=\\\"TBE-B 212\\\">\\n                \t</div>\\n              \t</form>\\n\\n              \t<form class=\\\"form-inline\\\">\\n                \t<div class=\\\"form-group\\\" style=\\\"text-align:center; width:100%;\\\">\\n                    <input style=\\\"margin-left:37px;\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"profHours\\\" placeholder=\\\"Monday 2:00 - 3:00pm\\\">\\n                \t</div>\\n              \t</form>\\n\t\t\t\t\t\t\t</td></tr>\\n\t\t\t\t\t\t</table>--><!--OLD STUFF--><!-- Section for Instructor --><!--<section class=\\\"col-xs-9\\\">\\n                <div class=\\\"infoHeader\\\">\\n                  <h3> Instructor Information\\n                  <lable>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default infoButton\\\" ng-click=\\\"toggleDisable2()\\\">\\n                    <span class=\\\"glyphicon glyphicon-edit\\\"></span>\\n                    </button>\\n                  </lable>\\n                  </h3>\\n                </div>\\n\\n                <div class=\\\"infoSection\\\">\\n                  <label>\\n                    <ul class=\\\"list-group\\\">\\n                      <br>\\n                      <li class=\\\"list-group-item\\\">\\n                        Name: <input type=\\\"text\\\" value=\\\"{{profile.firstName}}{{profile.lastName}} \\\" ng-disabled=\\\"!editInfo\\\"><br>\\n                      </li>\\n                      <br>\\n                      <li class=\\\"list-group-item\\\">\\n                        Email: <input type=\\\"text\\\" value=\\\"{{profile.email}}\\\" ng-disabled=\\\"!editInfo\\\"><br>\\n                      </li>\\n                      <br>\\n                      <li class=\\\"list-group-item\\\">\\n                        Phone: <input type=\\\"text\\\" value=\\\"{{profile.email}}\\\" ng-disabled=\\\"!editInfo\\\"><br>\\n                      </li>\\n                      <br>\\n                      <li class=\\\"list-group-item\\\">\\n                        Office Houes: <input type=\\\"text\\\" value=\\\"{{profile.office}}\\\" ng-disabled=\\\"!editInfo\\\">\\n                                 <input type=\\\"text\\\" value=\\\"{{profile.hours}}\\\" ng-disabled=\\\"!editInfo\\\"><br>\\n                      </li>--><!-- <input type=\\\"submit\\\" ng-disabled=\\\"!editInfo\\\" ng-click=\\\"toggleDisable2()\\\"> --><!--</label>\\n                </div>\\n              </section>--><!-- Section for TA   (the bottom not works yet)--><!--<section class=\\\"col-xs-9\\\">\\n\\n                <div class=\\\"infoHeader\\\">\\n                  <h3> Teacher\\'s Assistant\\n                    <lable>\\n                      <button type=\\\"button\\\" class=\\\"btn btn-default infoButton\\\" ng-click=\\\"toggleDisable3()\\\">\\n                        <span class=\\\"glyphicon glyphicon-plus\\\"></span>\\n                      </button>\\n                    </lable>\\n                  </h3>\\n                </div>\\n\\n                <div class=\\\"infoSection\\\" ng-show=\\\"!ShowTab\\\">\\n                  <lable>\\n                    <ul class=\\\"list-group\\\">\\n                      <br>\\n                      <li class=\\\"list-group-item\\\">\\n                        Name: <input type=\\\"text\\\" value=\\\"{{profile.firstName}}{{profile.lastName}} \\\" ng-disabled=\\\"!editInfo\\\"><br>\\n                      </li>\\n                      <br>\\n                      <li class=\\\"list-group-item\\\">\\n                        Email: <input type=\\\"text\\\" value=\\\"{{profile.email}}\\\" ng-disabled=\\\"!editInfo\\\"><br>\\n                      </li>\\n                    </lable>\\n                  </div>\\n                </div>\\n              </section>--></div></div></div></div></div></div>\");\n$templateCache.put(\"app/information/syllabus.html\",\"<div ng-controller=\\\"InformationController as vm\\\" style=\\\"height:100%; width:100%\\\"></div>\");\n$templateCache.put(\"app/login/LoginModal.html\",\"<div class=modal-header><h1 style=\\\"margin-top:10px; text-align:center\\\">Log In</h1><a href=\\\"\\\" class=modal-closebutton ng-click=LoginModalController.close()>x</a></div><div class=modal-body><ul style=list-style:none><li class=modal-inputwrapper><div class=modal-infoheader>EMAIL ADDRESS</div><div><input class=modal-password-input type=text ng-model=LoginModalController.username placeholder=name@company.com> <span class=modal-errortext style=margin-left:-40px>{{LoginModalController.errorText.username}}</span></div></li><li class=modal-inputwrapper><div class=modal-infoheader>PASSWORD</div><div><input class=modal-password-input type=password ng-model=LoginModalController.password placeholder=Password> <span class=modal-errortext style=margin-left:-40px>{{LoginModalController.errorText.password}}</span></div></li><li style=height:20px><span class=modal-errortext style=\\\"position:absolute; left:15px; bottom:20px\\\">{{LoginModalController.errorText.login}}</span> <button class=\\\"btn btn-primary\\\" style=float:right ng-click=LoginModalController.login()>Log In</button></li></ul></div>\");\n$templateCache.put(\"app/signup/signupModal.html\",\"<div class=modal-header><h1 style=\\\"margin-top:10px; text-align:center\\\">Sign Up</h1><a href=\\\"\\\" class=modal-closebutton ng-click=signupModalController.close()>x</a></div><div class=modal-body><ul style=list-style:none><li class=modal-inputwrapper><div class=row><div class=col-md-6><div class=modal-infoheader>FIRST NAME</div><div><input class=modal-username-input type=text ng-model=signupModalController.firstName placeholder=\\\"\\\"> <span class=modal-errortext>{{signupModalController.errorText.first}}</span></div></div><div class=col-md-6><div class=modal-infoheader>LAST NAME</div><div><input class=modal-username-input type=text ng-model=signupModalController.lastName placeholder=\\\"\\\"> <span class=modal-errortext>{{signupModalController.errorText.last}}</span></div></div></div></li><li class=modal-inputwrapper><div class=row><div class=col-md-6><div class=modal-infoheader>USERNAME</div><div><input class=modal-username-input type=text ng-model=signupModalController.username placeholder=Username> <span class=modal-errortext>{{signupModalController.errorText.username}}</span></div></div><div class=col-md-6><div class=modal-infoheader>STUDENT ID</div><div><input class=modal-username-input type=text ng-model=signupModalController.studentID placeholder=\\\"\\\"> <span class=modal-errortext>{{signupModalController.errorText.id}}</span></div></div></div></li><li class=modal-inputwrapper><div class=row><div class=col-md-6><div class=modal-infoheader>EMAIL ADDRESS</div><div><input class=modal-username-input type=text ng-model=signupModalController.email placeholder=name@company.com> <span class=modal-errortext>{{signupModalController.errorText.email}}</span></div></div><div class=col-md-6><div class=modal-infoheader>ACCOUNT TYPE</div><div style=margin-left:-40px class=btn-group data-toggle=buttons><label ng-class=\\\"signupModalController.type==\\'student\\' ? \\'btn btn-primary\\' : \\'btn btn-primary active\\'\\\"><input type=radio name=options ng-model=signupModalController.type value=instructor autocomplete=off checked> Instructor</label><label ng-class=\\\"signupModalController.type==\\'student\\' ? \\'btn btn-primary active\\' : \\'btn btn-primary\\'\\\"><input type=radio name=options ng-model=signupModalController.type value=student autocomplete=off> Student</label></div></div></div></li><li class=modal-inputwrapper><div class=modal-infoheader>PASSWORD</div><div><input class=modal-username-input type=password ng-model=signupModalController.password placeholder=Password> <span class=modal-errortext>{{signupModalController.errorText.password}}</span></div></li><li style=height:20px><button class=\\\"btn btn-primary\\\" style=float:right ng-click=signupModalController.signup()>Sign Up</button></li></ul></div>\");\n$templateCache.put(\"app/students/students.html\",\"<div ng-controller=\\\"StudentsController as vm\\\" style=\\\"height:100%; width:100%\\\"><div class=students-wrapper><div class=students-full-main-area><div class=students-main><div style=\\\"overflow:hidden; border-radius:10px; padding-left:10px; padding-right:10px; background:#e9eef5; border:thin solid #000000; position:relative; left:0; width:100%; top:0; height:100%\\\"><div style=\\\"background:#d4e4fa; border-bottom:thin solid #000000;  height:35px; margin-left:-10px; margin-right:-10px\\\"><div style=\\\"padding-top:4px; padding-left:10px;font-size:20px\\\">{{vm.activeCourse().name}}</div><div><button ng-click=\\\"students.openAddStudentModal(\\'lg\\')\\\" class=\\\"btn btn-primary btn-sm\\\" style=\\\"position:absolute; right:5px; top:2px\\\">Add Student</button></div></div><div style=\\\"margin-top:10px; margin-bottom:10px; height:calc(100vh - 170px); overflow:auto; background:#d1c4e9; box-shadow: 10px 10px 5px #888888\\\"><!--Switching to BS table--><table class=\\\"table table-striped\\\"><thead><tr><th>Last Name</th><th>First Name</th><th>Grade</th><th>E-mail</th><th>ID</th></tr></thead><tbody><tr ng-repeat=\\\"student in students.list()\\\"><td>{{student.lastName}}</td><td>{{student.firstName}}</td><td>{{students.overallGrade(student) | number:2 }}%</td><td>{{student.email}}</td><td>{{student.studentID}}</td><td><button class=\\\"btn btn-danger btn-sm glyphicon glyphicon-remove students-removebutton\\\" ng-click=students.removeStudent(student)></button></td></tr></tbody></table></div></div></div></div></div></div>\");}]);"],"sourceRoot":"/source/"}